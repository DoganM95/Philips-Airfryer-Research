.class public Lio/ktor/utils/io/ByteBufferChannel;
.super Ljava/lang/Object;
.source "ByteBufferChannel.kt"

# interfaces
.implements Lio/ktor/utils/io/ByteChannel;
.implements Lio/ktor/utils/io/ByteReadChannel;
.implements Lio/ktor/utils/io/ByteWriteChannel;
.implements Lio/ktor/utils/io/LookAheadSuspendSession;
.implements Lio/ktor/utils/io/HasReadSession;
.implements Lio/ktor/utils/io/HasWriteSession;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/ktor/utils/io/ByteBufferChannel$Companion;
    }
.end annotation

.annotation runtime Lkotlin/Metadata;
    bv = {
        0x1,
        0x0,
        0x3
    }
    d1 = {
        "\u0000\u00d2\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0008\n\u0000\n\u0002\u0018\u0002\n\u0002\u0008\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0008\n\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\u0008\u000b\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0008\u0003\n\u0002\u0018\u0002\n\u0002\u0008\u0005\n\u0002\u0018\u0002\n\u0002\u0008\u0003\n\u0002\u0010\u0012\n\u0002\u0008\u0003\n\u0002\u0010\u0004\n\u0002\u0008\u0002\n\u0002\u0018\u0002\n\u0002\u0008*\n\u0002\u0018\u0002\n\u0002\u0008\t\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0019\n\u0000\n\u0002\u0018\u0002\n\u0002\u0008\u0003\n\u0002\u0010\t\n\u0002\u0008\u0008\n\u0002\u0018\u0002\n\u0002\u0010\u0003\n\u0002\u0008\u0008\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0000\n\u0002\u0008\u0005\n\u0002\u0018\u0002\n\u0002\u0008\u0004\n\u0002\u0018\u0002\n\u0002\u0008\u0006\n\u0002\u0018\u0002\n\u0002\u0008\u0016\n\u0002\u0018\u0002\n\u0002\u0008\u0008\n\u0002\u0018\u0002\n\u0002\u0008\u0005\n\u0002\u0010\u0005\n\u0000\n\u0002\u0010\n\n\u0002\u0008\u0003\n\u0002\u0010\u0007\n\u0000\n\u0002\u0010\u0006\n\u0002\u0008\u001c\n\u0002\u0018\u0002\n\u0002\u0008\u0014\n\u0002\u0018\u0002\n\u0002\u0008\u0003\n\u0002\u0018\u0002\n\u0002\u0008\u0004\n\u0002\u0018\u0002\n\u0002\u0008\"\n\u0002\u0010\u000e\n\u0002\u0008\u0011\n\u0002\u0018\u0002\n\u0002\u0008\u0002\n\u0002\u0018\u0002\n\u0002\u0008\u0006\n\u0002\u0018\u0002\n\u0002\u0008\u000b\n\u0002\u0018\u0002\n\u0002\u0008\u0019\n\u0002\u0018\u0002\n\u0002\u0008 \u0008\u0010\u0018\u0000 \u008f\u00032\u00020\u00012\u00020\u00022\u00020\u00032\u00020\u00042\u00020\u00052\u00020\u0006:\u0002\u008f\u0003B0\u0012\u0007\u0010\u0082\u0003\u001a\u00020\u0018\u0012\u0011\u0008\u0002\u0010\u00f1\u0002\u001a\n\u0012\u0005\u0012\u00030\u0096\u00010\u00f0\u0002\u0012\t\u0008\u0002\u0010\u00c6\u0002\u001a\u00020\u0007\u00a2\u0006\u0006\u0008\u008c\u0003\u0010\u008d\u0003B\u0013\u0008\u0016\u0012\u0007\u0010\u008e\u0003\u001a\u00020\u000c\u00a2\u0006\u0005\u0008\u008c\u0003\u0010DJ\u0017\u0010\n\u001a\u00020\t2\u0006\u0010\u0008\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008\n\u0010\u000bJ+\u0010\u0011\u001a\u00020\t*\u00020\u000c2\u0006\u0010\u000e\u001a\u00020\r2\u0006\u0010\u000f\u001a\u00020\u00072\u0006\u0010\u0010\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008\u0011\u0010\u0012J\u0011\u0010\u0013\u001a\u0004\u0018\u00010\u000cH\u0002\u00a2\u0006\u0004\u0008\u0013\u0010\u0014J\u000f\u0010\u0015\u001a\u00020\tH\u0002\u00a2\u0006\u0004\u0008\u0015\u0010\u0016J\u001f\u0010\u001b\u001a\u00020\u001a2\u0006\u0010\u0017\u001a\u00020\u00002\u0006\u0010\u0019\u001a\u00020\u0018H\u0002\u00a2\u0006\u0004\u0008\u001b\u0010\u001cJ\u0017\u0010\u001e\u001a\u00020\u00182\u0006\u0010\u001d\u001a\u00020\u001aH\u0002\u00a2\u0006\u0004\u0008\u001e\u0010\u001fJ\u0017\u0010!\u001a\u00020\u00182\u0006\u0010 \u001a\u00020\u0018H\u0002\u00a2\u0006\u0004\u0008!\u0010\"J\u001b\u0010$\u001a\u00020\u0007*\u00020\u000c2\u0006\u0010#\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008$\u0010%J0\u0010)\u001a\u00020\t2\u001e\u0010(\u001a\u001a\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\'\u0012\u0004\u0012\u00020\t0&H\u0082\u0008\u00a2\u0006\u0004\u0008)\u0010*J*\u0010,\u001a\u00020\u00182\u0018\u0010(\u001a\u0014\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\'\u0012\u0004\u0012\u00020\u00180+H\u0082\u0008\u00a2\u0006\u0004\u0008,\u0010-J\u0017\u0010/\u001a\u00020\u00072\u0006\u0010.\u001a\u00020\u000cH\u0002\u00a2\u0006\u0004\u0008/\u00100J+\u0010/\u001a\u00020\u00072\u0006\u0010.\u001a\u0002012\u0008\u0008\u0002\u00102\u001a\u00020\u00072\u0008\u0008\u0002\u00103\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008/\u00104J\'\u0010/\u001a\u00020\u00072\u0006\u0010.\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008/\u00108J9\u0010>\u001a\u00028\u0000\"\u0008\u0008\u0000\u0010:*\u0002092\u0006\u0010;\u001a\u00020\u00072\u0012\u0010=\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00028\u00000<H\u0082H\u00f8\u0001\u0000\u00a2\u0006\u0004\u0008>\u0010?J\u001b\u0010A\u001a\u00020\t*\u00020\u000c2\u0006\u0010@\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008A\u0010BJ\u0013\u0010C\u001a\u00020\t*\u00020\u000cH\u0002\u00a2\u0006\u0004\u0008C\u0010DJ#\u0010G\u001a\u00020\t*\u00020\u000c2\u0006\u0010E\u001a\u00020\'2\u0006\u0010F\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008G\u0010HJ#\u0010I\u001a\u00020\t*\u00020\u000c2\u0006\u0010E\u001a\u00020\'2\u0006\u0010F\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008I\u0010HJ!\u0010L\u001a\u0004\u0018\u00010\u00002\u0006\u0010J\u001a\u00020\u00002\u0006\u0010K\u001a\u00020\u001aH\u0002\u00a2\u0006\u0004\u0008L\u0010MJ/\u0010N\u001a\u00020\t2\u0006\u0010\u001d\u001a\u00020\u001a2\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\t0<H\u0082H\u00f8\u0001\u0000\u00a2\u0006\u0004\u0008N\u0010OJC\u0010R\u001a\u00020\t2\u0006\u0010;\u001a\u00020\u00072\u0012\u0010P\u001a\u000e\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\t0<2\u0012\u0010Q\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0082H\u00f8\u0001\u0000\u00a2\u0006\u0004\u0008R\u0010SJ8\u0010U\u001a\u00020\u0018*\u00020\u000c2\u0006\u0010;\u001a\u00020\u00072\u0006\u0010E\u001a\u00020\'2\u0012\u0010T\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0082\u0008\u00a2\u0006\u0004\u0008U\u0010VJ<\u0010X\u001a\u00020\t2\u0006\u0010;\u001a\u00020\u00072\u0006\u0010W\u001a\u00020\u000c2\u0006\u0010E\u001a\u00020\'2\u0012\u0010T\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0082\u0008\u00a2\u0006\u0004\u0008X\u0010YJO\u0010Z\u001a\u00020\t*\u00020\u000c2\u0006\u0010;\u001a\u00020\u00072\u0006\u0010E\u001a\u00020\'2\u0012\u0010P\u001a\u000e\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\t0<2\u0012\u0010Q\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0082H\u00f8\u0001\u0000\u00a2\u0006\u0004\u0008Z\u0010[J\'\u0010\\\u001a\u00020\t2\u0012\u0010P\u001a\u000e\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\t0<H\u0082H\u00f8\u0001\u0000\u00a2\u0006\u0004\u0008\\\u0010]J\u0017\u0010^\u001a\u00020\t2\u0006\u0010\u001d\u001a\u00020\u001aH\u0002\u00a2\u0006\u0004\u0008^\u0010_J\u0017\u0010a\u001a\u00020\u00072\u0006\u0010`\u001a\u00020\u000cH\u0002\u00a2\u0006\u0004\u0008a\u00100J\u0017\u0010a\u001a\u00020\u00072\u0006\u0010`\u001a\u000201H\u0002\u00a2\u0006\u0004\u0008a\u0010bJ\'\u0010a\u001a\u00020\u00072\u0006\u0010`\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0002\u00a2\u0006\u0004\u0008a\u00108J#\u0010c\u001a\u00020\u00182\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\u00180<H\u0002\u00a2\u0006\u0004\u0008c\u0010dJ3\u0010e\u001a\u00020\u00182\u0006\u0010.\u001a\u00020\u000c2\u0006\u0010E\u001a\u00020\'2\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\u00180<H\u0002\u00a2\u0006\u0004\u0008e\u0010fJ\u0017\u0010i\u001a\u00020\u00072\u0006\u0010h\u001a\u00020gH\u0002\u00a2\u0006\u0004\u0008i\u0010jJ2\u0010m\u001a\u00020\u00182\u0006\u0010k\u001a\u00020\u00182\u0018\u0010l\u001a\u0014\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\u0018\u0012\u0004\u0012\u00020\u00180+H\u0082\u0008\u00a2\u0006\u0004\u0008m\u0010nJ\u001f\u0010o\u001a\u00020\u00072\u0006\u0010W\u001a\u00020\u000c2\u0006\u0010E\u001a\u00020\'H\u0002\u00a2\u0006\u0004\u0008o\u0010pJl\u0010}\u001a\u00020\u0018*\u00020q2\n\u0010t\u001a\u00060rj\u0002`s2\u0006\u0010v\u001a\u00020u2\u0006\u0010x\u001a\u00020w2\u0012\u0010y\u001a\u000e\u0012\u0004\u0012\u00020\u0007\u0012\u0004\u0012\u00020\u00180<2\u0012\u0010z\u001a\u000e\u0012\u0004\u0012\u00020\u0007\u0012\u0004\u0012\u00020\t0<2\u0012\u0010|\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020{0<H\u0082\u0008\u00a2\u0006\u0004\u0008}\u0010~J#\u0010\u0081\u0001\u001a\u00020g2\u0006\u0010\u007f\u001a\u00020{2\u0007\u0010\u0080\u0001\u001a\u00020\u0007H\u0002\u00a2\u0006\u0006\u0008\u0081\u0001\u0010\u0082\u0001J\u0011\u0010\u0083\u0001\u001a\u00020\tH\u0002\u00a2\u0006\u0005\u0008\u0083\u0001\u0010\u0016J$\u0010\u0083\u0001\u001a\u00020\t2\u000f\u0010\u0086\u0001\u001a\n\u0012\u0005\u0012\u00030\u0085\u00010\u0084\u0001H\u0082\u0008\u00a2\u0006\u0006\u0008\u0083\u0001\u0010\u0087\u0001J\u0011\u0010\u0088\u0001\u001a\u00020\tH\u0002\u00a2\u0006\u0005\u0008\u0088\u0001\u0010\u0016J\u001e\u0010\u008a\u0001\u001a\u00020\t2\n\u0010\u0089\u0001\u001a\u0005\u0018\u00010\u0085\u0001H\u0002\u00a2\u0006\u0006\u0008\u008a\u0001\u0010\u008b\u0001J\u001b\u0010\u008c\u0001\u001a\u00020\u00182\u0006\u0010;\u001a\u00020\u0007H\u0082\u0008\u00a2\u0006\u0006\u0008\u008c\u0001\u0010\u008d\u0001J+\u0010\u0091\u0001\u001a\u00030\u0090\u00012\u0006\u0010;\u001a\u00020\u00072\u000e\u0010\u008f\u0001\u001a\t\u0012\u0004\u0012\u00020\u00180\u008e\u0001H\u0002\u00a2\u0006\u0006\u0008\u0091\u0001\u0010\u0092\u0001J\u0012\u0010\u0093\u0001\u001a\u00020\u0018H\u0002\u00a2\u0006\u0006\u0008\u0093\u0001\u0010\u0094\u0001J\u001a\u0010\u0095\u0001\u001a\u00020\u00182\u0006\u0010;\u001a\u00020\u0007H\u0002\u00a2\u0006\u0006\u0008\u0095\u0001\u0010\u008d\u0001J\u0013\u0010\u0097\u0001\u001a\u00030\u0096\u0001H\u0002\u00a2\u0006\u0006\u0008\u0097\u0001\u0010\u0098\u0001J\u001b\u0010\u0099\u0001\u001a\u00020\t2\u0007\u0010W\u001a\u00030\u0096\u0001H\u0002\u00a2\u0006\u0006\u0008\u0099\u0001\u0010\u009a\u0001J\u0013\u0010\u009e\u0001\u001a\u00030\u009b\u0001H\u0000\u00a2\u0006\u0006\u0008\u009c\u0001\u0010\u009d\u0001J\u0014\u0010\u00a1\u0001\u001a\u0004\u0018\u00010\u001aH\u0000\u00a2\u0006\u0006\u0008\u009f\u0001\u0010\u00a0\u0001J\u001c\u0010\u00a4\u0001\u001a\u00020\t2\u0008\u0010\u00a3\u0001\u001a\u00030\u00a2\u0001H\u0016\u00a2\u0006\u0006\u0008\u00a4\u0001\u0010\u00a5\u0001J\u001e\u0010\u00a6\u0001\u001a\u00020\u00182\n\u0010\u0089\u0001\u001a\u0005\u0018\u00010\u0085\u0001H\u0016\u00a2\u0006\u0006\u0008\u00a6\u0001\u0010\u00a7\u0001J\u001e\u0010\u00a8\u0001\u001a\u00020\u00182\n\u0010\u0089\u0001\u001a\u0005\u0018\u00010\u0085\u0001H\u0016\u00a2\u0006\u0006\u0008\u00a8\u0001\u0010\u00a7\u0001J\u0011\u0010\u00a9\u0001\u001a\u00020\tH\u0016\u00a2\u0006\u0005\u0008\u00a9\u0001\u0010\u0016J\"\u0010\u00ac\u0001\u001a\u00020\t2\u0006\u0010W\u001a\u00020\u000c2\u0007\u0010\u00aa\u0001\u001a\u00020\u0007H\u0000\u00a2\u0006\u0005\u0008\u00ab\u0001\u0010BJ\u0013\u0010\u00ae\u0001\u001a\u0004\u0018\u00010\u000cH\u0000\u00a2\u0006\u0005\u0008\u00ad\u0001\u0010\u0014J\u0011\u0010\u00b0\u0001\u001a\u00020\tH\u0000\u00a2\u0006\u0005\u0008\u00af\u0001\u0010\u0016J\u0012\u0010\u00b2\u0001\u001a\u00020\u0018H\u0000\u00a2\u0006\u0006\u0008\u00b1\u0001\u0010\u0094\u0001J.\u0010\u00b3\u0001\u001a\u00020\t2\u0006\u0010.\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b3\u0001\u0010\u00b4\u0001J\u001e\u0010\u00b3\u0001\u001a\u00020\u00072\u0006\u0010.\u001a\u00020\u000cH\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b3\u0001\u0010\u00b5\u0001J\'\u0010\u00b7\u0001\u001a\u00020\u00072\u0006\u0010.\u001a\u00020\u000c2\u0007\u0010\u00b6\u0001\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b7\u0001\u0010\u00b8\u0001J\'\u0010\u00b3\u0001\u001a\u00020\t2\u0007\u0010.\u001a\u00030\u00b9\u00012\u0006\u0010@\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b3\u0001\u0010\u00ba\u0001J\'\u0010\u00b7\u0001\u001a\u00020\t2\u0007\u0010.\u001a\u00030\u00b9\u00012\u0006\u0010@\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b7\u0001\u0010\u00ba\u0001J.\u0010\u00b7\u0001\u001a\u00020\t2\u0006\u0010.\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b7\u0001\u0010\u00b4\u0001J/\u0010\u00bc\u0001\u001a\u00020\u00072\u0007\u0010\u00bb\u0001\u001a\u00020\u00072\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0016\u00a2\u0006\u0006\u0008\u00bc\u0001\u0010\u00bd\u0001J.\u0010\u00bc\u0001\u001a\u00020\u00072\u0006\u0010.\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00bc\u0001\u0010\u00b4\u0001J\u001e\u0010\u00bc\u0001\u001a\u00020\u00072\u0006\u0010.\u001a\u00020\u000cH\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00bc\u0001\u0010\u00b5\u0001J\u001f\u0010\u00bc\u0001\u001a\u00020\u00072\u0007\u0010.\u001a\u00030\u00b9\u0001H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00bc\u0001\u0010\u00be\u0001J.\u0010\u00bf\u0001\u001a\u00020\u00072\u0006\u0010.\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00bf\u0001\u0010\u00b4\u0001J\u001e\u0010\u00bf\u0001\u001a\u00020\u00072\u0006\u0010.\u001a\u00020\u000cH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00bf\u0001\u0010\u00b5\u0001J\u001f\u0010\u00bf\u0001\u001a\u00020\u00072\u0007\u0010.\u001a\u00030\u00b9\u0001H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00bf\u0001\u0010\u00be\u0001J\'\u0010\u00c0\u0001\u001a\u00020g2\u0006\u0010;\u001a\u00020\u00072\u0007\u0010\u0080\u0001\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00c0\u0001\u0010\u00c1\u0001J0\u0010\u00c4\u0001\u001a\u00020g2\u0006\u0010;\u001a\u00020\u00072\u0008\u0010\u00c3\u0001\u001a\u00030\u00c2\u00012\u0006\u0010W\u001a\u00020\u000cH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00c4\u0001\u0010\u00c5\u0001J\u0016\u0010\u00c6\u0001\u001a\u00020\u0018H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00c6\u0001\u0010\u00c7\u0001J\u0017\u0010\u00c9\u0001\u001a\u00030\u00c8\u0001H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00c9\u0001\u0010\u00c7\u0001J\u0017\u0010\u00cb\u0001\u001a\u00030\u00ca\u0001H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00cb\u0001\u0010\u00c7\u0001J\u0016\u0010\u00cc\u0001\u001a\u00020\u0007H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00cc\u0001\u0010\u00c7\u0001J\u0016\u0010\u00cd\u0001\u001a\u00020{H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00cd\u0001\u0010\u00c7\u0001J\u0017\u0010\u00cf\u0001\u001a\u00030\u00ce\u0001H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00cf\u0001\u0010\u00c7\u0001J\u0017\u0010\u00d1\u0001\u001a\u00030\u00d0\u0001H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00d1\u0001\u0010\u00c7\u0001J)\u0010\u00d3\u0001\u001a\u00020\t2\u0006\u0010W\u001a\u00020\u000c2\u0006\u0010E\u001a\u00020\'2\u0006\u0010F\u001a\u00020\u0007H\u0000\u00a2\u0006\u0005\u0008\u00d2\u0001\u0010HJ\u0012\u0010\u00d6\u0001\u001a\u00020\u0000H\u0000\u00a2\u0006\u0006\u0008\u00d4\u0001\u0010\u00d5\u0001J \u0010\u00d8\u0001\u001a\u00020\t2\u0008\u0010\u00d7\u0001\u001a\u00030\u00c8\u0001H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00d8\u0001\u0010\u00d9\u0001J \u0010\u00db\u0001\u001a\u00020\t2\u0008\u0010\u00da\u0001\u001a\u00030\u00ca\u0001H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00db\u0001\u0010\u00dc\u0001J\u001f\u0010\u00de\u0001\u001a\u00020\t2\u0007\u0010\u00dd\u0001\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00de\u0001\u0010\u0092\u0001J\u001f\u0010\u00e0\u0001\u001a\u00020\t2\u0007\u0010\u00df\u0001\u001a\u00020{H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00e0\u0001\u0010\u00e1\u0001J \u0010\u00e3\u0001\u001a\u00020\t2\u0008\u0010\u00e2\u0001\u001a\u00030\u00d0\u0001H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00e3\u0001\u0010\u00e4\u0001J \u0010\u00e6\u0001\u001a\u00020\t2\u0008\u0010\u00e5\u0001\u001a\u00030\u00ce\u0001H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00e6\u0001\u0010\u00e7\u0001J\u0016\u0010\u00e8\u0001\u001a\u00020\tH\u0097@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00e8\u0001\u0010\u00c7\u0001J\u001e\u0010\u00e9\u0001\u001a\u00020\u00072\u0006\u0010`\u001a\u00020\u000cH\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00e9\u0001\u0010\u00b5\u0001J\u001f\u0010\u00e9\u0001\u001a\u00020\u00072\u0007\u0010`\u001a\u00030\u00b9\u0001H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00e9\u0001\u0010\u00be\u0001J\u001e\u0010\u00ea\u0001\u001a\u00020\u00072\u0006\u0010`\u001a\u00020\u000cH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00ea\u0001\u0010\u00b5\u0001J\u001f\u0010\u00ea\u0001\u001a\u00020\u00072\u0007\u0010`\u001a\u00030\u00b9\u0001H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00ea\u0001\u0010\u00be\u0001J\u001e\u0010\u00eb\u0001\u001a\u00020\t2\u0006\u0010`\u001a\u00020\u000cH\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00eb\u0001\u0010\u00b5\u0001J\u001e\u0010\u00eb\u0001\u001a\u00020\t2\u0006\u0010`\u001a\u000201H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00eb\u0001\u0010\u00ec\u0001J5\u0010\u00eb\u0001\u001a\u00020\t2\u0008\u0010\u00ee\u0001\u001a\u00030\u00ed\u00012\u0007\u0010\u00ef\u0001\u001a\u00020\u00072\u0007\u0010\u00f0\u0001\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00f1\u0001\u0010\u00f2\u0001J\u001f\u0010\u00eb\u0001\u001a\u00020\t2\u0007\u0010`\u001a\u00030\u00b9\u0001H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00eb\u0001\u0010\u00be\u0001J\u001e\u0010\u00f3\u0001\u001a\u00020\t2\u0006\u0010`\u001a\u00020\u000cH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00f3\u0001\u0010\u00b5\u0001J\u001f\u0010\u00f3\u0001\u001a\u00020\t2\u0007\u0010`\u001a\u00030\u00b9\u0001H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00f3\u0001\u0010\u00be\u0001J\u0016\u0010\u00f4\u0001\u001a\u00020\tH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00f4\u0001\u0010\u00c7\u0001J&\u0010\u00f7\u0001\u001a\u00020\t2\u0006\u0010`\u001a\u00020\u00002\u0006\u0010\u0019\u001a\u00020\u0018H\u0080@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00f5\u0001\u0010\u00f6\u0001J.\u0010\u00f8\u0001\u001a\u00020\t2\u0006\u0010`\u001a\u00020\u00002\u0006\u0010\u0019\u001a\u00020\u00182\u0006\u0010\u001d\u001a\u00020\u001aH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00f8\u0001\u0010\u00f9\u0001J0\u0010\u00fc\u0001\u001a\u00020{2\u0006\u0010`\u001a\u00020\u00002\u0006\u0010\u007f\u001a\u00020{2\u0008\u0010\u001d\u001a\u0004\u0018\u00010\u001aH\u0080@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00fa\u0001\u0010\u00fb\u0001J.\u0010\u00eb\u0001\u001a\u00020\t2\u0006\u0010`\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00eb\u0001\u0010\u00b4\u0001J.\u0010\u00f3\u0001\u001a\u00020\t2\u0006\u0010`\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00f3\u0001\u0010\u00b4\u0001J.\u0010\u00e9\u0001\u001a\u00020\u00072\u0006\u0010`\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00e9\u0001\u0010\u00b4\u0001J.\u0010\u00fd\u0001\u001a\u00020\u00072\u0006\u0010`\u001a\u0002052\u0006\u00106\u001a\u00020\u00072\u0006\u00107\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00fd\u0001\u0010\u00b4\u0001J/\u0010\u00e9\u0001\u001a\u00020\u00072\u0007\u0010\u00bb\u0001\u001a\u00020\u00072\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0016\u00a2\u0006\u0006\u0008\u00e9\u0001\u0010\u00bd\u0001J2\u0010\u00fe\u0001\u001a\u00020\t2\u0007\u0010\u00bb\u0001\u001a\u00020\u00072\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0005\u0008\u00fe\u0001\u0010?J2\u0010\u00ff\u0001\u001a\u00020\t2\u0007\u0010\u00bb\u0001\u001a\u00020\u00072\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0005\u0008\u00ff\u0001\u0010?J)\u0010\u0080\u0002\u001a\u00020\t2\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\u00180<H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0005\u0008\u0080\u0002\u0010]J)\u0010\u0081\u0002\u001a\u00020\t2\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\u00180<H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0005\u0008\u0081\u0002\u0010]J\u0013\u0010\u0083\u0002\u001a\u00030\u0082\u0002H\u0016\u00a2\u0006\u0006\u0008\u0083\u0002\u0010\u0084\u0002J\u0011\u0010\u0085\u0002\u001a\u00020\tH\u0016\u00a2\u0006\u0005\u0008\u0085\u0002\u0010\u0016J\u0015\u0010\u0087\u0002\u001a\u0005\u0018\u00010\u0086\u0002H\u0016\u00a2\u0006\u0006\u0008\u0087\u0002\u0010\u0088\u0002J\u001a\u0010\u008a\u0002\u001a\u00020\t2\u0007\u0010\u0089\u0002\u001a\u00020\u0007H\u0016\u00a2\u0006\u0005\u0008\u008a\u0002\u0010\u000bJ(\u0010\u008d\u0002\u001a\u00020\t2\u0014\u0010\u008c\u0002\u001a\u000f\u0012\u0005\u0012\u00030\u008b\u0002\u0012\u0004\u0012\u00020\t0<H\u0017\u00a2\u0006\u0006\u0008\u008d\u0002\u0010\u008e\u0002J>\u0010\u008f\u0002\u001a\u00020\t2&\u0010\u008c\u0002\u001a!\u0008\u0001\u0012\u0005\u0012\u00030\u0082\u0002\u0012\u000b\u0012\t\u0012\u0004\u0012\u00020\t0\u008e\u0001\u0012\u0007\u0012\u0005\u0018\u00010\u0090\u00010+H\u0097@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u008f\u0002\u0010\u0090\u0002J3\u0010\u0091\u0002\u001a\u00020\t2\u0007\u0010\u00bb\u0001\u001a\u00020\u00072\u0013\u0010\u008c\u0002\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0005\u0008\u0091\u0002\u0010?J\u001e\u0010\u0092\u0002\u001a\u00020{2\u0006\u00103\u001a\u00020{H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u0092\u0002\u0010\u00e1\u0001J\'\u0010\u0094\u0002\u001a\u00020{2\u0007\u0010\u0093\u0002\u001a\u00020{2\u0006\u00103\u001a\u00020{H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u0094\u0002\u0010\u0095\u0002J2\u0010\u0096\u0002\u001a\u00020\t2\u0007\u0010\u00bb\u0001\u001a\u00020\u00072\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\t0<H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0005\u0008\u0096\u0002\u0010?J\u001e\u0010\u0097\u0002\u001a\u00020\t2\u0006\u0010h\u001a\u00020gH\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u0097\u0002\u0010\u0098\u0002J\u001e\u0010\u0099\u0002\u001a\u00020\t2\u0006\u0010h\u001a\u00020gH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u0099\u0002\u0010\u0098\u0002J0\u0010\u009a\u0002\u001a\u00020\t2\u0018\u0010l\u001a\u0014\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\u0018\u0012\u0004\u0012\u00020\u00180+H\u0087@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u009a\u0002\u0010\u0090\u0002J-\u0010\u009c\u0002\u001a\u00028\u0000\"\u0005\u0008\u0000\u0010\u009b\u00022\u0012\u0010l\u001a\u000e\u0012\u0004\u0012\u00020q\u0012\u0004\u0012\u00028\u00000<H\u0016\u00a2\u0006\u0006\u0008\u009c\u0002\u0010\u009d\u0002JC\u0010\u009e\u0002\u001a\u00028\u0000\"\u0005\u0008\u0000\u0010\u009b\u00022$\u0010l\u001a \u0008\u0001\u0012\u0004\u0012\u00020\u0004\u0012\u000b\u0012\t\u0012\u0004\u0012\u00028\u00000\u008e\u0001\u0012\u0007\u0012\u0005\u0018\u00010\u0090\u00010+H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u009e\u0002\u0010\u0090\u0002J=\u0010\u009f\u0002\u001a\u00020\t2%\u0010l\u001a!\u0008\u0001\u0012\u0005\u0012\u00030\u0086\u0002\u0012\u000b\u0012\t\u0012\u0004\u0012\u00020\t0\u008e\u0001\u0012\u0007\u0012\u0005\u0018\u00010\u0090\u00010+H\u0097@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u009f\u0002\u0010\u0090\u0002J\u0017\u00102\u001a\u00020\t2\u0006\u0010@\u001a\u00020\u0007H\u0016\u00a2\u0006\u0004\u00082\u0010\u000bJ\u001e\u0010\u00a0\u0002\u001a\u00020\u00182\u0006\u0010@\u001a\u00020\u0007H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00a0\u0002\u0010\u0092\u0001J\u001e\u0010\u00a1\u0002\u001a\u00020\u00182\u0006\u0010@\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00a1\u0002\u0010\u0092\u0001J&\u0010\u00a4\u0002\u001a\u0004\u0018\u00010\u000c2\u0007\u0010\u00a2\u0002\u001a\u00020\u00072\u0007\u0010\u00a3\u0002\u001a\u00020\u0007H\u0016\u00a2\u0006\u0006\u0008\u00a4\u0002\u0010\u00a5\u0002J0\u0010\u00a6\u0002\u001a\u00020\t2\u0018\u0010l\u001a\u0014\u0012\u0004\u0012\u00020\u000c\u0012\u0004\u0012\u00020\u0018\u0012\u0004\u0012\u00020\u00180+H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00a6\u0002\u0010\u0090\u0002J*\u0010\u00a7\u0002\u001a\u00020\u00182\n\u0010t\u001a\u00060rj\u0002`s2\u0006\u0010\u007f\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00a7\u0002\u0010\u00a8\u0002JC\u0010\u00aa\u0002\u001a\u00020\u00182\n\u0010t\u001a\u00060rj\u0002`s2\u0006\u0010\u007f\u001a\u00020\u00072\u0006\u0010v\u001a\u00020u2\u0006\u0010x\u001a\u00020w2\u0007\u0010\u00a9\u0002\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00aa\u0002\u0010\u00ab\u0002J5\u0010\u00ad\u0002\u001a\u00020\u0018\"\r\u0008\u0000\u0010\u00ac\u0002*\u00060rj\u0002`s2\u0006\u0010t\u001a\u00028\u00002\u0006\u0010\u007f\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00ad\u0002\u0010\u00a8\u0002J!\u0010\u00af\u0002\u001a\u0005\u0018\u00010\u00ae\u00022\u0006\u0010\u007f\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00af\u0002\u0010\u0092\u0001J\'\u0010\u00b0\u0002\u001a\u00020g2\u0006\u0010\u007f\u001a\u00020{2\u0007\u0010\u0080\u0001\u001a\u00020\u0007H\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b0\u0002\u0010\u00b1\u0002J\'\u0010\u00b2\u0002\u001a\u00020g2\u0006\u0010\u007f\u001a\u00020{2\u0007\u0010\u0080\u0001\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b2\u0002\u0010\u00b1\u0002J\u0016\u0010\u00b3\u0002\u001a\u00020\tH\u0096@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b3\u0002\u0010\u00c7\u0001J\u001e\u0010\u00b4\u0002\u001a\u00020\u00182\u0006\u0010;\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b4\u0002\u0010\u0092\u0001J\u001e\u0010\u00b5\u0002\u001a\u00020\u00182\u0006\u0010;\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b5\u0002\u0010\u0092\u0001J\u001e\u0010\u00b6\u0002\u001a\u00020\u00182\u0006\u0010;\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b6\u0002\u0010\u0092\u0001J\u001e\u0010\u00b8\u0002\u001a\u00020\t2\u0006\u0010;\u001a\u00020\u0007H\u0080@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00b7\u0002\u0010\u0092\u0001J\u001e\u0010\u00fd\u0001\u001a\u00020\t2\u0006\u0010;\u001a\u00020\u0007H\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00fd\u0001\u0010\u0092\u0001JE\u0010\u00bd\u0002\u001a\u00020{2\u0008\u0010\u00b9\u0002\u001a\u00030\u00ed\u00012\u0007\u0010\u00ba\u0002\u001a\u00020{2\u0006\u00106\u001a\u00020{2\u0007\u0010\u00bb\u0001\u001a\u00020{2\u0006\u00103\u001a\u00020{H\u0096@\u00f8\u0001\u0000\u00f8\u0001\u0000\u00a2\u0006\u0006\u0008\u00bb\u0002\u0010\u00bc\u0002J\u0013\u0010\u00be\u0002\u001a\u00030\u00ae\u0002H\u0016\u00a2\u0006\u0006\u0008\u00be\u0002\u0010\u00bf\u0002R \u0010\u00c1\u0002\u001a\t\u0012\u0004\u0012\u00020\t0\u00c0\u00028\u0002@\u0002X\u0082\u0004\u00a2\u0006\u0008\n\u0006\u0008\u00c1\u0002\u0010\u00c2\u0002R\u001a\u0010\u00c4\u0002\u001a\u00030\u00c3\u00028\u0002@\u0002X\u0082\u0004\u00a2\u0006\u0008\n\u0006\u0008\u00c4\u0002\u0010\u00c5\u0002R!\u0010\u00c6\u0002\u001a\u00020\u00078\u0000@\u0000X\u0080\u0004\u00a2\u0006\u0010\n\u0006\u0008\u00c6\u0002\u0010\u00c7\u0002\u001a\u0006\u0008\u00c8\u0002\u0010\u00c9\u0002R0\u0010\u00d0\u0002\u001a\u0005\u0018\u00010\u00ca\u00022\n\u0010\u00cb\u0002\u001a\u0005\u0018\u00010\u00ca\u00028B@BX\u0082\u000e\u00a2\u0006\u0010\u001a\u0006\u0008\u00cc\u0002\u0010\u00cd\u0002\"\u0006\u0008\u00ce\u0002\u0010\u00cf\u0002R<\u0010\u00d5\u0002\u001a\u000b\u0012\u0004\u0012\u00020\t\u0018\u00010\u008e\u00012\u0010\u0010\u00cb\u0002\u001a\u000b\u0012\u0004\u0012\u00020\t\u0018\u00010\u008e\u00018B@BX\u0082\u000e\u00a2\u0006\u0010\u001a\u0006\u0008\u00d1\u0002\u0010\u00d2\u0002\"\u0006\u0008\u00d3\u0002\u0010\u00d4\u0002R!\u0010\u008d\u0002\u001a\u00030\u00d6\u00028\u0002@\u0002X\u0082\u0004\u00a2\u0006\u000f\n\u0006\u0008\u008d\u0002\u0010\u00d7\u0002\u0012\u0005\u0008\u00d8\u0002\u0010\u0016R\u001c\u0010\u00db\u0002\u001a\u0005\u0018\u00010\u0085\u00018V@\u0016X\u0096\u0004\u00a2\u0006\u0008\u001a\u0006\u0008\u00d9\u0002\u0010\u00da\u0002R\u001a\u0010\u00dd\u0002\u001a\u00030\u009b\u00018B@\u0002X\u0082\u0004\u00a2\u0006\u0008\u001a\u0006\u0008\u00dc\u0002\u0010\u009d\u0001R\u0019\u0010\u00de\u0002\u001a\u00020\u00078\u0002@\u0002X\u0082\u000e\u00a2\u0006\u0008\n\u0006\u0008\u00de\u0002\u0010\u00c7\u0002R\u0019\u0010\u00df\u0002\u001a\u00020\u00078\u0002@\u0002X\u0082\u000e\u00a2\u0006\u0008\n\u0006\u0008\u00df\u0002\u0010\u00c7\u0002R9\u0010\u00e1\u0002\u001a\u00020\r2\u0007\u0010\u00e0\u0002\u001a\u00020\r8\u0016@VX\u0097\u000e\u00a2\u0006\u001f\n\u0006\u0008\u00e1\u0002\u0010\u00e2\u0002\u0012\u0005\u0008\u00e7\u0002\u0010\u0016\u001a\u0006\u0008\u00e3\u0002\u0010\u00e4\u0002\"\u0006\u0008\u00e5\u0002\u0010\u00e6\u0002R0\u0010\u00e8\u0002\u001a\u00020\r8\u0016@\u0016X\u0097\u000e\u00a2\u0006\u001f\n\u0006\u0008\u00e8\u0002\u0010\u00e2\u0002\u0012\u0005\u0008\u00eb\u0002\u0010\u0016\u001a\u0006\u0008\u00e9\u0002\u0010\u00e4\u0002\"\u0006\u0008\u00ea\u0002\u0010\u00e6\u0002R\u0019\u0010K\u001a\u0004\u0018\u00010\u001a8\u0002@\u0002X\u0082\u000e\u00a2\u0006\u0007\n\u0005\u0008K\u0010\u00ec\u0002R<\u0010\u00ef\u0002\u001a\u000b\u0012\u0004\u0012\u00020\u0018\u0018\u00010\u008e\u00012\u0010\u0010\u00cb\u0002\u001a\u000b\u0012\u0004\u0012\u00020\u0018\u0018\u00010\u008e\u00018B@BX\u0082\u000e\u00a2\u0006\u0010\u001a\u0006\u0008\u00ed\u0002\u0010\u00d2\u0002\"\u0006\u0008\u00ee\u0002\u0010\u00d4\u0002R!\u0010\u00f1\u0002\u001a\n\u0012\u0005\u0012\u00030\u0096\u00010\u00f0\u00028\u0002@\u0002X\u0082\u0004\u00a2\u0006\u0008\n\u0006\u0008\u00f1\u0002\u0010\u00f2\u0002R2\u0010\u00f4\u0002\u001a\u00020{2\u0007\u0010\u00f3\u0002\u001a\u00020{8\u0016@PX\u0096\u000e\u00a2\u0006\u0018\n\u0006\u0008\u00f4\u0002\u0010\u00f5\u0002\u001a\u0006\u0008\u00f6\u0002\u0010\u00f7\u0002\"\u0006\u0008\u00f8\u0002\u0010\u00f9\u0002R2\u0010\u00fa\u0002\u001a\u00020{2\u0007\u0010\u00f3\u0002\u001a\u00020{8\u0016@PX\u0096\u000e\u00a2\u0006\u0018\n\u0006\u0008\u00fa\u0002\u0010\u00f5\u0002\u001a\u0006\u0008\u00fb\u0002\u0010\u00f7\u0002\"\u0006\u0008\u00fc\u0002\u0010\u00f9\u0002R\u0019\u0010\u00fd\u0002\u001a\u00020\u00078\u0002@\u0002X\u0082\u000e\u00a2\u0006\u0008\n\u0006\u0008\u00fd\u0002\u0010\u00c7\u0002R\u0019\u0010\u00fe\u0002\u001a\u00020\u00188V@\u0016X\u0096\u0004\u00a2\u0006\u0008\u001a\u0006\u0008\u00fe\u0002\u0010\u0094\u0001R\u001c\u0010\u00ff\u0002\u001a\u0005\u0018\u00010\u00a2\u00018\u0002@\u0002X\u0082\u000e\u00a2\u0006\u0008\n\u0006\u0008\u00ff\u0002\u0010\u0080\u0003R \u0010\u0081\u0003\u001a\t\u0012\u0004\u0012\u00020\u00180\u00c0\u00028\u0002@\u0002X\u0082\u0004\u00a2\u0006\u0008\n\u0006\u0008\u0081\u0003\u0010\u00c2\u0002R!\u0010\u0082\u0003\u001a\u00020\u00188\u0016@\u0016X\u0096\u0004\u00a2\u0006\u0010\n\u0006\u0008\u0082\u0003\u0010\u0083\u0003\u001a\u0006\u0008\u0084\u0003\u0010\u0094\u0001R\u0019\u0010\u0086\u0003\u001a\u00020\u00078V@\u0016X\u0096\u0004\u00a2\u0006\u0008\u001a\u0006\u0008\u0085\u0003\u0010\u00c9\u0002R-\u0010\u0087\u0003\u001a\u0016\u0012\u000b\u0012\t\u0012\u0004\u0012\u00020\t0\u008e\u0001\u0012\u0005\u0012\u00030\u0090\u00010<8\u0002@\u0002X\u0082\u0004\u00a2\u0006\u0008\n\u0006\u0008\u0087\u0003\u0010\u0088\u0003R\u0019\u0010\u008a\u0003\u001a\u00020\u00078V@\u0016X\u0096\u0004\u00a2\u0006\u0008\u001a\u0006\u0008\u0089\u0003\u0010\u00c9\u0002R\u0019\u0010\u008b\u0003\u001a\u00020\u00188V@\u0016X\u0096\u0004\u00a2\u0006\u0008\u001a\u0006\u0008\u008b\u0003\u0010\u0094\u0001\u0082\u0002\u0004\n\u0002\u0008\u0019\u00a8\u0006\u0090\u0003"
    }
    d2 = {
        "Lio/ktor/utils/io/ByteBufferChannel;",
        "Lio/ktor/utils/io/ByteChannel;",
        "Lio/ktor/utils/io/ByteReadChannel;",
        "Lio/ktor/utils/io/ByteWriteChannel;",
        "Lio/ktor/utils/io/LookAheadSuspendSession;",
        "Lio/ktor/utils/io/HasReadSession;",
        "Lio/ktor/utils/io/HasWriteSession;",
        "",
        "minWriteSize",
        "Ln/c0;",
        "flushImpl",
        "(I)V",
        "Ljava/nio/ByteBuffer;",
        "Lio/ktor/utils/io/core/ByteOrder;",
        "order",
        "position",
        "available",
        "prepareBuffer",
        "(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V",
        "setupStateForRead",
        "()Ljava/nio/ByteBuffer;",
        "restoreStateAfterRead",
        "()V",
        "delegate",
        "",
        "delegateClose",
        "Lio/ktor/utils/io/internal/JoiningState;",
        "setupDelegateTo",
        "(Lio/ktor/utils/io/ByteBufferChannel;Z)Lio/ktor/utils/io/internal/JoiningState;",
        "joined",
        "tryCompleteJoining",
        "(Lio/ktor/utils/io/internal/JoiningState;)Z",
        "forceTermination",
        "tryReleaseBuffer",
        "(Z)Z",
        "idx",
        "carryIndex",
        "(Ljava/nio/ByteBuffer;I)I",
        "Lkotlin/Function3;",
        "Lio/ktor/utils/io/internal/RingBufferCapacity;",
        "block",
        "writing",
        "(Ln/l0/c/q;)V",
        "Lkotlin/Function2;",
        "reading",
        "(Ln/l0/c/p;)Z",
        "dst",
        "readAsMuchAsPossible",
        "(Ljava/nio/ByteBuffer;)I",
        "Lio/ktor/utils/io/core/Buffer;",
        "consumed",
        "max",
        "(Lio/ktor/utils/io/core/Buffer;II)I",
        "",
        "offset",
        "length",
        "([BII)I",
        "",
        "T",
        "size",
        "Lkotlin/Function1;",
        "getter",
        "readPrimitive",
        "(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;",
        "n",
        "rollBytes",
        "(Ljava/nio/ByteBuffer;I)V",
        "carry",
        "(Ljava/nio/ByteBuffer;)V",
        "capacity",
        "count",
        "bytesWritten",
        "(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V",
        "bytesRead",
        "current",
        "joining",
        "resolveDelegation",
        "(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;",
        "delegateSuspend",
        "(Lio/ktor/utils/io/internal/JoiningState;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;",
        "channelWriter",
        "bufferWriter",
        "writePrimitive",
        "(ILn/l0/c/l;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;",
        "writer",
        "tryWritePrimitive",
        "(Ljava/nio/ByteBuffer;ILio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z",
        "buffer",
        "doWritePrimitive",
        "(ILjava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)V",
        "writeSuspendPrimitive",
        "(Ljava/nio/ByteBuffer;ILio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;",
        "delegatePrimitive",
        "(Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;",
        "ensureClosedJoined",
        "(Lio/ktor/utils/io/internal/JoiningState;)V",
        "src",
        "writeAsMuchAsPossible",
        "(Lio/ktor/utils/io/core/Buffer;)I",
        "writeWhileNoSuspend",
        "(Ln/l0/c/l;)Z",
        "writeWhileLoop",
        "(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z",
        "Lio/ktor/utils/io/core/ByteReadPacket;",
        "packet",
        "tryWritePacketPart",
        "(Lio/ktor/utils/io/core/ByteReadPacket;)I",
        "last",
        "visitor",
        "consumeEachBufferRangeFast",
        "(ZLn/l0/c/p;)Z",
        "afterBufferVisited",
        "(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;)I",
        "Lio/ktor/utils/io/LookAheadSession;",
        "Ljava/lang/Appendable;",
        "Lkotlin/text/Appendable;",
        "out",
        "",
        "ca",
        "Ljava/nio/CharBuffer;",
        "cb",
        "await",
        "addConsumed",
        "",
        "decode",
        "readLineLoop",
        "(Lio/ktor/utils/io/LookAheadSession;Ljava/lang/Appendable;[CLjava/nio/CharBuffer;Ln/l0/c/l;Ln/l0/c/l;Ln/l0/c/l;)Z",
        "limit",
        "headerSizeHint",
        "remainingPacket",
        "(JI)Lio/ktor/utils/io/core/ByteReadPacket;",
        "resumeReadOp",
        "Lkotlin/Function0;",
        "",
        "exception",
        "(Ln/l0/c/a;)V",
        "resumeWriteOp",
        "cause",
        "resumeClosed",
        "(Ljava/lang/Throwable;)V",
        "readSuspendPredicate",
        "(I)Z",
        "Ln/i0/d;",
        "continuation",
        "",
        "suspensionForSize",
        "(ILn/i0/d;)Ljava/lang/Object;",
        "shouldResumeReadOp",
        "()Z",
        "writeSuspendPredicate",
        "Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;",
        "newBuffer",
        "()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;",
        "releaseBuffer",
        "(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V",
        "Lio/ktor/utils/io/internal/ReadWriteBufferState;",
        "currentState$ktor_io",
        "()Lio/ktor/utils/io/internal/ReadWriteBufferState;",
        "currentState",
        "getJoining$ktor_io",
        "()Lio/ktor/utils/io/internal/JoiningState;",
        "getJoining",
        "Lkotlinx/coroutines/Job;",
        "job",
        "attachJob",
        "(Lkotlinx/coroutines/Job;)V",
        "close",
        "(Ljava/lang/Throwable;)Z",
        "cancel",
        "flush",
        "lockedSpace",
        "prepareWriteBuffer$ktor_io",
        "prepareWriteBuffer",
        "setupStateForWrite$ktor_io",
        "setupStateForWrite",
        "restoreStateAfterWrite$ktor_io",
        "restoreStateAfterWrite",
        "tryTerminate$ktor_io",
        "tryTerminate",
        "readFully",
        "([BIILn/i0/d;)Ljava/lang/Object;",
        "(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;",
        "rc0",
        "readFullySuspend",
        "(Ljava/nio/ByteBuffer;ILn/i0/d;)Ljava/lang/Object;",
        "Lio/ktor/utils/io/core/IoBuffer;",
        "(Lio/ktor/utils/io/core/IoBuffer;ILn/i0/d;)Ljava/lang/Object;",
        "min",
        "readAvailable",
        "(ILn/l0/c/l;)I",
        "(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;",
        "readAvailableSuspend",
        "readPacket",
        "(IILn/i0/d;)Ljava/lang/Object;",
        "Lio/ktor/utils/io/core/BytePacketBuilder;",
        "builder",
        "readPacketSuspend",
        "(ILio/ktor/utils/io/core/BytePacketBuilder;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;",
        "readBoolean",
        "(Ln/i0/d;)Ljava/lang/Object;",
        "",
        "readByte",
        "",
        "readShort",
        "readInt",
        "readLong",
        "",
        "readFloat",
        "",
        "readDouble",
        "bytesWrittenFromSession$ktor_io",
        "bytesWrittenFromSession",
        "resolveChannelInstance$ktor_io",
        "()Lio/ktor/utils/io/ByteBufferChannel;",
        "resolveChannelInstance",
        "b",
        "writeByte",
        "(BLn/i0/d;)Ljava/lang/Object;",
        "s",
        "writeShort",
        "(SLn/i0/d;)Ljava/lang/Object;",
        "i",
        "writeInt",
        "l",
        "writeLong",
        "(JLn/i0/d;)Ljava/lang/Object;",
        "d",
        "writeDouble",
        "(DLn/i0/d;)Ljava/lang/Object;",
        "f",
        "writeFloat",
        "(FLn/i0/d;)Ljava/lang/Object;",
        "awaitFreeSpace",
        "writeAvailable",
        "writeAvailableSuspend",
        "writeFully",
        "(Lio/ktor/utils/io/core/Buffer;Ln/i0/d;)Ljava/lang/Object;",
        "Lio/ktor/utils/io/bits/Memory;",
        "memory",
        "startIndex",
        "endIndex",
        "writeFully-rGWNHyQ",
        "(Ljava/nio/ByteBuffer;IILn/i0/d;)Ljava/lang/Object;",
        "writeFullySuspend",
        "awaitClose",
        "joinFrom$ktor_io",
        "(Lio/ktor/utils/io/ByteBufferChannel;ZLn/i0/d;)Ljava/lang/Object;",
        "joinFrom",
        "joinFromSuspend",
        "(Lio/ktor/utils/io/ByteBufferChannel;ZLio/ktor/utils/io/internal/JoiningState;Ln/i0/d;)Ljava/lang/Object;",
        "copyDirect$ktor_io",
        "(Lio/ktor/utils/io/ByteBufferChannel;JLio/ktor/utils/io/internal/JoiningState;Ln/i0/d;)Ljava/lang/Object;",
        "copyDirect",
        "writeSuspend",
        "write",
        "awaitFreeSpaceOrDelegate",
        "writeWhile",
        "writeWhileSuspend",
        "Lio/ktor/utils/io/SuspendableReadSession;",
        "startReadSession",
        "()Lio/ktor/utils/io/SuspendableReadSession;",
        "endReadSession",
        "Lio/ktor/utils/io/WriterSuspendSession;",
        "beginWriteSession",
        "()Lio/ktor/utils/io/WriterSuspendSession;",
        "written",
        "endWriteSession",
        "Lio/ktor/utils/io/ReadSession;",
        "consumer",
        "readSession",
        "(Ln/l0/c/l;)V",
        "readSuspendableSession",
        "(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;",
        "read",
        "discard",
        "discarded0",
        "discardSuspend",
        "(JJLn/i0/d;)Ljava/lang/Object;",
        "readBlockSuspend",
        "writePacket",
        "(Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;",
        "writePacketSuspend",
        "consumeEachBufferRange",
        "R",
        "lookAhead",
        "(Ln/l0/c/l;)Ljava/lang/Object;",
        "lookAheadSuspend",
        "writeSuspendSession",
        "awaitAtLeast",
        "awaitAtLeastSuspend",
        "skip",
        "atLeast",
        "request",
        "(II)Ljava/nio/ByteBuffer;",
        "consumeEachBufferRangeSuspend",
        "readUTF8LineToAscii",
        "(Ljava/lang/Appendable;ILn/i0/d;)Ljava/lang/Object;",
        "consumed0",
        "readUTF8LineToUtf8Suspend",
        "(Ljava/lang/Appendable;I[CLjava/nio/CharBuffer;ILn/i0/d;)Ljava/lang/Object;",
        "A",
        "readUTF8LineTo",
        "",
        "readUTF8Line",
        "readRemaining",
        "(JILn/i0/d;)Ljava/lang/Object;",
        "readRemainingSuspend",
        "awaitContent",
        "readSuspend",
        "readSuspendLoop",
        "readSuspendImpl",
        "tryWriteSuspend$ktor_io",
        "tryWriteSuspend",
        "destination",
        "destinationOffset",
        "peekTo-vHUFkk8",
        "(Ljava/nio/ByteBuffer;JJJJLn/i0/d;)Ljava/lang/Object;",
        "peekTo",
        "toString",
        "()Ljava/lang/String;",
        "Lio/ktor/utils/io/internal/CancellableReusableContinuation;",
        "writeSuspendContinuationCache",
        "Lio/ktor/utils/io/internal/CancellableReusableContinuation;",
        "Lio/ktor/utils/io/internal/WriteSessionImpl;",
        "writeSession",
        "Lio/ktor/utils/io/internal/WriteSessionImpl;",
        "reservedSize",
        "I",
        "getReservedSize$ktor_io",
        "()I",
        "Lio/ktor/utils/io/internal/ClosedElement;",
        "value",
        "getClosed",
        "()Lio/ktor/utils/io/internal/ClosedElement;",
        "setClosed",
        "(Lio/ktor/utils/io/internal/ClosedElement;)V",
        "closed",
        "getWriteOp",
        "()Ln/i0/d;",
        "setWriteOp",
        "(Ln/i0/d;)V",
        "writeOp",
        "Lio/ktor/utils/io/internal/ReadSessionImpl;",
        "Lio/ktor/utils/io/internal/ReadSessionImpl;",
        "getReadSession$annotations",
        "getClosedCause",
        "()Ljava/lang/Throwable;",
        "closedCause",
        "getState",
        "state",
        "writePosition",
        "readPosition",
        "newOrder",
        "writeByteOrder",
        "Lio/ktor/utils/io/core/ByteOrder;",
        "getWriteByteOrder",
        "()Lio/ktor/utils/io/core/ByteOrder;",
        "setWriteByteOrder",
        "(Lio/ktor/utils/io/core/ByteOrder;)V",
        "getWriteByteOrder$annotations",
        "readByteOrder",
        "getReadByteOrder",
        "setReadByteOrder",
        "getReadByteOrder$annotations",
        "Lio/ktor/utils/io/internal/JoiningState;",
        "getReadOp",
        "setReadOp",
        "readOp",
        "Lio/ktor/utils/io/pool/ObjectPool;",
        "pool",
        "Lio/ktor/utils/io/pool/ObjectPool;",
        "<set-?>",
        "totalBytesRead",
        "J",
        "getTotalBytesRead",
        "()J",
        "setTotalBytesRead$ktor_io",
        "(J)V",
        "totalBytesWritten",
        "getTotalBytesWritten",
        "setTotalBytesWritten$ktor_io",
        "writeSuspensionSize",
        "isClosedForRead",
        "attachedJob",
        "Lkotlinx/coroutines/Job;",
        "readSuspendContinuationCache",
        "autoFlush",
        "Z",
        "getAutoFlush",
        "getAvailableForRead",
        "availableForRead",
        "writeSuspension",
        "Ln/l0/c/l;",
        "getAvailableForWrite",
        "availableForWrite",
        "isClosedForWrite",
        "<init>",
        "(ZLio/ktor/utils/io/pool/ObjectPool;I)V",
        "content",
        "Companion",
        "ktor-io"
    }
    k = 0x1
    mv = {
        0x1,
        0x4,
        0x1
    }
.end annotation


# static fields
.field public static final Companion:Lio/ktor/utils/io/ByteBufferChannel$Companion;

.field private static final ReservedLongIndex:I = -0x8

.field private static final synthetic _closed$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

.field public static final synthetic _readOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

.field private static final synthetic _state$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

.field public static final synthetic _writeOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;


# instance fields
.field private volatile synthetic _closed:Ljava/lang/Object;

.field public volatile synthetic _readOp:Ljava/lang/Object;

.field private volatile synthetic _state:Ljava/lang/Object;

.field public volatile synthetic _writeOp:Ljava/lang/Object;

.field private volatile attachedJob:Lkotlinx/coroutines/Job;

.field private final autoFlush:Z

.field private volatile joining:Lio/ktor/utils/io/internal/JoiningState;

.field private final pool:Lio/ktor/utils/io/pool/ObjectPool;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/ktor/utils/io/pool/ObjectPool<",
            "Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;",
            ">;"
        }
    .end annotation
.end field

.field private readByteOrder:Lio/ktor/utils/io/core/ByteOrder;

.field private readPosition:I

.field private final readSession:Lio/ktor/utils/io/internal/ReadSessionImpl;

.field private final readSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/ktor/utils/io/internal/CancellableReusableContinuation<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field private final reservedSize:I

.field private volatile totalBytesRead:J

.field private volatile totalBytesWritten:J

.field private writeByteOrder:Lio/ktor/utils/io/core/ByteOrder;

.field private writePosition:I

.field private final writeSession:Lio/ktor/utils/io/internal/WriteSessionImpl;

.field private final writeSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/ktor/utils/io/internal/CancellableReusableContinuation<",
            "Ln/c0;",
            ">;"
        }
    .end annotation
.end field

.field private final writeSuspension:Ln/l0/c/l;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ln/l0/c/l<",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private volatile writeSuspensionSize:I


# direct methods
.method public static constructor <clinit>()V
    .locals 4

    const-class v0, Ljava/lang/Object;

    const-class v1, Lio/ktor/utils/io/ByteBufferChannel;

    new-instance v2, Lio/ktor/utils/io/ByteBufferChannel$Companion;

    const/4 v3, 0x0

    invoke-direct {v2, v3}, Lio/ktor/utils/io/ByteBufferChannel$Companion;-><init>(Ln/l0/d/j;)V

    sput-object v2, Lio/ktor/utils/io/ByteBufferChannel;->Companion:Lio/ktor/utils/io/ByteBufferChannel$Companion;

    const-string v2, "_state"

    invoke-static {v1, v0, v2}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    move-result-object v2

    sput-object v2, Lio/ktor/utils/io/ByteBufferChannel;->_state$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const-string v2, "_closed"

    invoke-static {v1, v0, v2}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    move-result-object v2

    sput-object v2, Lio/ktor/utils/io/ByteBufferChannel;->_closed$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const-string v2, "_readOp"

    invoke-static {v1, v0, v2}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    move-result-object v2

    sput-object v2, Lio/ktor/utils/io/ByteBufferChannel;->_readOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const-string v2, "_writeOp"

    invoke-static {v1, v0, v2}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    move-result-object v0

    sput-object v0, Lio/ktor/utils/io/ByteBufferChannel;->_writeOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    return-void
.end method

.method public constructor <init>(Ljava/nio/ByteBuffer;)V
    .locals 3

    const-string v0, "content"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 15
    invoke-static {}, Lio/ktor/utils/io/internal/ObjectPoolKt;->getBufferObjectNoPool()Lio/ktor/utils/io/pool/ObjectPool;

    move-result-object v0

    const/4 v1, 0x0

    invoke-direct {p0, v1, v0, v1}, Lio/ktor/utils/io/ByteBufferChannel;-><init>(ZLio/ktor/utils/io/pool/ObjectPool;I)V

    .line 16
    new-instance v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->slice()Ljava/nio/ByteBuffer;

    move-result-object p1

    const-string v2, "content.slice()"

    invoke-static {p1, v2}, Ln/l0/d/r;->d(Ljava/lang/Object;Ljava/lang/String;)V

    invoke-direct {v0, p1, v1}, Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;-><init>(Ljava/nio/ByteBuffer;I)V

    .line 17
    iget-object p1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->resetForRead()V

    .line 18
    sget-object p1, Ln/c0;->a:Ln/c0;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;->startWriting$ktor_io()Lio/ktor/utils/io/internal/ReadWriteBufferState$Writing;

    move-result-object p1

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    .line 19
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 20
    invoke-static {p0}, Lio/ktor/utils/io/ByteWriteChannelKt;->close(Lio/ktor/utils/io/ByteWriteChannel;)Z

    .line 21
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    return-void
.end method

.method public constructor <init>(ZLio/ktor/utils/io/pool/ObjectPool;I)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z",
            "Lio/ktor/utils/io/pool/ObjectPool<",
            "Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;",
            ">;I)V"
        }
    .end annotation

    const-string v0, "pool"

    invoke-static {p2, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-boolean p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->autoFlush:Z

    iput-object p2, p0, Lio/ktor/utils/io/ByteBufferChannel;->pool:Lio/ktor/utils/io/pool/ObjectPool;

    iput p3, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    .line 2
    sget-object p1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    const/4 p1, 0x0

    .line 3
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_closed:Ljava/lang/Object;

    .line 4
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_readOp:Ljava/lang/Object;

    .line 5
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_writeOp:Ljava/lang/Object;

    .line 6
    sget-object p1, Lio/ktor/utils/io/core/ByteOrder;->BIG_ENDIAN:Lio/ktor/utils/io/core/ByteOrder;

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readByteOrder:Lio/ktor/utils/io/core/ByteOrder;

    .line 7
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeByteOrder:Lio/ktor/utils/io/core/ByteOrder;

    .line 8
    new-instance p1, Lio/ktor/utils/io/internal/ReadSessionImpl;

    invoke-direct {p1, p0}, Lio/ktor/utils/io/internal/ReadSessionImpl;-><init>(Lio/ktor/utils/io/ByteBufferChannel;)V

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSession:Lio/ktor/utils/io/internal/ReadSessionImpl;

    .line 9
    new-instance p1, Lio/ktor/utils/io/internal/WriteSessionImpl;

    invoke-direct {p1, p0}, Lio/ktor/utils/io/internal/WriteSessionImpl;-><init>(Lio/ktor/utils/io/ByteBufferChannel;)V

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSession:Lio/ktor/utils/io/internal/WriteSessionImpl;

    .line 10
    new-instance p1, Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    invoke-direct {p1}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;-><init>()V

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    .line 11
    new-instance p1, Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    invoke-direct {p1}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;-><init>()V

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    .line 12
    new-instance p1, Lio/ktor/utils/io/ByteBufferChannel$writeSuspension$1;

    invoke-direct {p1, p0}, Lio/ktor/utils/io/ByteBufferChannel$writeSuspension$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;)V

    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspension:Ln/l0/c/l;

    return-void
.end method

.method public synthetic constructor <init>(ZLio/ktor/utils/io/pool/ObjectPool;IILn/l0/d/j;)V
    .locals 0

    and-int/lit8 p5, p4, 0x2

    if-eqz p5, :cond_0

    .line 13
    invoke-static {}, Lio/ktor/utils/io/internal/ObjectPoolKt;->getBufferObjectPool()Lio/ktor/utils/io/pool/ObjectPool;

    move-result-object p2

    :cond_0
    and-int/lit8 p4, p4, 0x4

    if-eqz p4, :cond_1

    const/16 p3, 0x8

    .line 14
    :cond_1
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;-><init>(ZLio/ktor/utils/io/pool/ObjectPool;I)V

    return-void
.end method

.method public static final synthetic access$afterBufferVisited(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;)I
    .locals 0

    .line 1
    invoke-direct {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->afterBufferVisited(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;)I

    move-result p0

    return p0
.end method

.method public static final synthetic access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    .locals 0

    .line 1
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    return-void
.end method

.method public static final synthetic access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    .locals 0

    .line 1
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    return-void
.end method

.method public static final synthetic access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V
    .locals 0

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->carry(Ljava/nio/ByteBuffer;)V

    return-void
.end method

.method public static final synthetic access$doWritePrimitive(Lio/ktor/utils/io/ByteBufferChannel;ILjava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)V
    .locals 0

    .line 1
    invoke-direct {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->doWritePrimitive(ILjava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)V

    return-void
.end method

.method public static final synthetic access$flushImpl(Lio/ktor/utils/io/ByteBufferChannel;I)V
    .locals 0

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->flushImpl(I)V

    return-void
.end method

.method public static final synthetic access$getAttachedJob$p(Lio/ktor/utils/io/ByteBufferChannel;)Lkotlinx/coroutines/Job;
    .locals 0

    .line 1
    iget-object p0, p0, Lio/ktor/utils/io/ByteBufferChannel;->attachedJob:Lkotlinx/coroutines/Job;

    return-object p0
.end method

.method public static final synthetic access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;
    .locals 0

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p0

    return-object p0
.end method

.method public static final synthetic access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;
    .locals 0

    .line 1
    iget-object p0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    return-object p0
.end method

.method public static final synthetic access$getReadSession$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadSessionImpl;
    .locals 0

    .line 1
    iget-object p0, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSession:Lio/ktor/utils/io/internal/ReadSessionImpl;

    return-object p0
.end method

.method public static final synthetic access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;
    .locals 0

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p0

    return-object p0
.end method

.method public static final synthetic access$getWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;)Ln/i0/d;
    .locals 0

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteOp()Ln/i0/d;

    move-result-object p0

    return-object p0
.end method

.method public static final synthetic access$getWriteSuspensionSize$p(Lio/ktor/utils/io/ByteBufferChannel;)I
    .locals 0

    .line 1
    iget p0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspensionSize:I

    return p0
.end method

.method public static final synthetic access$readLineLoop(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/LookAheadSession;Ljava/lang/Appendable;[CLjava/nio/CharBuffer;Ln/l0/c/l;Ln/l0/c/l;Ln/l0/c/l;)Z
    .locals 0

    .line 1
    invoke-direct/range {p0 .. p7}, Lio/ktor/utils/io/ByteBufferChannel;->readLineLoop(Lio/ktor/utils/io/LookAheadSession;Ljava/lang/Appendable;[CLjava/nio/CharBuffer;Ln/l0/c/l;Ln/l0/c/l;Ln/l0/c/l;)Z

    move-result p0

    return p0
.end method

.method public static final synthetic access$reading(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;)Z
    .locals 0

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->reading(Ln/l0/c/p;)Z

    move-result p0

    return p0
.end method

.method public static final synthetic access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;
    .locals 0

    .line 1
    invoke-direct {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    return-object p0
.end method

.method public static final synthetic access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V
    .locals 0

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterRead()V

    return-void
.end method

.method public static final synthetic access$resumeReadOp(Lio/ktor/utils/io/ByteBufferChannel;)V
    .locals 0

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeReadOp()V

    return-void
.end method

.method public static final synthetic access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V
    .locals 0

    .line 1
    invoke-direct {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->rollBytes(Ljava/nio/ByteBuffer;I)V

    return-void
.end method

.method public static final synthetic access$setAttachedJob$p(Lio/ktor/utils/io/ByteBufferChannel;Lkotlinx/coroutines/Job;)V
    .locals 0

    .line 1
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->attachedJob:Lkotlinx/coroutines/Job;

    return-void
.end method

.method public static final synthetic access$setClosed$p(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/ClosedElement;)V
    .locals 0

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->setClosed(Lio/ktor/utils/io/internal/ClosedElement;)V

    return-void
.end method

.method public static final synthetic access$setJoining$p(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)V
    .locals 0

    .line 1
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    return-void
.end method

.method public static final synthetic access$setWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V
    .locals 0

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->setWriteOp(Ln/i0/d;)V

    return-void
.end method

.method public static final synthetic access$setWriteSuspensionSize$p(Lio/ktor/utils/io/ByteBufferChannel;I)V
    .locals 0

    .line 1
    iput p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspensionSize:I

    return-void
.end method

.method public static final synthetic access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;
    .locals 0

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForRead()Ljava/nio/ByteBuffer;

    move-result-object p0

    return-object p0
.end method

.method public static final synthetic access$shouldResumeReadOp(Lio/ktor/utils/io/ByteBufferChannel;)Z
    .locals 0

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->shouldResumeReadOp()Z

    move-result p0

    return p0
.end method

.method public static final synthetic access$tryWritePrimitive(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;ILio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z
    .locals 0

    .line 1
    invoke-direct {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->tryWritePrimitive(Ljava/nio/ByteBuffer;ILio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z

    move-result p0

    return p0
.end method

.method public static final synthetic access$writeSuspendPredicate(Lio/ktor/utils/io/ByteBufferChannel;I)Z
    .locals 0

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendPredicate(I)Z

    move-result p0

    return p0
.end method

.method private final afterBufferVisited(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;)I
    .locals 3

    .line 1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v0

    iget v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    sub-int/2addr v0, v1

    if-lez v0, :cond_1

    .line 2
    invoke-virtual {p2, v0}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 3
    invoke-direct {p0, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 4
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getReadByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v1

    iget v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    .line 5
    iget p2, p2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    .line 6
    invoke-direct {p0, p1, v1, v2, p2}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    goto :goto_0

    .line 7
    :cond_0
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Consumed more bytes than available"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_1
    :goto_0
    return v0
.end method

.method public static synthetic awaitContent$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)Ljava/lang/Object;
    .locals 1

    const/4 v0, 0x1

    .line 1
    invoke-virtual {p0, v0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    .line 2
    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic awaitFreeSpace$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)Ljava/lang/Object;
    .locals 1

    const/4 v0, 0x1

    .line 1
    invoke-virtual {p0, v0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    .line 2
    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method private final bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    .locals 2

    if-ltz p3, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_1

    .line 1
    iget v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    add-int/2addr v0, p3

    invoke-direct {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->carryIndex(Ljava/nio/ByteBuffer;I)I

    move-result p1

    iput p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    .line 2
    invoke-virtual {p2, p3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->completeRead(I)V

    .line 3
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesRead()J

    move-result-wide p1

    int-to-long v0, p3

    add-long/2addr p1, v0

    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesRead$ktor_io(J)V

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    return-void

    .line 5
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Failed requirement."

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private final bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    .locals 2

    if-ltz p3, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_1

    .line 1
    iget v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    add-int/2addr v0, p3

    invoke-direct {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->carryIndex(Ljava/nio/ByteBuffer;I)I

    move-result p1

    iput p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    .line 2
    invoke-virtual {p2, p3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->completeWrite(I)V

    .line 3
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide p1

    int-to-long v0, p3

    add-long/2addr p1, v0

    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    return-void

    .line 4
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Failed requirement."

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private final carry(Ljava/nio/ByteBuffer;)V
    .locals 5

    .line 1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v0

    iget v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    sub-int/2addr v0, v1

    .line 2
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v1

    move v2, v0

    :goto_0
    if-ge v2, v1, :cond_0

    sub-int v3, v2, v0

    .line 3
    invoke-virtual {p1, v2}, Ljava/nio/ByteBuffer;->get(I)B

    move-result v4

    invoke-virtual {p1, v3, v4}, Ljava/nio/ByteBuffer;->put(IB)Ljava/nio/ByteBuffer;

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method private final carryIndex(Ljava/nio/ByteBuffer;I)I
    .locals 2

    .line 1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v0

    iget v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    sub-int/2addr v0, v1

    if-lt p2, v0, :cond_0

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result p1

    iget v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    sub-int/2addr p1, v0

    sub-int/2addr p2, p1

    :cond_0
    return p2
.end method

.method private final consumeEachBufferRangeFast(ZLn/l0/c/p;)Z
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z",
            "Ln/l0/c/p<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "-",
            "Ljava/lang/Boolean;",
            "Ljava/lang/Boolean;",
            ">;)Z"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_3

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v3

    iget-object v3, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    :try_start_0
    iget v4, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_0

    .line 4
    invoke-static {v2}, Ln/l0/d/p;->b(I)V

    .line 5
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 6
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v2}, Ln/l0/d/p;->a(I)V

    goto :goto_0

    .line 7
    :cond_0
    :try_start_1
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-nez v1, :cond_1

    if-nez p1, :cond_1

    .line 8
    invoke-static {v2}, Ln/l0/d/p;->b(I)V

    .line 9
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 10
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v2}, Ln/l0/d/p;->a(I)V

    goto :goto_1

    .line 11
    :cond_1
    :try_start_2
    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    invoke-interface {p2, v0, v1}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Boolean;

    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v1

    .line 12
    invoke-static {p0, v0, v3}, Lio/ktor/utils/io/ByteBufferChannel;->access$afterBufferVisited(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;)I

    if-eqz v1, :cond_2

    if-eqz p1, :cond_0

    .line 13
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-nez v1, :cond_0

    :cond_2
    const/4 p1, 0x2

    .line 14
    invoke-static {p1}, Ln/l0/d/p;->b(I)V

    .line 15
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 16
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {p1}, Ln/l0/d/p;->a(I)V

    return v2

    :catchall_0
    move-exception p1

    .line 17
    invoke-static {v2}, Ln/l0/d/p;->b(I)V

    .line 18
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 19
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v2}, Ln/l0/d/p;->a(I)V

    throw p1

    :cond_3
    :goto_0
    move p1, v1

    :goto_1
    if-nez p1, :cond_4

    .line 20
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 21
    invoke-static {}, Lio/ktor/utils/io/internal/ReadWriteBufferStateKt;->getEmptyByteBuffer()Ljava/nio/ByteBuffer;

    move-result-object p1

    sget-object v0, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-interface {p2, p1, v0}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return v2

    :cond_4
    return p1
.end method

.method private final synthetic delegatePrimitive(Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/l<",
            "-",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    invoke-static {v0}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    sget-object v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v1, v2, :cond_0

    .line 3
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    invoke-interface {p1, p2}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 5
    :cond_0
    :goto_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    sget-object v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v1, v2, :cond_1

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    .line 6
    invoke-interface {p1, p2}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    :cond_1
    const/4 v1, 0x0

    .line 8
    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    const/4 v1, 0x1

    invoke-virtual {p0, v1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    const/4 v2, 0x2

    invoke-static {v2}, Ln/l0/d/p;->c(I)V

    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    goto :goto_0
.end method

.method private final synthetic delegateSuspend(Lio/ktor/utils/io/internal/JoiningState;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/internal/JoiningState;",
            "Ln/l0/c/l<",
            "-",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    :goto_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v0, v1, :cond_0

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    invoke-interface {p2, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    return-object p1

    :cond_0
    const/4 v0, 0x0

    .line 2
    invoke-static {v0}, Ln/l0/d/p;->c(I)V

    const/4 v0, 0x1

    invoke-virtual {p0, v0, p3}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    const/4 v1, 0x2

    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    invoke-static {v0}, Ln/l0/d/p;->c(I)V

    goto :goto_0
.end method

.method public static synthetic discard$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;JLn/i0/d;)Ljava/lang/Object;
    .locals 7

    const-wide/16 v0, 0x0

    cmp-long v2, p1, v0

    const/4 v3, 0x1

    if-ltz v2, :cond_0

    move v2, v3

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    :goto_0
    if-eqz v2, :cond_5

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v2

    if-eqz v2, :cond_2

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    iget-object v4, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    :try_start_0
    iget v5, v4, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-nez v5, :cond_1

    goto :goto_1

    :cond_1
    const v5, 0x7fffffff

    int-to-long v5, v5

    .line 4
    invoke-static {v5, v6, p1, p2}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v5

    long-to-int v5, v5

    invoke-virtual {v4, v5}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadAtMost(I)I

    move-result v5

    .line 5
    invoke-direct {p0, v2, v4, v5}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    int-to-long v4, v5

    add-long/2addr v0, v4

    .line 6
    invoke-static {v3}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7
    :goto_1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 9
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 10
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_2
    :goto_2
    move-wide v1, v0

    cmp-long v0, v1, p1

    if-eqz v0, :cond_4

    .line 11
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result v0

    if-eqz v0, :cond_3

    goto :goto_3

    :cond_3
    move-object v0, p0

    move-wide v3, p1

    move-object v5, p3

    .line 12
    invoke-virtual/range {v0 .. v5}, Lio/ktor/utils/io/ByteBufferChannel;->discardSuspend(JJLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0

    .line 13
    :cond_4
    :goto_3
    invoke-static {v1, v2}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object p0

    return-object p0

    .line 14
    :cond_5
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "max shouldn\'t be negative: "

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-direct {p1, p0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private final doWritePrimitive(ILjava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/nio/ByteBuffer;",
            "Lio/ktor/utils/io/internal/RingBufferCapacity;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;)V"
        }
    .end annotation

    .line 1
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v0

    if-ge v0, p1, :cond_0

    .line 2
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v0

    invoke-virtual {p2, v0}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 3
    invoke-interface {p4, p2}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    invoke-static {p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_0

    .line 5
    :cond_0
    invoke-interface {p4, p2}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6
    :goto_0
    invoke-static {p0, p2, p3, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 7
    invoke-virtual {p3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_1

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_2

    .line 8
    :cond_1
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 9
    :cond_2
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 10
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    return-void
.end method

.method private final ensureClosedJoined(Lio/ktor/utils/io/internal/JoiningState;)V
    .locals 3

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_5

    const/4 v1, 0x0

    .line 2
    iput-object v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    .line 3
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegateClose()Z

    move-result v1

    if-nez v1, :cond_0

    .line 4
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 5
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->complete()V

    return-void

    .line 6
    :cond_0
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v1

    invoke-direct {v1}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    .line 7
    instance-of v2, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Writing;

    if-nez v2, :cond_2

    instance-of v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$ReadingWriting;

    if-eqz v1, :cond_1

    goto :goto_0

    :cond_1
    const/4 v1, 0x0

    goto :goto_1

    :cond_2
    :goto_0
    const/4 v1, 0x1

    .line 8
    :goto_1
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v2

    if-nez v2, :cond_4

    if-nez v1, :cond_3

    goto :goto_2

    .line 9
    :cond_3
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    goto :goto_3

    .line 10
    :cond_4
    :goto_2
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v1

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v0

    invoke-virtual {v1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->close(Ljava/lang/Throwable;)Z

    .line 11
    :goto_3
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->complete()V

    :cond_5
    return-void
.end method

.method private final flushImpl(I)V
    .locals 4

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 2
    :cond_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 3
    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v0, v1, :cond_1

    return-void

    .line 4
    :cond_1
    iget-object v2, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    .line 5
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    if-ne v0, v2, :cond_0

    .line 6
    iget-object v2, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 7
    iget v2, v2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    .line 8
    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 9
    iget v0, v0, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    const/4 v3, 0x1

    if-lt v0, v3, :cond_2

    .line 10
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeReadOp()V

    .line 11
    :cond_2
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-lt v2, p1, :cond_4

    if-eqz v0, :cond_3

    .line 12
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    if-ne p1, v1, :cond_4

    .line 13
    :cond_3
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    :cond_4
    return-void
.end method

.method private final getClosed()Lio/ktor/utils/io/internal/ClosedElement;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->_closed:Ljava/lang/Object;

    check-cast v0, Lio/ktor/utils/io/internal/ClosedElement;

    return-object v0
.end method

.method public static synthetic getReadByteOrder$annotations()V
    .locals 0

    return-void
.end method

.method private final getReadOp()Ln/i0/d;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ln/i0/d<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->_readOp:Ljava/lang/Object;

    check-cast v0, Ln/i0/d;

    return-object v0
.end method

.method private static synthetic getReadSession$annotations()V
    .locals 0

    return-void
.end method

.method private final getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    check-cast v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;

    return-object v0
.end method

.method public static synthetic getWriteByteOrder$annotations()V
    .locals 0

    return-void
.end method

.method private final getWriteOp()Ln/i0/d;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ln/i0/d<",
            "Ln/c0;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->_writeOp:Ljava/lang/Object;

    check-cast v0, Ln/i0/d;

    return-object v0
.end method

.method public static synthetic lookAheadSuspend$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 10

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->label:I

    const/4 v3, 0x0

    const/4 v4, 0x4

    const/4 v5, 0x3

    const/4 v6, 0x2

    const/4 v7, 0x1

    const/4 v8, 0x0

    if-eqz v2, :cond_5

    if-eq v2, v7, :cond_4

    if-eq v2, v6, :cond_3

    if-eq v2, v5, :cond_2

    if-ne v2, v4, :cond_1

    iget-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$2:Ljava/lang/Object;

    check-cast p0, Ln/l0/d/g0;

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p1, Ln/l0/d/g0;

    iget-object v0, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_0
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto/16 :goto_5

    :catchall_0
    move-exception p0

    goto/16 :goto_6

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_8

    :cond_3
    iget-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$4:Ljava/lang/Object;

    check-cast p0, Ln/l0/d/g0;

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$3:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$2:Ljava/lang/Object;

    check-cast v2, Ln/l0/d/g0;

    iget-object v3, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$1:Ljava/lang/Object;

    check-cast v3, Ln/l0/c/p;

    iget-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v6, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_1
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_2

    :catchall_1
    move-exception p0

    goto/16 :goto_3

    :cond_4
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_5
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v2, :cond_7

    .line 5
    sget-object p0, Lio/ktor/utils/io/internal/TerminatedLookAhead;->INSTANCE:Lio/ktor/utils/io/internal/TerminatedLookAhead;

    iput v7, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->label:I

    invoke-interface {p1, p0, v0}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_6

    return-object v1

    :cond_6
    :goto_1
    return-object p2

    .line 6
    :cond_7
    new-instance p2, Ln/l0/d/g0;

    invoke-direct {p2}, Ln/l0/d/g0;-><init>()V

    iput-object v8, p2, Ln/l0/d/g0;->a:Ljava/lang/Object;

    .line 7
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v2

    if-eqz v2, :cond_a

    .line 8
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 9
    :try_start_2
    iget v2, v2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    if-nez v2, :cond_8

    .line 10
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 11
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 12
    :cond_8
    :try_start_3
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$1:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$2:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$3:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$4:Ljava/lang/Object;

    iput v6, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->label:I

    const/4 v2, 0x6

    invoke-static {v2}, Ln/l0/d/p;->c(I)V

    invoke-interface {p1, p0, v0}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    const/4 v3, 0x7

    invoke-static {v3}, Ln/l0/d/p;->c(I)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    if-ne v2, v1, :cond_9

    return-object v1

    :cond_9
    move-object v6, p0

    move-object v3, p1

    move-object p1, v6

    move-object p0, p2

    move-object p2, v2

    move-object v2, p0

    .line 13
    :goto_2
    :try_start_4
    iput-object p2, p0, Ln/l0/d/g0;->a:Ljava/lang/Object;

    .line 14
    invoke-static {v7}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p0

    invoke-virtual {p0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 15
    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 16
    invoke-virtual {p1}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move-object p2, v2

    move-object p1, v3

    move v3, p0

    move-object p0, v6

    goto :goto_4

    :catchall_2
    move-exception p1

    move-object v9, p1

    move-object p1, p0

    move-object p0, v9

    .line 17
    :goto_3
    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 18
    invoke-virtual {p1}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p0

    :cond_a
    :goto_4
    if-nez v3, :cond_15

    .line 19
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v2

    if-nez v2, :cond_13

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_b

    goto :goto_7

    .line 20
    :cond_b
    :try_start_5
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$1:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$2:Ljava/lang/Object;

    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$3:Ljava/lang/Object;

    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$4:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->label:I

    invoke-interface {p1, p0, v0}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    if-ne p1, v1, :cond_c

    return-object v1

    :cond_c
    move-object v0, p0

    move-object p0, p2

    move-object p2, p1

    move-object p1, p0

    .line 21
    :goto_5
    :try_start_6
    iput-object p2, p0, Ln/l0/d/g0;->a:Ljava/lang/Object;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 22
    invoke-direct {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p0

    .line 23
    invoke-virtual {p0}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getIdle()Z

    move-result p2

    if-nez p2, :cond_f

    sget-object p2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-eq p0, p2, :cond_f

    .line 24
    instance-of p2, p0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Reading;

    if-nez p2, :cond_d

    instance-of p0, p0, Lio/ktor/utils/io/internal/ReadWriteBufferState$ReadingWriting;

    if-eqz p0, :cond_e

    .line 25
    :cond_d
    invoke-direct {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterRead()V

    .line 26
    :cond_e
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    :cond_f
    move-object p2, p1

    goto :goto_9

    :catchall_3
    move-exception p1

    move-object v0, p0

    move-object p0, p1

    .line 27
    :goto_6
    invoke-direct {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    .line 28
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getIdle()Z

    move-result p2

    if-nez p2, :cond_12

    sget-object p2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-eq p1, p2, :cond_12

    .line 29
    instance-of p2, p1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Reading;

    if-nez p2, :cond_10

    instance-of p1, p1, Lio/ktor/utils/io/internal/ReadWriteBufferState$ReadingWriting;

    if-eqz p1, :cond_11

    .line 30
    :cond_10
    invoke-direct {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterRead()V

    .line 31
    :cond_11
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    :cond_12
    throw p0

    .line 32
    :cond_13
    :goto_7
    sget-object p0, Lio/ktor/utils/io/internal/TerminatedLookAhead;->INSTANCE:Lio/ktor/utils/io/internal/TerminatedLookAhead;

    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$0:Ljava/lang/Object;

    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$1:Ljava/lang/Object;

    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$2:Ljava/lang/Object;

    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$3:Ljava/lang/Object;

    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->L$4:Ljava/lang/Object;

    iput v5, v0, Lio/ktor/utils/io/ByteBufferChannel$lookAheadSuspend$1;->label:I

    invoke-interface {p1, p0, v0}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_14

    return-object v1

    :cond_14
    :goto_8
    return-object p2

    .line 33
    :cond_15
    :goto_9
    iget-object p0, p2, Ln/l0/d/g0;->a:Ljava/lang/Object;

    return-object p0
.end method

.method private final newBuffer()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;
    .locals 3

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->pool:Lio/ktor/utils/io/pool/ObjectPool;

    invoke-interface {v0}, Lio/ktor/utils/io/pool/ObjectPool;->borrow()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    .line 2
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;->getReadBuffer()Ljava/nio/ByteBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getReadByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v2

    invoke-virtual {v2}, Lio/ktor/utils/io/core/ByteOrder;->getNioOrder()Ljava/nio/ByteOrder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/nio/ByteBuffer;->order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;

    .line 3
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;->getWriteBuffer()Ljava/nio/ByteBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v2

    invoke-virtual {v2}, Lio/ktor/utils/io/core/ByteOrder;->getNioOrder()Ljava/nio/ByteOrder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/nio/ByteBuffer;->order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;

    .line 4
    iget-object v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->resetForWrite()V

    return-object v0
.end method

.method public static synthetic peekTo-vHUFkk8$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;JJJJLn/i0/d;)Ljava/lang/Object;
    .locals 16

    move-object/from16 v0, p0

    move-object/from16 v1, p10

    instance-of v2, v1, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;

    if-eqz v2, :cond_0

    move-object v2, v1

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;

    iget v3, v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;->label:I

    const/high16 v4, -0x80000000

    and-int v5, v3, v4

    if-eqz v5, :cond_0

    sub-int/2addr v3, v4

    iput v3, v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;

    invoke-direct {v2, v0, v1}, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object v1, v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v3

    .line 1
    iget v4, v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;->label:I

    const/4 v5, 0x1

    if-eqz v4, :cond_2

    if-ne v4, v5, :cond_1

    iget-object v0, v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;->L$0:Ljava/lang/Object;

    check-cast v0, Ln/l0/d/e0;

    invoke-static {v1}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3
    :cond_2
    invoke-static {v1}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    new-instance v1, Ln/l0/d/e0;

    invoke-direct {v1}, Ln/l0/d/e0;-><init>()V

    const/4 v4, 0x0

    iput v4, v1, Ln/l0/d/e0;->a:I

    add-long v6, p6, p4

    const-wide/16 v8, 0xff8

    .line 5
    invoke-static {v6, v7, v8, v9}, Ln/p0/k;->g(JJ)J

    move-result-wide v6

    long-to-int v4, v6

    .line 6
    new-instance v15, Lio/ktor/utils/io/ByteBufferChannel$peekTo$2;

    move-object v6, v15

    move-wide/from16 v7, p4

    move-wide/from16 v9, p8

    move-object/from16 v11, p1

    move-wide/from16 v12, p2

    move-object v14, v1

    invoke-direct/range {v6 .. v14}, Lio/ktor/utils/io/ByteBufferChannel$peekTo$2;-><init>(JJLjava/nio/ByteBuffer;JLn/l0/d/e0;)V

    iput-object v1, v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;->L$0:Ljava/lang/Object;

    iput v5, v2, Lio/ktor/utils/io/ByteBufferChannel$peekTo$1;->label:I

    invoke-virtual {v0, v4, v15, v2}, Lio/ktor/utils/io/ByteBufferChannel;->read(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object v0

    if-ne v0, v3, :cond_3

    return-object v3

    :cond_3
    move-object v0, v1

    .line 7
    :goto_1
    iget v0, v0, Ln/l0/d/e0;->a:I

    int-to-long v0, v0

    invoke-static {v0, v1}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object v0

    return-object v0
.end method

.method private final prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V
    .locals 4

    const/4 v0, 0x1

    const/4 v1, 0x0

    if-ltz p3, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v1

    :goto_0
    const-string v3, "Failed requirement."

    if-eqz v2, :cond_3

    if-ltz p4, :cond_1

    goto :goto_1

    :cond_1
    move v0, v1

    :goto_1
    if-eqz v0, :cond_2

    .line 1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v0

    iget v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    sub-int/2addr v0, v1

    add-int/2addr p4, p3

    .line 2
    invoke-virtual {p2}, Lio/ktor/utils/io/core/ByteOrder;->getNioOrder()Ljava/nio/ByteOrder;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/nio/ByteBuffer;->order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;

    .line 3
    invoke-static {p4, v0}, Ln/p0/k;->f(II)I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 4
    invoke-virtual {p1, p3}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    return-void

    .line 5
    :cond_2
    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 6
    :cond_3
    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public static synthetic read$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 8

    instance-of v0, p3, Lio/ktor/utils/io/ByteBufferChannel$read$1;

    if-eqz v0, :cond_0

    move-object v0, p3

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$read$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$read$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$read$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$read$1;

    invoke-direct {v0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel$read$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$read$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$read$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_6

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 p3, 0x0

    if-ltz p1, :cond_3

    move v2, v3

    goto :goto_1

    :cond_3
    move v2, p3

    :goto_1
    if-eqz v2, :cond_f

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v2

    if-eqz v2, :cond_c

    .line 5
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    iget-object v4, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v5, v4, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v5, :cond_4

    .line 7
    :goto_2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto/16 :goto_5

    .line 9
    :cond_4
    :try_start_1
    iget v5, v4, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-lez v5, :cond_b

    if-ge v5, p1, :cond_5

    goto :goto_4

    .line 10
    :cond_5
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->position()I

    move-result v5

    .line 11
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->limit()I

    move-result v6

    .line 12
    invoke-interface {p2, v2}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->limit()I

    move-result v7

    if-ne v6, v7, :cond_6

    move v6, v3

    goto :goto_3

    :cond_6
    move v6, p3

    :goto_3
    if-eqz v6, :cond_a

    .line 14
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->position()I

    move-result v6

    sub-int/2addr v6, v5

    if-ltz v6, :cond_7

    move p3, v3

    :cond_7
    if-eqz p3, :cond_9

    .line 15
    invoke-virtual {v4, v6}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result p3

    if-eqz p3, :cond_8

    .line 16
    invoke-direct {p0, v2, v4, v6}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move p3, v3

    goto :goto_4

    :cond_8
    const-string p1, "Check failed."

    .line 17
    new-instance p2, Ljava/lang/IllegalStateException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    :cond_9
    const-string p1, "Position has been moved backward: pushback is not supported."

    .line 18
    new-instance p2, Ljava/lang/IllegalStateException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    :cond_a
    const-string p1, "Buffer limit modified."

    .line 19
    new-instance p2, Ljava/lang/IllegalStateException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 20
    :cond_b
    :goto_4
    invoke-static {p3}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p3

    invoke-virtual {p3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 21
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 22
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_c
    :goto_5
    if-nez p3, :cond_e

    .line 23
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result p3

    if-eqz p3, :cond_d

    .line 24
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 25
    :cond_d
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$read$1;->label:I

    invoke-virtual {p0, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readBlockSuspend(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_e

    return-object v1

    .line 26
    :cond_e
    :goto_6
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 27
    :cond_f
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "min should be positive or zero"

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method private final readAsMuchAsPossible(Lio/ktor/utils/io/core/Buffer;II)I
    .locals 7

    .line 16
    :cond_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v0

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_4

    .line 17
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v3

    iget-object v3, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 18
    :try_start_0
    iget v4, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_1

    .line 19
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 20
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_1

    .line 21
    :cond_1
    :try_start_1
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getLimit()I

    move-result v4

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v5

    sub-int/2addr v4, v5

    .line 22
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v5

    invoke-static {v4, p3}, Ljava/lang/Math;->min(II)I

    move-result v6

    invoke-static {v5, v6}, Ljava/lang/Math;->min(II)I

    move-result v5

    invoke-virtual {v3, v5}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadAtMost(I)I

    move-result v5

    if-gtz v5, :cond_2

    move v0, v2

    goto :goto_0

    .line 23
    :cond_2
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v6

    if-ge v4, v6, :cond_3

    .line 24
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->position()I

    move-result v6

    add-int/2addr v6, v4

    invoke-virtual {v0, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 25
    :cond_3
    invoke-static {p1, v0}, Lio/ktor/utils/io/core/BufferPrimitivesJvmKt;->writeFully(Lio/ktor/utils/io/core/Buffer;Ljava/nio/ByteBuffer;)V

    .line 26
    invoke-direct {p0, v0, v3, v5}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move v0, v1

    .line 27
    :goto_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 28
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 29
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 30
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_4
    :goto_1
    move v0, v2

    move v5, v0

    :goto_2
    add-int/2addr p2, v5

    sub-int/2addr p3, v5

    if-eqz v0, :cond_6

    .line 31
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getLimit()I

    move-result v0

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v3

    if-le v0, v3, :cond_5

    goto :goto_3

    :cond_5
    move v1, v2

    :goto_3
    if-eqz v1, :cond_6

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 32
    iget v0, v0, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-gtz v0, :cond_0

    :cond_6
    return p2
.end method

.method private final readAsMuchAsPossible(Ljava/nio/ByteBuffer;)I
    .locals 7

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_3

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    :try_start_0
    iget v3, v2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-nez v3, :cond_0

    goto :goto_1

    .line 4
    :cond_0
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v3

    iget v4, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    sub-int/2addr v3, v4

    .line 5
    :goto_0
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v4

    if-nez v4, :cond_1

    goto :goto_1

    .line 6
    :cond_1
    iget v5, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    sub-int v6, v3, v5

    .line 7
    invoke-static {v6, v4}, Ljava/lang/Math;->min(II)I

    move-result v4

    invoke-virtual {v2, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadAtMost(I)I

    move-result v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_2

    .line 8
    :goto_1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 9
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_2

    :cond_2
    add-int v6, v5, v4

    .line 10
    :try_start_1
    invoke-virtual {v0, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 11
    invoke-virtual {v0, v5}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    .line 12
    invoke-virtual {p1, v0}, Ljava/nio/ByteBuffer;->put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;

    .line 13
    invoke-direct {p0, v0, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    add-int/2addr v1, v4

    goto :goto_0

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 15
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_3
    :goto_2
    return v1
.end method

.method private final readAsMuchAsPossible([BII)I
    .locals 7

    .line 33
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_3

    .line 34
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 35
    :try_start_0
    iget v3, v2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-nez v3, :cond_0

    goto :goto_1

    .line 36
    :cond_0
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v3

    iget v4, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    sub-int/2addr v3, v4

    :goto_0
    sub-int v4, p3, v1

    if-nez v4, :cond_1

    goto :goto_1

    .line 37
    :cond_1
    iget v5, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    sub-int v6, v3, v5

    .line 38
    invoke-static {v6, v4}, Ljava/lang/Math;->min(II)I

    move-result v4

    invoke-virtual {v2, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadAtMost(I)I

    move-result v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_2

    .line 39
    :goto_1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 40
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_2

    :cond_2
    add-int v6, v5, v4

    .line 41
    :try_start_1
    invoke-virtual {v0, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 42
    invoke-virtual {v0, v5}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    add-int v5, p2, v1

    .line 43
    invoke-virtual {v0, p1, v5, v4}, Ljava/nio/ByteBuffer;->get([BII)Ljava/nio/ByteBuffer;

    .line 44
    invoke-direct {p0, v0, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    add-int/2addr v1, v4

    goto :goto_0

    :catchall_0
    move-exception p1

    .line 45
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 46
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_3
    :goto_2
    return v1
.end method

.method public static synthetic readAsMuchAsPossible$default(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;IIILjava/lang/Object;)I
    .locals 0

    if-nez p5, :cond_2

    and-int/lit8 p5, p4, 0x2

    if-eqz p5, :cond_0

    const/4 p2, 0x0

    :cond_0
    and-int/lit8 p4, p4, 0x4

    if-eqz p4, :cond_1

    .line 1
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getLimit()I

    move-result p3

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result p4

    sub-int/2addr p3, p4

    :cond_1
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible(Lio/ktor/utils/io/core/Buffer;II)I

    move-result p0

    return p0

    .line 2
    :cond_2
    new-instance p0, Ljava/lang/UnsupportedOperationException;

    const-string p1, "Super calls with default arguments not supported in this target, function: readAsMuchAsPossible"

    invoke-direct {p0, p1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public static synthetic readAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 10

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 20
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 21
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 22
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x6

    const/4 v9, 0x0

    move-object v4, p0

    move-object v5, p1

    .line 23
    invoke-static/range {v4 .. v9}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible$default(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;IIILjava/lang/Object;)I

    move-result p2

    if-nez p2, :cond_4

    .line 24
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v2

    if-eqz v2, :cond_4

    .line 25
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    iget-object p2, p2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {p2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result p2

    if-eqz p2, :cond_3

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x6

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    .line 26
    invoke-static/range {v0 .. v5}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible$default(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;IIILjava/lang/Object;)I

    move-result p2

    goto :goto_3

    :cond_3
    const/4 p2, -0x1

    goto :goto_3

    :cond_4
    if-gtz p2, :cond_8

    .line 27
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getLimit()I

    move-result v2

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v4

    if-le v2, v4, :cond_5

    move v2, v3

    goto :goto_1

    :cond_5
    const/4 v2, 0x0

    :goto_1
    if-nez v2, :cond_6

    goto :goto_3

    .line 28
    :cond_6
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$5;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailableSuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_7

    return-object v1

    :cond_7
    :goto_2
    check-cast p2, Ljava/lang/Number;

    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result p2

    .line 29
    :cond_8
    :goto_3
    invoke-static {p2}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic readAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 4

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 10
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 11
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 12
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 13
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    move-result p2

    if-nez p2, :cond_4

    .line 14
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v2

    if-eqz v2, :cond_4

    .line 15
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    iget-object p2, p2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {p2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result p2

    if-eqz p2, :cond_3

    .line 16
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    move-result p2

    goto :goto_2

    :cond_3
    const/4 p2, -0x1

    goto :goto_2

    :cond_4
    if-gtz p2, :cond_7

    .line 17
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v2

    if-nez v2, :cond_5

    goto :goto_2

    .line 18
    :cond_5
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$4;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailableSuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_6

    return-object v1

    :cond_6
    :goto_1
    check-cast p2, Ljava/lang/Number;

    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result p2

    .line 19
    :cond_7
    :goto_2
    invoke-static {p2}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic readAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;[BIILn/i0/d;)Ljava/lang/Object;
    .locals 4

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible([BII)I

    move-result p4

    if-nez p4, :cond_4

    .line 5
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v2

    if-eqz v2, :cond_4

    .line 6
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p4

    iget-object p4, p4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {p4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result p4

    if-eqz p4, :cond_3

    .line 7
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible([BII)I

    move-result p4

    goto :goto_2

    :cond_3
    const/4 p4, -0x1

    goto :goto_2

    :cond_4
    if-gtz p4, :cond_7

    if-nez p3, :cond_5

    goto :goto_2

    .line 8
    :cond_5
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailable$3;->label:I

    invoke-virtual {p0, p1, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailableSuspend([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_6

    return-object v1

    :cond_6
    :goto_1
    check-cast p4, Ljava/lang/Number;

    invoke-virtual {p4}, Ljava/lang/Number;->intValue()I

    move-result p4

    .line 9
    :cond_7
    :goto_2
    invoke-static {p4}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic readFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;ILn/i0/d;)Ljava/lang/Object;
    .locals 6

    const/4 v2, 0x0

    const/4 v4, 0x2

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move v3, p2

    .line 1
    invoke-static/range {v0 .. v5}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible$default(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;IIILjava/lang/Object;)I

    move-result v0

    if-ne v0, p2, :cond_0

    .line 2
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    :cond_0
    sub-int/2addr p2, v0

    .line 3
    invoke-virtual {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readFullySuspend(Lio/ktor/utils/io/core/IoBuffer;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_1

    return-object p0

    .line 4
    :cond_1
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method private final readLineLoop(Lio/ktor/utils/io/LookAheadSession;Ljava/lang/Appendable;[CLjava/nio/CharBuffer;Ln/l0/c/l;Ln/l0/c/l;Ln/l0/c/l;)Z
    .locals 14
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/LookAheadSession;",
            "Ljava/lang/Appendable;",
            "[C",
            "Ljava/nio/CharBuffer;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/lang/Integer;",
            "Ljava/lang/Boolean;",
            ">;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/lang/Integer;",
            "Ln/c0;",
            ">;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ljava/lang/Long;",
            ">;)Z"
        }
    .end annotation

    move-object v0, p1

    move-object/from16 v1, p2

    const/4 v2, 0x1

    move v3, v2

    .line 1
    :cond_0
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    move-object/from16 v5, p5

    invoke-interface {v5, v4}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Boolean;

    invoke-virtual {v4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v4

    const/4 v6, 0x0

    if-nez v4, :cond_2

    :cond_1
    move-object v8, p0

    goto/16 :goto_3

    .line 2
    :cond_2
    invoke-interface {p1, v6, v2}, Lio/ktor/utils/io/LookAheadSession;->request(II)Ljava/nio/ByteBuffer;

    move-result-object v4

    if-eqz v4, :cond_1

    .line 3
    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->position()I

    move-result v7

    .line 4
    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v8

    if-ge v8, v3, :cond_3

    move-object v8, p0

    .line 5
    invoke-static {p0, v4, v3}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    goto :goto_0

    :cond_3
    move-object v8, p0

    :goto_0
    move-object/from16 v9, p7

    .line 6
    invoke-interface {v9, v4}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Number;

    invoke-virtual {v3}, Ljava/lang/Number;->longValue()J

    move-result-wide v10

    .line 7
    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->position()I

    move-result v3

    sub-int/2addr v3, v7

    .line 8
    invoke-interface {p1, v3}, Lio/ktor/utils/io/LookAheadSession;->consumed(I)V

    const/16 v3, 0x20

    shr-long v12, v10, v3

    long-to-int v3, v12

    const-wide v12, 0xffffffffL

    and-long/2addr v10, v12

    long-to-int v7, v10

    const/4 v10, -0x1

    if-ne v7, v10, :cond_4

    move v10, v6

    goto :goto_1

    :cond_4
    if-nez v7, :cond_5

    .line 9
    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v4

    if-eqz v4, :cond_5

    goto :goto_1

    .line 10
    :cond_5
    invoke-static {v2, v7}, Ljava/lang/Math;->max(II)I

    move-result v4

    move v10, v4

    .line 11
    :goto_1
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    move-object/from16 v7, p6

    invoke-interface {v7, v4}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12
    instance-of v4, v1, Ljava/lang/StringBuilder;

    if-eqz v4, :cond_6

    .line 13
    move-object v4, v1

    check-cast v4, Ljava/lang/StringBuilder;

    move-object/from16 v11, p3

    invoke-virtual {v4, v11, v6, v3}, Ljava/lang/StringBuilder;->append([CII)Ljava/lang/StringBuilder;

    move-object/from16 v4, p4

    goto :goto_2

    :cond_6
    move-object/from16 v11, p3

    move-object/from16 v4, p4

    .line 14
    invoke-interface {v1, v4, v6, v3}, Ljava/lang/Appendable;->append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;

    :goto_2
    move v3, v10

    if-gtz v10, :cond_0

    :goto_3
    if-eqz v3, :cond_7

    move v2, v6

    :cond_7
    return v2
.end method

.method public static synthetic readPacket$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;IILn/i0/d;)Ljava/lang/Object;
    .locals 4

    instance-of v0, p3, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;

    if-eqz v0, :cond_0

    move-object v0, p3

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;

    invoke-direct {v0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_4

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p3

    if-eqz p3, :cond_4

    invoke-virtual {p3}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object p3

    if-nez p3, :cond_3

    goto :goto_1

    :cond_3
    invoke-static {p3}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p0, Lkotlin/KotlinNothingValueException;

    invoke-direct {p0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p0

    :cond_4
    :goto_1
    if-nez p1, :cond_5

    .line 5
    sget-object p0, Lio/ktor/utils/io/core/ByteReadPacket;->Companion:Lio/ktor/utils/io/core/ByteReadPacket$Companion;

    invoke-virtual {p0}, Lio/ktor/utils/io/core/ByteReadPacket$Companion;->getEmpty()Lio/ktor/utils/io/core/ByteReadPacket;

    move-result-object p0

    return-object p0

    .line 6
    :cond_5
    invoke-static {p2}, Lio/ktor/utils/io/core/PacketJVMKt;->BytePacketBuilder(I)Lio/ktor/utils/io/core/BytePacketBuilder;

    move-result-object p2

    .line 7
    invoke-static {}, Lio/ktor/utils/io/internal/ObjectPoolKt;->getBufferPool()Lio/ktor/utils/io/pool/ObjectPool;

    move-result-object p3

    invoke-interface {p3}, Lio/ktor/utils/io/pool/ObjectPool;->borrow()Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Ljava/nio/ByteBuffer;

    :goto_2
    if-lez p1, :cond_8

    .line 8
    :try_start_0
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->clear()Ljava/nio/Buffer;

    .line 9
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v2

    if-le v2, p1, :cond_6

    .line 10
    invoke-virtual {p3, p1}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 11
    :cond_6
    invoke-direct {p0, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    move-result v2

    if-nez v2, :cond_7

    goto :goto_3

    .line 12
    :cond_7
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->flip()Ljava/nio/Buffer;

    .line 13
    invoke-static {p2, p3}, Lio/ktor/utils/io/core/OutputArraysJVMKt;->writeFully(Lio/ktor/utils/io/core/Output;Ljava/nio/ByteBuffer;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    sub-int/2addr p1, v2

    goto :goto_2

    :catchall_0
    move-exception p0

    .line 14
    invoke-static {}, Lio/ktor/utils/io/internal/ObjectPoolKt;->getBufferPool()Lio/ktor/utils/io/pool/ObjectPool;

    move-result-object p1

    invoke-interface {p1, p3}, Lio/ktor/utils/io/pool/ObjectPool;->recycle(Ljava/lang/Object;)V

    .line 15
    invoke-virtual {p2}, Lio/ktor/utils/io/core/AbstractOutput;->release()V

    .line 16
    throw p0

    :cond_8
    :goto_3
    if-nez p1, :cond_9

    .line 17
    invoke-static {}, Lio/ktor/utils/io/internal/ObjectPoolKt;->getBufferPool()Lio/ktor/utils/io/pool/ObjectPool;

    move-result-object p0

    invoke-interface {p0, p3}, Lio/ktor/utils/io/pool/ObjectPool;->recycle(Ljava/lang/Object;)V

    .line 18
    invoke-virtual {p2}, Lio/ktor/utils/io/core/BytePacketBuilder;->build()Lio/ktor/utils/io/core/ByteReadPacket;

    move-result-object p0

    goto :goto_5

    .line 19
    :cond_9
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacket$1;->label:I

    invoke-virtual {p0, p1, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readPacketSuspend(ILio/ktor/utils/io/core/BytePacketBuilder;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v1, :cond_a

    return-object v1

    .line 20
    :cond_a
    :goto_4
    move-object p0, p3

    check-cast p0, Lio/ktor/utils/io/core/ByteReadPacket;

    :goto_5
    return-object p0
.end method

.method private final synthetic readPrimitive(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T:",
            "Ljava/lang/Number;",
            ">(I",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "+TT;>;",
            "Ln/i0/d<",
            "-TT;>;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    :goto_0
    const/4 v0, 0x0

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v1

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-eqz v1, :cond_3

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    iget-object v4, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    :try_start_0
    iget v5, v4, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v5, :cond_0

    .line 4
    invoke-static {v3}, Ln/l0/d/p;->b(I)V

    .line 5
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 6
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v3}, Ln/l0/d/p;->a(I)V

    goto :goto_2

    .line 7
    :cond_0
    :try_start_1
    invoke-virtual {v4, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v5

    if-nez v5, :cond_1

    move v1, v2

    goto :goto_1

    .line 8
    :cond_1
    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v0

    if-ge v0, p1, :cond_2

    invoke-static {p0, v1, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    .line 9
    :cond_2
    invoke-interface {p2, v1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Number;

    .line 10
    invoke-static {p0, v1, v4, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move v1, v3

    .line 11
    :goto_1
    invoke-static {v3}, Ln/l0/d/p;->b(I)V

    .line 12
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 13
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v3}, Ln/l0/d/p;->a(I)V

    goto :goto_3

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {v3}, Ln/l0/d/p;->b(I)V

    .line 15
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 16
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v3}, Ln/l0/d/p;->a(I)V

    throw p1

    :cond_3
    :goto_2
    move v1, v2

    :goto_3
    if-eqz v1, :cond_5

    if-nez v0, :cond_4

    const-string p1, "result"

    .line 17
    invoke-static {p1}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    :cond_4
    return-object v0

    .line 18
    :cond_5
    invoke-static {v2}, Ln/l0/d/p;->c(I)V

    invoke-virtual {p0, p1, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v3}, Ln/l0/d/p;->c(I)V

    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-eqz v0, :cond_6

    goto :goto_0

    .line 19
    :cond_6
    new-instance p2, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "EOF while "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " bytes expected"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method public static synthetic readRemaining$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;JILn/i0/d;)Ljava/lang/Object;
    .locals 4

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForWrite()Z

    move-result p4

    if-eqz p4, :cond_4

    .line 4
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosedCause()Ljava/lang/Throwable;

    move-result-object p4

    if-nez p4, :cond_3

    .line 5
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->remainingPacket(JI)Lio/ktor/utils/io/core/ByteReadPacket;

    move-result-object p0

    goto :goto_2

    .line 6
    :cond_3
    throw p4

    .line 7
    :cond_4
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemaining$1;->label:I

    invoke-virtual {p0, p1, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readRemainingSuspend(JILn/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_5

    return-object v1

    .line 8
    :cond_5
    :goto_1
    move-object p0, p4

    check-cast p0, Lio/ktor/utils/io/core/ByteReadPacket;

    :goto_2
    return-object p0
.end method

.method private final readSuspendPredicate(I)Z
    .locals 2

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 2
    iget-object v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-ge v1, p1, :cond_1

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p1

    if-eqz p1, :cond_0

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;)Ln/i0/d;

    move-result-object p1

    if-eqz p1, :cond_0

    sget-object p1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-eq v0, p1, :cond_1

    .line 4
    instance-of p1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-nez p1, :cond_1

    :cond_0
    const/4 p1, 0x1

    goto :goto_0

    :cond_1
    const/4 p1, 0x0

    :goto_0
    return p1
.end method

.method public static synthetic readSuspendableSession$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 2

    .line 1
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendableSession$2;

    const/4 v1, 0x0

    invoke-direct {v0, p0, p1, v1}, Lio/ktor/utils/io/ByteBufferChannel$readSuspendableSession$2;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;Ln/i0/d;)V

    invoke-virtual {p0, v0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->lookAheadSuspend(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    .line 2
    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic readUTF8Line$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/i0/d;)Ljava/lang/Object;
    .locals 5

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;->L$0:Ljava/lang/Object;

    check-cast p0, Ljava/lang/StringBuilder;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    .line 5
    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;->L$0:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8Line$1;->label:I

    invoke-virtual {p0, p2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readUTF8LineTo(Ljava/lang/Appendable;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_3

    return-object v1

    :cond_3
    move-object v4, p2

    move-object p2, p0

    move-object p0, v4

    :goto_1
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    if-nez p1, :cond_4

    const/4 p0, 0x0

    return-object p0

    .line 6
    :cond_4
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic readUTF8LineTo$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/lang/Appendable;ILn/i0/d;)Ljava/lang/Object;
    .locals 0

    .line 1
    invoke-virtual {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readUTF8LineToAscii(Ljava/lang/Appendable;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0
.end method

.method private final reading(Ln/l0/c/p;)Z
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/p<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "-",
            "Lio/ktor/utils/io/internal/RingBufferCapacity;",
            "Ljava/lang/Boolean;",
            ">;)Z"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    const/4 v3, 0x1

    .line 3
    :try_start_0
    iget v4, v2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_0

    .line 4
    invoke-static {v3}, Ln/l0/d/p;->b(I)V

    .line 5
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 6
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v3}, Ln/l0/d/p;->a(I)V

    return v1

    .line 7
    :cond_0
    :try_start_1
    invoke-interface {p1, v0, v2}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/lang/Boolean;

    invoke-virtual {p1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {v3}, Ln/l0/d/p;->b(I)V

    .line 8
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 9
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v3}, Ln/l0/d/p;->a(I)V

    return p1

    :catchall_0
    move-exception p1

    .line 10
    invoke-static {v3}, Ln/l0/d/p;->b(I)V

    .line 11
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 12
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v3}, Ln/l0/d/p;->a(I)V

    throw p1

    :cond_1
    return v1
.end method

.method private final releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->pool:Lio/ktor/utils/io/pool/ObjectPool;

    invoke-interface {v0, p1}, Lio/ktor/utils/io/pool/ObjectPool;->recycle(Ljava/lang/Object;)V

    return-void
.end method

.method private final remainingPacket(JI)Lio/ktor/utils/io/core/ByteReadPacket;
    .locals 8

    .line 1
    invoke-static {p3}, Lio/ktor/utils/io/core/PacketJVMKt;->BytePacketBuilder(I)Lio/ktor/utils/io/core/BytePacketBuilder;

    move-result-object p3

    const/4 v0, 0x0

    const/4 v1, 0x1

    .line 2
    :try_start_0
    invoke-static {p3, v1, v0}, Lio/ktor/utils/io/core/internal/UnsafeKt;->prepareWriteHead(Lio/ktor/utils/io/core/Output;ILio/ktor/utils/io/core/internal/ChunkBuffer;)Lio/ktor/utils/io/core/internal/ChunkBuffer;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 3
    :goto_0
    :try_start_1
    invoke-virtual {v0}, Lio/ktor/utils/io/core/Buffer;->getLimit()I

    move-result v2

    invoke-virtual {v0}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v3

    sub-int/2addr v2, v3

    int-to-long v2, v2

    cmp-long v2, v2, p1

    if-lez v2, :cond_0

    long-to-int v2, p1

    .line 4
    invoke-virtual {v0, v2}, Lio/ktor/utils/io/core/Buffer;->resetForWrite(I)V

    :cond_0
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x6

    const/4 v7, 0x0

    move-object v2, p0

    move-object v3, v0

    .line 5
    invoke-static/range {v2 .. v7}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible$default(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;IIILjava/lang/Object;)I

    move-result v2

    int-to-long v2, v2

    sub-long/2addr p1, v2

    const-wide/16 v2, 0x0

    cmp-long v2, p1, v2

    if-lez v2, :cond_1

    .line 6
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-nez v2, :cond_1

    move v2, v1

    goto :goto_1

    :cond_1
    const/4 v2, 0x0

    :goto_1
    if-nez v2, :cond_2

    .line 7
    :try_start_2
    invoke-static {p3, v0}, Lio/ktor/utils/io/core/internal/UnsafeKt;->afterHeadWrite(Lio/ktor/utils/io/core/Output;Lio/ktor/utils/io/core/internal/ChunkBuffer;)V

    .line 8
    invoke-virtual {p3}, Lio/ktor/utils/io/core/BytePacketBuilder;->build()Lio/ktor/utils/io/core/ByteReadPacket;

    move-result-object p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    return-object p1

    .line 9
    :cond_2
    :try_start_3
    invoke-static {p3, v1, v0}, Lio/ktor/utils/io/core/internal/UnsafeKt;->prepareWriteHead(Lio/ktor/utils/io/core/Output;ILio/ktor/utils/io/core/internal/ChunkBuffer;)Lio/ktor/utils/io/core/internal/ChunkBuffer;

    move-result-object v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception p1

    .line 10
    :try_start_4
    invoke-static {p3, v0}, Lio/ktor/utils/io/core/internal/UnsafeKt;->afterHeadWrite(Lio/ktor/utils/io/core/Output;Lio/ktor/utils/io/core/internal/ChunkBuffer;)V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception p1

    .line 11
    invoke-virtual {p3}, Lio/ktor/utils/io/core/AbstractOutput;->release()V

    .line 12
    throw p1
.end method

.method private final resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;
    .locals 1

    .line 1
    :goto_0
    invoke-direct {p1}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    sget-object v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-eq p1, v0, :cond_0

    const/4 p1, 0x0

    return-object p1

    .line 2
    :cond_0
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    .line 3
    iget-object p2, p1, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz p2, :cond_1

    goto :goto_0

    :cond_1
    return-object p1
.end method

.method private final restoreStateAfterRead()V
    .locals 7

    const/4 v0, 0x0

    move-object v1, v0

    .line 1
    :cond_0
    iget-object v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    .line 2
    move-object v3, v2

    check-cast v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;

    if-eqz v1, :cond_1

    .line 3
    iget-object v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->resetForWrite()V

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    move-object v1, v0

    .line 5
    :cond_1
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->stopReading$ktor_io()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    .line 6
    instance-of v5, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-eqz v5, :cond_2

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v5

    if-ne v5, v3, :cond_2

    .line 7
    iget-object v3, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryLockForRelease()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 8
    check-cast v4, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    .line 9
    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    move-object v6, v4

    move-object v4, v1

    move-object v1, v6

    .line 10
    :cond_2
    sget-object v3, Lio/ktor/utils/io/ByteBufferChannel;->_state$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    invoke-virtual {v3, p0, v2, v4}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 11
    sget-object v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-ne v4, v0, :cond_4

    if-eqz v1, :cond_3

    .line 12
    invoke-virtual {v1}, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;->getInitial()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    move-result-object v0

    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    .line 13
    :cond_3
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    return-void

    .line 14
    :cond_4
    instance-of v1, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-eqz v1, :cond_5

    .line 15
    iget-object v1, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 16
    iget-object v1, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryLockForRelease()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 17
    invoke-virtual {v3, p0, v4, v0}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 18
    iget-object v0, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/RingBufferCapacity;->resetForWrite()V

    .line 19
    check-cast v4, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    invoke-virtual {v4}, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;->getInitial()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    move-result-object v0

    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    .line 20
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    :cond_5
    return-void
.end method

.method private final resumeClosed(Ljava/lang/Throwable;)V
    .locals 4

    .line 1
    sget-object v0, Lio/ktor/utils/io/ByteBufferChannel;->_readOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v1, 0x0

    invoke-virtual {v0, p0, v1}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ln/i0/d;

    if-eqz v0, :cond_2

    if-eqz p1, :cond_0

    .line 2
    sget-object v2, Ln/n;->a:Ln/n$a;

    invoke-static {p1}, Ln/o;->a(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object v2

    invoke-static {v2}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    invoke-interface {v0, v2}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    goto :goto_1

    .line 3
    :cond_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 4
    iget v2, v2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-lez v2, :cond_1

    const/4 v2, 0x1

    goto :goto_0

    :cond_1
    const/4 v2, 0x0

    :goto_0
    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v2

    .line 5
    sget-object v3, Ln/n;->a:Ln/n$a;

    invoke-static {v2}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    invoke-interface {v0, v2}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    .line 6
    :cond_2
    :goto_1
    sget-object v0, Lio/ktor/utils/io/ByteBufferChannel;->_writeOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    invoke-virtual {v0, p0, v1}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ln/i0/d;

    if-eqz v0, :cond_4

    if-eqz p1, :cond_3

    goto :goto_2

    .line 7
    :cond_3
    new-instance p1, Lio/ktor/utils/io/ClosedWriteChannelException;

    const-string v1, "Byte channel was closed"

    invoke-direct {p1, v1}, Lio/ktor/utils/io/ClosedWriteChannelException;-><init>(Ljava/lang/String;)V

    .line 8
    :goto_2
    sget-object v1, Ln/n;->a:Ln/n$a;

    invoke-static {p1}, Ln/o;->a(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {p1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    invoke-interface {v0, p1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    :cond_4
    return-void
.end method

.method private final resumeReadOp()V
    .locals 3

    .line 1
    sget-object v0, Lio/ktor/utils/io/ByteBufferChannel;->_readOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v1, 0x0

    invoke-virtual {v0, p0, v1}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ln/i0/d;

    if-eqz v0, :cond_2

    .line 2
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v2

    if-eqz v2, :cond_0

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v1

    :cond_0
    if-eqz v1, :cond_1

    .line 3
    sget-object v2, Ln/n;->a:Ln/n$a;

    invoke-static {v1}, Ln/o;->a(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object v1

    invoke-static {v1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {v0, v1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    goto :goto_0

    .line 4
    :cond_1
    sget-object v1, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    sget-object v2, Ln/n;->a:Ln/n$a;

    invoke-static {v1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {v0, v1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    :cond_2
    :goto_0
    return-void
.end method

.method private final resumeReadOp(Ln/l0/c/a;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/a<",
            "+",
            "Ljava/lang/Throwable;",
            ">;)V"
        }
    .end annotation

    .line 5
    sget-object v0, Lio/ktor/utils/io/ByteBufferChannel;->_readOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v1, 0x0

    invoke-virtual {v0, p0, v1}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ln/i0/d;

    if-eqz v0, :cond_0

    invoke-interface {p1}, Ln/l0/c/a;->invoke()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/lang/Throwable;

    sget-object v1, Ln/n;->a:Ln/n$a;

    invoke-static {p1}, Ln/o;->a(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {p1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    invoke-interface {v0, p1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    :cond_0
    return-void
.end method

.method private final resumeWriteOp()V
    .locals 4

    .line 1
    :cond_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteOp()Ln/i0/d;

    move-result-object v0

    if-eqz v0, :cond_3

    .line 2
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v1

    if-nez v1, :cond_1

    .line 3
    iget-object v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v2, :cond_1

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    .line 5
    instance-of v3, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Writing;

    if-nez v3, :cond_1

    .line 6
    instance-of v3, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$ReadingWriting;

    if-nez v3, :cond_1

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-eq v2, v3, :cond_1

    return-void

    .line 7
    :cond_1
    sget-object v2, Lio/ktor/utils/io/ByteBufferChannel;->_writeOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v3, 0x0

    invoke-virtual {v2, p0, v0, v3}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    if-nez v1, :cond_2

    .line 8
    sget-object v1, Ln/c0;->a:Ln/c0;

    sget-object v2, Ln/n;->a:Ln/n$a;

    goto :goto_0

    :cond_2
    invoke-virtual {v1}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v1

    sget-object v2, Ln/n;->a:Ln/n$a;

    invoke-static {v1}, Ln/o;->a(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object v1

    :goto_0
    invoke-static {v1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {v0, v1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    :cond_3
    return-void
.end method

.method private final rollBytes(Ljava/nio/ByteBuffer;I)V
    .locals 3

    .line 1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v0

    .line 2
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v1

    add-int/2addr v1, p2

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    sub-int/2addr p2, v0

    const/4 v0, 0x0

    :goto_0
    if-ge v0, p2, :cond_0

    .line 3
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v1

    add-int/lit8 v1, v1, -0x8

    add-int/2addr v1, v0

    invoke-virtual {p1, v0}, Ljava/nio/ByteBuffer;->get(I)B

    move-result v2

    invoke-virtual {p1, v1, v2}, Ljava/nio/ByteBuffer;->put(IB)Ljava/nio/ByteBuffer;

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method private final setClosed(Lio/ktor/utils/io/internal/ClosedElement;)V
    .locals 0

    .line 1
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_closed:Ljava/lang/Object;

    return-void
.end method

.method private final setReadOp(Ln/i0/d;)V
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)V"
        }
    .end annotation

    .line 1
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_readOp:Ljava/lang/Object;

    return-void
.end method

.method private final setWriteOp(Ln/i0/d;)V
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)V"
        }
    .end annotation

    .line 1
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_writeOp:Ljava/lang/Object;

    return-void
.end method

.method private final setupDelegateTo(Lio/ktor/utils/io/ByteBufferChannel;Z)Lio/ktor/utils/io/internal/JoiningState;
    .locals 3

    if-eq p0, p1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_4

    .line 1
    new-instance v0, Lio/ktor/utils/io/internal/JoiningState;

    invoke-direct {v0, p1, p2}, Lio/ktor/utils/io/internal/JoiningState;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Z)V

    .line 2
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v1

    invoke-virtual {p1, v1}, Lio/ktor/utils/io/ByteBufferChannel;->setWriteByteOrder(Lio/ktor/utils/io/core/ByteOrder;)V

    .line 3
    iput-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v1

    if-nez v1, :cond_1

    .line 5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    return-object v0

    .line 6
    :cond_1
    invoke-virtual {v1}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v2

    if-eqz v2, :cond_2

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object p2

    invoke-virtual {p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->close(Ljava/lang/Throwable;)Z

    goto :goto_1

    :cond_2
    if-eqz p2, :cond_3

    .line 7
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v1, :cond_3

    invoke-static {p1}, Lio/ktor/utils/io/ByteWriteChannelKt;->close(Lio/ktor/utils/io/ByteWriteChannel;)Z

    goto :goto_1

    .line 8
    :cond_3
    invoke-virtual {p1}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :goto_1
    return-object v0

    .line 9
    :cond_4
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Failed requirement."

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private final setupStateForRead()Ljava/nio/ByteBuffer;
    .locals 4

    .line 1
    :cond_0
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    .line 2
    move-object v1, v0

    check-cast v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;

    .line 3
    sget-object v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    invoke-static {v1, v2}, Ln/l0/d/r;->a(Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v2

    const/4 v3, 0x0

    if-eqz v2, :cond_3

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_2

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v0

    if-nez v0, :cond_1

    goto :goto_0

    :cond_1
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0

    :cond_2
    :goto_0
    return-object v3

    .line 4
    :cond_3
    sget-object v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    invoke-static {v1, v2}, Ln/l0/d/r;->a(Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_5

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v0

    if-nez v0, :cond_4

    goto :goto_1

    :cond_4
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0

    :cond_5
    :goto_1
    return-object v3

    .line 5
    :cond_6
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v2

    if-eqz v2, :cond_8

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v2

    if-nez v2, :cond_7

    goto :goto_2

    :cond_7
    invoke-static {v2}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0

    .line 6
    :cond_8
    :goto_2
    iget-object v2, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 7
    iget v2, v2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-nez v2, :cond_9

    return-object v3

    .line 8
    :cond_9
    invoke-virtual {v1}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->startReading$ktor_io()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    .line 9
    sget-object v2, Lio/ktor/utils/io/ByteBufferChannel;->_state$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    invoke-virtual {v2, p0, v0, v1}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 10
    invoke-virtual {v1}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getReadBuffer()Ljava/nio/ByteBuffer;

    move-result-object v0

    .line 11
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getReadByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v2

    iget v3, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    iget-object v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 12
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    .line 13
    invoke-direct {p0, v0, v2, v3, v1}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    return-object v0
.end method

.method private final shouldResumeReadOp()Z
    .locals 2

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_1

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-eq v0, v1, :cond_0

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    instance-of v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    goto :goto_0

    :cond_1
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method private final suspensionForSize(ILn/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    :cond_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 2
    iget-object v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-ge v1, p1, :cond_2

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v1

    if-eqz v1, :cond_1

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;)Ln/i0/d;

    move-result-object v1

    if-eqz v1, :cond_1

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-eq v0, v1, :cond_2

    .line 4
    instance-of v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-nez v0, :cond_2

    :cond_1
    move v0, v2

    goto :goto_0

    :cond_2
    move v0, v3

    :goto_0
    if-nez v0, :cond_3

    .line 5
    sget-object p1, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    sget-object v0, Ln/n;->a:Ln/n$a;

    invoke-static {p1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    invoke-interface {p2, p1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    goto/16 :goto_9

    .line 6
    :cond_3
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_7

    .line 7
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v1

    if-eqz v1, :cond_4

    .line 8
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object p1

    sget-object v0, Ln/n;->a:Ln/n$a;

    invoke-static {p1}, Ln/o;->a(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {p1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    invoke-interface {p2, p1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    .line 9
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    return-object p1

    .line 10
    :cond_4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result v0

    .line 11
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    iget-object v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 12
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-lt v1, p1, :cond_5

    move p1, v2

    goto :goto_1

    :cond_5
    move p1, v3

    :goto_1
    if-eqz v0, :cond_6

    if-eqz p1, :cond_6

    goto :goto_2

    :cond_6
    move v2, v3

    .line 13
    :goto_2
    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object p1

    sget-object v0, Ln/n;->a:Ln/n$a;

    invoke-static {p1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    invoke-interface {p2, p1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    .line 14
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    return-object p1

    .line 15
    :cond_7
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getReadOp()Ln/i0/d;

    move-result-object v0

    if-nez v0, :cond_8

    move v0, v2

    goto :goto_3

    :cond_8
    move v0, v3

    :goto_3
    if-eqz v0, :cond_12

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-nez v0, :cond_b

    .line 16
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 17
    iget-object v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 18
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-ge v1, p1, :cond_a

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v1

    if-eqz v1, :cond_9

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;)Ln/i0/d;

    move-result-object v1

    if-eqz v1, :cond_9

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-eq v0, v1, :cond_a

    .line 19
    instance-of v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-nez v0, :cond_a

    :cond_9
    move v0, v2

    goto :goto_4

    :cond_a
    move v0, v3

    :goto_4
    if-eqz v0, :cond_b

    move v0, v2

    goto :goto_5

    :cond_b
    move v0, v3

    :goto_5
    if-nez v0, :cond_d

    :cond_c
    move v2, v3

    goto :goto_8

    .line 20
    :cond_d
    sget-object v0, Lio/ktor/utils/io/ByteBufferChannel;->_readOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v1, 0x0

    invoke-virtual {v0, p0, v1, p2}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_7

    .line 21
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v4

    if-nez v4, :cond_10

    .line 22
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    .line 23
    iget-object v5, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 24
    iget v5, v5, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-ge v5, p1, :cond_f

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v5

    if-eqz v5, :cond_e

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;)Ln/i0/d;

    move-result-object v5

    if-eqz v5, :cond_e

    sget-object v5, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-eq v4, v5, :cond_f

    .line 25
    instance-of v4, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-nez v4, :cond_f

    :cond_e
    move v4, v2

    goto :goto_6

    :cond_f
    move v4, v3

    :goto_6
    if-eqz v4, :cond_10

    move v4, v2

    goto :goto_7

    :cond_10
    move v4, v3

    :goto_7
    if-nez v4, :cond_11

    .line 26
    invoke-virtual {v0, p0, p2, v1}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_c

    :cond_11
    :goto_8
    if-eqz v2, :cond_0

    .line 27
    :goto_9
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    return-object p1

    .line 28
    :cond_12
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Operation is already in progress"

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private final tryCompleteJoining(Lio/ktor/utils/io/internal/JoiningState;)Z
    .locals 3

    const/4 v0, 0x1

    .line 1
    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryReleaseBuffer(Z)Z

    move-result v1

    if-nez v1, :cond_0

    const/4 p1, 0x0

    return p1

    .line 2
    :cond_0
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->ensureClosedJoined(Lio/ktor/utils/io/internal/JoiningState;)V

    .line 3
    sget-object p1, Lio/ktor/utils/io/ByteBufferChannel;->_readOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v1, 0x0

    invoke-virtual {p1, p0, v1}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ln/i0/d;

    if-eqz p1, :cond_1

    .line 4
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Joining is in progress"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    sget-object v2, Ln/n;->a:Ln/n$a;

    invoke-static {v1}, Ln/o;->a(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object v1

    invoke-static {v1}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {p1, v1}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    .line 5
    :cond_1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    return v0
.end method

.method private final tryReleaseBuffer(Z)Z
    .locals 8

    const/4 v0, 0x0

    move-object v1, v0

    .line 1
    :cond_0
    iget-object v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    .line 2
    move-object v3, v2

    check-cast v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;

    if-eqz v1, :cond_1

    .line 3
    iget-object v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->resetForWrite()V

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    move-object v1, v0

    .line 5
    :cond_1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v4

    .line 6
    sget-object v5, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    const/4 v6, 0x1

    if-ne v3, v5, :cond_2

    return v6

    .line 7
    :cond_2
    sget-object v7, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-ne v3, v7, :cond_3

    goto :goto_0

    :cond_3
    if-eqz v4, :cond_6

    .line 8
    instance-of v1, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-eqz v1, :cond_6

    iget-object v1, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryLockForRelease()Z

    move-result v1

    if-nez v1, :cond_4

    invoke-virtual {v4}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v1

    if-eqz v1, :cond_6

    .line 9
    :cond_4
    invoke-virtual {v4}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v1

    if-eqz v1, :cond_5

    iget-object v1, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->forceLockForRelease()V

    .line 10
    :cond_5
    check-cast v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    invoke-virtual {v3}, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;->getInitial()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    move-result-object v1

    goto :goto_0

    :cond_6
    if-eqz p1, :cond_8

    .line 11
    instance-of v1, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-eqz v1, :cond_8

    iget-object v1, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryLockForRelease()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 12
    check-cast v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    invoke-virtual {v3}, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;->getInitial()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    move-result-object v1

    .line 13
    :goto_0
    sget-object v3, Lio/ktor/utils/io/ByteBufferChannel;->_state$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    invoke-virtual {v3, p0, v2, v5}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    if-eqz v1, :cond_7

    .line 14
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    if-ne p1, v5, :cond_7

    .line 15
    invoke-direct {p0, v1}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    :cond_7
    return v6

    :cond_8
    const/4 p1, 0x0

    return p1
.end method

.method private final tryWritePacketPart(Lio/ktor/utils/io/core/ByteReadPacket;)I
    .locals 9

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-static {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move-object v0, p0

    .line 2
    :goto_0
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v1

    if-eqz v1, :cond_9

    .line 3
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 4
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v3

    .line 5
    :try_start_0
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v5

    if-nez v5, :cond_5

    .line 6
    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->getRemaining()J

    move-result-wide v5

    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v7

    int-to-long v7, v7

    invoke-static {v5, v6, v7, v8}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v5

    long-to-int v5, v5

    invoke-virtual {v2, v5}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteAtMost(I)I

    move-result v5

    if-lez v5, :cond_1

    .line 7
    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->position()I

    move-result v6

    add-int/2addr v6, v5

    invoke-virtual {v1, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 8
    invoke-static {p1, v1}, Lio/ktor/utils/io/core/ByteBuffersKt;->readFully(Lio/ktor/utils/io/core/ByteReadPacket;Ljava/nio/ByteBuffer;)I

    .line 9
    invoke-direct {v0, v1, v2, v5}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10
    :cond_1
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_2

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_3

    :cond_2
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_3
    if-eq v0, p0, :cond_4

    .line 11
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v6

    sub-long/2addr v6, v3

    add-long/2addr v1, v6

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 12
    :cond_4
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 13
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_1

    .line 14
    :cond_5
    :try_start_1
    invoke-virtual {v5}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 15
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v1

    if-nez v1, :cond_6

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v1

    if-eqz v1, :cond_7

    :cond_6
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_7
    if-eq v0, p0, :cond_8

    .line 16
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v5

    sub-long/2addr v5, v3

    add-long/2addr v1, v5

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 17
    :cond_8
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 18
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_9
    const/4 v5, 0x0

    :goto_1
    return v5
.end method

.method private final tryWritePrimitive(Ljava/nio/ByteBuffer;ILio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "I",
            "Lio/ktor/utils/io/internal/RingBufferCapacity;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;)Z"
        }
    .end annotation

    .line 1
    invoke-virtual {p3, p2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v0

    if-nez v0, :cond_0

    const/4 p1, 0x0

    return p1

    .line 2
    :cond_0
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 3
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v0

    if-ge v0, p2, :cond_1

    .line 4
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v0

    invoke-virtual {p1, v0}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 5
    invoke-interface {p4, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6
    invoke-static {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_0

    .line 7
    :cond_1
    invoke-interface {p4, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 8
    :goto_0
    invoke-static {p0, p1, p3, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 9
    invoke-virtual {p3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_2

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_3

    .line 10
    :cond_2
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 11
    :cond_3
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 12
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    const/4 p1, 0x1

    return p1
.end method

.method public static synthetic write$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 5

    instance-of v0, p3, Lio/ktor/utils/io/ByteBufferChannel$write$1;

    if-eqz v0, :cond_0

    move-object v0, p3

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;

    invoke-direct {v0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel$write$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget p0, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->I$0:I

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->L$1:Ljava/lang/Object;

    check-cast p1, Ln/l0/c/l;

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->L$0:Ljava/lang/Object;

    check-cast p2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v4, p1

    move p1, p0

    move-object p0, p2

    move-object p2, v4

    goto :goto_2

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 p3, 0x0

    if-lez p1, :cond_3

    move v2, v3

    goto :goto_1

    :cond_3
    move v2, p3

    :goto_1
    if-eqz v2, :cond_8

    const/16 v2, 0xff8

    if-gt p1, v2, :cond_4

    move p3, v3

    :cond_4
    if-eqz p3, :cond_7

    .line 4
    :cond_5
    :goto_2
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable(ILn/l0/c/l;)I

    move-result p3

    if-ltz p3, :cond_6

    .line 5
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 6
    :cond_6
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->L$1:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$write$1;->label:I

    invoke-virtual {p0, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->awaitFreeSpaceOrDelegate(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v1, :cond_5

    return-object v1

    .line 7
    :cond_7
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Min("

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ") should\'nt be greater than (4088)"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-direct {p1, p0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 8
    :cond_8
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "min should be positive"

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method private final writeAsMuchAsPossible(Lio/ktor/utils/io/core/Buffer;)I
    .locals 10

    .line 26
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-static {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move-object v0, p0

    .line 27
    :goto_0
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v1

    const/4 v2, 0x0

    if-eqz v1, :cond_9

    .line 28
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v3

    iget-object v3, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 29
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v4

    .line 30
    :try_start_0
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v6

    if-nez v6, :cond_5

    .line 31
    :goto_1
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v6

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getReadPosition()I

    move-result v7

    sub-int/2addr v6, v7

    .line 32
    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v7

    invoke-static {v6, v7}, Ljava/lang/Math;->min(II)I

    move-result v6

    invoke-virtual {v3, v6}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteAtMost(I)I

    move-result v6

    if-nez v6, :cond_4

    .line 33
    invoke-direct {v0, v1, v3, v2}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 34
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_2

    :cond_1
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_2
    if-eq v0, p0, :cond_3

    .line 35
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v6

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v8

    sub-long/2addr v8, v4

    add-long/2addr v6, v8

    invoke-virtual {p0, v6, v7}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 36
    :cond_3
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 37
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    return v2

    .line 38
    :cond_4
    :try_start_1
    invoke-static {p1, v1, v6}, Lio/ktor/utils/io/core/IoBufferJVMKt;->readFully(Lio/ktor/utils/io/core/Buffer;Ljava/nio/ByteBuffer;I)V

    add-int/2addr v2, v6

    .line 39
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v6

    iget v7, v0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    add-int/2addr v7, v2

    invoke-direct {v0, v1, v7}, Lio/ktor/utils/io/ByteBufferChannel;->carryIndex(Ljava/nio/ByteBuffer;I)I

    move-result v7

    .line 40
    iget v8, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    .line 41
    invoke-direct {v0, v1, v6, v7, v8}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    goto :goto_1

    .line 42
    :cond_5
    invoke-virtual {v6}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 43
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v1

    if-nez v1, :cond_6

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v1

    if-eqz v1, :cond_7

    :cond_6
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_7
    if-eq v0, p0, :cond_8

    .line 44
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v6

    sub-long/2addr v6, v4

    add-long/2addr v1, v6

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 45
    :cond_8
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 46
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_9
    return v2
.end method

.method private final writeAsMuchAsPossible(Ljava/nio/ByteBuffer;)I
    .locals 11

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-static {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move-object v0, p0

    .line 2
    :goto_0
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v1

    const/4 v2, 0x0

    if-eqz v1, :cond_c

    .line 3
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v3

    iget-object v3, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 4
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v4

    .line 5
    :try_start_0
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v6

    if-nez v6, :cond_8

    .line 6
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v6

    move v7, v2

    .line 7
    :goto_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v8

    sub-int v8, v6, v8

    if-nez v8, :cond_1

    goto :goto_2

    .line 8
    :cond_1
    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v9

    invoke-static {v8, v9}, Ljava/lang/Math;->min(II)I

    move-result v8

    invoke-virtual {v3, v8}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteAtMost(I)I

    move-result v8

    if-nez v8, :cond_5

    .line 9
    :goto_2
    invoke-virtual {p1, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 10
    invoke-direct {v0, v1, v3, v7}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_2

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_3

    :cond_2
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_3
    if-eq v0, p0, :cond_4

    .line 12
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v8

    sub-long/2addr v8, v4

    add-long/2addr v1, v8

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 13
    :cond_4
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 14
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    return v7

    :cond_5
    if-lez v8, :cond_6

    const/4 v9, 0x1

    goto :goto_3

    :cond_6
    move v9, v2

    :goto_3
    if-eqz v9, :cond_7

    .line 15
    :try_start_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v9

    add-int/2addr v9, v8

    invoke-virtual {p1, v9}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 16
    invoke-virtual {v1, p1}, Ljava/nio/ByteBuffer;->put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;

    add-int/2addr v7, v8

    .line 17
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v8

    iget v9, v0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    add-int/2addr v9, v7

    invoke-direct {v0, v1, v9}, Lio/ktor/utils/io/ByteBufferChannel;->carryIndex(Ljava/nio/ByteBuffer;I)I

    move-result v9

    .line 18
    iget v10, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    .line 19
    invoke-direct {v0, v1, v8, v9, v10}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    goto :goto_1

    :cond_7
    const-string p1, "Failed requirement."

    .line 20
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v1, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21
    :cond_8
    invoke-virtual {v6}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 22
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v1

    if-nez v1, :cond_9

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v1

    if-eqz v1, :cond_a

    :cond_9
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_a
    if-eq v0, p0, :cond_b

    .line 23
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v6

    sub-long/2addr v6, v4

    add-long/2addr v1, v6

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 24
    :cond_b
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 25
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_c
    return v2
.end method

.method private final writeAsMuchAsPossible([BII)I
    .locals 10

    .line 47
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-static {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move-object v0, p0

    .line 48
    :goto_0
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v1

    const/4 v2, 0x0

    if-eqz v1, :cond_b

    .line 49
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v3

    iget-object v3, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 50
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v4

    .line 51
    :try_start_0
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v6

    if-nez v6, :cond_7

    move v6, v2

    :goto_1
    sub-int v7, p3, v6

    .line 52
    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v8

    invoke-static {v7, v8}, Ljava/lang/Math;->min(II)I

    move-result v7

    invoke-virtual {v3, v7}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteAtMost(I)I

    move-result v7

    if-nez v7, :cond_4

    .line 53
    invoke-direct {v0, v1, v3, v6}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 54
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_2

    :cond_1
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_2
    if-eq v0, p0, :cond_3

    .line 55
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide p1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    sub-long/2addr v1, v4

    add-long/2addr p1, v1

    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 56
    :cond_3
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 57
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    return v6

    :cond_4
    if-lez v7, :cond_5

    const/4 v8, 0x1

    goto :goto_2

    :cond_5
    move v8, v2

    :goto_2
    if-eqz v8, :cond_6

    add-int v8, p2, v6

    .line 58
    :try_start_1
    invoke-virtual {v1, p1, v8, v7}, Ljava/nio/ByteBuffer;->put([BII)Ljava/nio/ByteBuffer;

    add-int/2addr v6, v7

    .line 59
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v7

    iget v8, v0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    add-int/2addr v8, v6

    invoke-direct {v0, v1, v8}, Lio/ktor/utils/io/ByteBufferChannel;->carryIndex(Ljava/nio/ByteBuffer;I)I

    move-result v8

    .line 60
    iget v9, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    .line 61
    invoke-direct {v0, v1, v7, v8, v9}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    goto :goto_1

    :cond_6
    const-string p1, "Failed requirement."

    .line 62
    new-instance p2, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 63
    :cond_7
    invoke-virtual {v6}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 64
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p2

    if-nez p2, :cond_8

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p2

    if-eqz p2, :cond_9

    :cond_8
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_9
    if-eq v0, p0, :cond_a

    .line 65
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide p2

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    sub-long/2addr v1, v4

    add-long/2addr p2, v1

    invoke-virtual {p0, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 66
    :cond_a
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 67
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_b
    return v2
.end method

.method public static synthetic writeAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 1

    .line 6
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_0

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0

    .line 7
    :cond_0
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible(Lio/ktor/utils/io/core/Buffer;)I

    move-result v0

    if-lez v0, :cond_1

    .line 8
    invoke-static {v0}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p0

    return-object p0

    .line 9
    :cond_1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_2

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_2

    invoke-virtual {v0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailableSuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0

    .line 10
    :cond_2
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailableSuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic writeAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_0

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0

    .line 2
    :cond_0
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    move-result v0

    if-lez v0, :cond_1

    .line 3
    invoke-static {v0}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p0

    return-object p0

    .line 4
    :cond_1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_2

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_2

    invoke-virtual {v0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailableSuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0

    .line 5
    :cond_2
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailableSuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic writeAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;[BIILn/i0/d;)Ljava/lang/Object;
    .locals 1

    .line 11
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_0

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0

    .line 12
    :cond_0
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible([BII)I

    move-result v0

    if-lez v0, :cond_1

    .line 13
    invoke-static {v0}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p0

    return-object p0

    .line 14
    :cond_1
    invoke-virtual {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic writeByte$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;BLn/i0/d;)Ljava/lang/Object;
    .locals 9

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    const/4 v3, 0x0

    const/4 v4, 0x1

    const/4 v5, 0x0

    packed-switch v2, :pswitch_data_0

    .line 2
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :pswitch_0
    iget-byte p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->B$0:B

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_4

    :pswitch_1
    iget p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->I$0:I

    iget-byte p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->B$0:B

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$2:Ljava/lang/Object;

    check-cast v2, Ljava/nio/ByteBuffer;

    iget-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    check-cast v6, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    check-cast v7, Lio/ktor/utils/io/internal/RingBufferCapacity;

    :try_start_0
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move p2, p1

    move p1, p0

    move-object p0, v6

    goto/16 :goto_3

    :catchall_0
    move-exception p0

    goto/16 :goto_7

    :pswitch_2
    iget-byte p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->B$0:B

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v8, p1

    move p1, p0

    move-object p0, v8

    goto/16 :goto_8

    :pswitch_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_9

    :pswitch_4
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    if-eqz p2, :cond_1

    invoke-static {p0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_1

    int-to-byte p0, p1

    .line 5
    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p2, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeByte(BLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 6
    :cond_1
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object p2

    if-eqz p2, :cond_10

    .line 7
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 8
    invoke-virtual {v2, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v6

    if-nez v6, :cond_2

    move v6, v3

    goto :goto_2

    .line 9
    :cond_2
    invoke-virtual {p0, p2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 10
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v6

    if-ge v6, v4, :cond_3

    .line 11
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v6

    invoke-virtual {p2, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    int-to-byte v6, p1

    .line 12
    invoke-virtual {p2, v6}, Ljava/nio/ByteBuffer;->put(B)Ljava/nio/ByteBuffer;

    .line 13
    invoke-static {p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_1

    :cond_3
    int-to-byte v6, p1

    .line 14
    invoke-virtual {p2, v6}, Ljava/nio/ByteBuffer;->put(B)Ljava/nio/ByteBuffer;

    .line 15
    :goto_1
    invoke-static {p0, p2, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 16
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v6

    if-nez v6, :cond_4

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v6

    if-eqz v6, :cond_5

    .line 17
    :cond_4
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 18
    :cond_5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 19
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v6, v4

    :goto_2
    if-nez v6, :cond_13

    move-object v7, v2

    move-object v2, p2

    move p2, p1

    move p1, v4

    .line 20
    :cond_6
    :try_start_1
    iput-object v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$2:Ljava/lang/Object;

    iput-byte p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->B$0:B

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->I$0:I

    const/4 v6, 0x5

    iput v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-ne v6, v1, :cond_7

    return-object v1

    .line 21
    :cond_7
    :goto_3
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v6

    if-eqz v6, :cond_b

    .line 22
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 23
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p1

    invoke-static {p1}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 24
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_8

    .line 25
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    int-to-byte p1, p2

    .line 26
    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$2:Ljava/lang/Object;

    const/4 p2, 0x6

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeByte(BLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_8
    move-object v2, p1

    move-object p1, p0

    move p0, p2

    .line 27
    :cond_9
    :goto_4
    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v3, :cond_a

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    int-to-byte p0, p0

    .line 28
    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$2:Ljava/lang/Object;

    const/4 p2, 0x7

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p1, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeByte(BLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 29
    :cond_a
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$2:Ljava/lang/Object;

    iput-byte p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->B$0:B

    const/16 p2, 0x8

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p1, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_9

    return-object v1

    .line 30
    :cond_b
    invoke-virtual {v7, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v6

    if-nez v6, :cond_c

    move v6, v3

    goto :goto_6

    .line 31
    :cond_c
    invoke-virtual {p0, v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 32
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v6

    if-ge v6, p1, :cond_d

    .line 33
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v6

    invoke-virtual {v2, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    int-to-byte v6, p2

    .line 34
    invoke-virtual {v2, v6}, Ljava/nio/ByteBuffer;->put(B)Ljava/nio/ByteBuffer;

    .line 35
    invoke-static {p0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_5

    :cond_d
    int-to-byte v6, p2

    .line 36
    invoke-virtual {v2, v6}, Ljava/nio/ByteBuffer;->put(B)Ljava/nio/ByteBuffer;

    .line 37
    :goto_5
    invoke-static {p0, v2, v7, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 38
    invoke-virtual {v7}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v6

    if-nez v6, :cond_e

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v6

    if-eqz v6, :cond_f

    .line 39
    :cond_e
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 40
    :cond_f
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 41
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v6, v4

    :goto_6
    if-eqz v6, :cond_6

    goto :goto_9

    :catchall_1
    move-exception p1

    move-object v6, p0

    move-object p0, p1

    .line 42
    :goto_7
    invoke-virtual {v6}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 43
    invoke-virtual {v6}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 44
    throw p0

    .line 45
    :cond_10
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    invoke-static {p2}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 46
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_11

    .line 47
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    int-to-byte p1, p1

    const/4 p2, 0x2

    .line 48
    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeByte(BLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_11
    move-object v2, p2

    .line 49
    :cond_12
    :goto_8
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v3, :cond_14

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    int-to-byte p1, p1

    .line 50
    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    const/4 p2, 0x3

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeByte(BLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 51
    :cond_13
    :goto_9
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 52
    :cond_14
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->L$1:Ljava/lang/Object;

    iput-byte p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->B$0:B

    const/4 p2, 0x4

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeByte$1;->label:I

    invoke-virtual {p0, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_12

    return-object v1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_4
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_3
        :pswitch_3
        :pswitch_0
    .end packed-switch
.end method

.method public static synthetic writeDouble$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;DLn/i0/d;)Ljava/lang/Object;
    .locals 0

    .line 1
    invoke-static {p1, p2}, Ljava/lang/Double;->doubleToRawLongBits(D)J

    move-result-wide p1

    invoke-virtual {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->writeLong(JLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    .line 2
    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic writeFloat$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;FLn/i0/d;)Ljava/lang/Object;
    .locals 0

    .line 1
    invoke-static {p1}, Ljava/lang/Float;->floatToRawIntBits(F)I

    move-result p1

    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeInt(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    .line 2
    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 11

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 5
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->L$1:Ljava/lang/Object;

    check-cast p0, Lio/ktor/utils/io/core/Buffer;

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->L$0:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v10, p1

    move-object p1, p0

    move-object p0, v10

    goto :goto_1

    .line 6
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 7
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 8
    :cond_3
    :goto_1
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result p2

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getReadPosition()I

    move-result v2

    sub-int/2addr p2, v2

    if-lez p2, :cond_4

    const/4 v5, 0x0

    .line 9
    new-instance v6, Lio/ktor/utils/io/ByteBufferChannel$writeFully$4;

    invoke-direct {v6, p1}, Lio/ktor/utils/io/ByteBufferChannel$writeFully$4;-><init>(Lio/ktor/utils/io/core/Buffer;)V

    const/4 v8, 0x1

    const/4 v9, 0x0

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFully$3;->label:I

    move-object v4, p0

    move-object v7, v0

    invoke-static/range {v4 .. v9}, Lio/ktor/utils/io/ByteWriteChannel$DefaultImpls;->write$default(Lio/ktor/utils/io/ByteWriteChannel;ILn/l0/c/l;Ln/i0/d;ILjava/lang/Object;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_3

    return-object v1

    .line 10
    :cond_4
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 2

    .line 11
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible(Lio/ktor/utils/io/core/Buffer;)I

    .line 12
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v0

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getReadPosition()I

    move-result v1

    if-le v0, v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-nez v0, :cond_1

    .line 13
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 14
    :cond_1
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeFullySuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_2

    return-object p0

    .line 15
    :cond_2
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_1

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {v0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 2
    :cond_1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    .line 3
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v0

    if-nez v0, :cond_2

    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 4
    :cond_2
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeFullySuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_3

    return-object p0

    :cond_3
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;[BIILn/i0/d;)Ljava/lang/Object;
    .locals 1

    .line 16
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_1

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {v0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    :cond_1
    :goto_0
    if-lez p3, :cond_3

    .line 17
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible([BII)I

    move-result v0

    if-nez v0, :cond_2

    goto :goto_1

    :cond_2
    add-int/2addr p2, v0

    sub-int/2addr p3, v0

    goto :goto_0

    :cond_3
    :goto_1
    if-nez p3, :cond_4

    .line 18
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 19
    :cond_4
    invoke-virtual {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeFullySuspend([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_5

    return-object p0

    :cond_5
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic writeFully-rGWNHyQ$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;IILn/i0/d;)Ljava/lang/Object;
    .locals 0

    sub-int/2addr p3, p2

    .line 1
    invoke-static {p1, p2, p3}, Lio/ktor/utils/io/bits/Memory;->slice-SK3TCg8(Ljava/nio/ByteBuffer;II)Ljava/nio/ByteBuffer;

    move-result-object p1

    .line 2
    invoke-virtual {p0, p1, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    .line 3
    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0
.end method

.method public static synthetic writeInt$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/i0/d;)Ljava/lang/Object;
    .locals 9

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    const/4 v3, 0x0

    const/4 v4, 0x4

    const/4 v5, 0x1

    const/4 v6, 0x0

    packed-switch v2, :pswitch_data_0

    .line 2
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :pswitch_0
    iget p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$0:I

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_4

    :pswitch_1
    iget p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$1:I

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$0:I

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$2:Ljava/lang/Object;

    check-cast v2, Ljava/nio/ByteBuffer;

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    check-cast v7, Lio/ktor/utils/io/internal/RingBufferCapacity;

    :try_start_0
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v8, v4

    move v4, p0

    move-object p0, v8

    goto/16 :goto_3

    :catchall_0
    move-exception p0

    goto/16 :goto_7

    :pswitch_2
    iget p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$0:I

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v8, p1

    move p1, p0

    move-object p0, v8

    goto/16 :goto_8

    :pswitch_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_9

    :pswitch_4
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    if-eqz p2, :cond_1

    invoke-static {p0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_1

    .line 5
    iput v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeInt(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 6
    :cond_1
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object p2

    if-eqz p2, :cond_10

    .line 7
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 8
    invoke-virtual {v2, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v7

    if-nez v7, :cond_2

    move v7, v3

    goto :goto_2

    .line 9
    :cond_2
    invoke-virtual {p0, p2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 10
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v7

    if-ge v7, v4, :cond_3

    .line 11
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v7

    invoke-virtual {p2, v7}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 12
    invoke-virtual {p2, p1}, Ljava/nio/ByteBuffer;->putInt(I)Ljava/nio/ByteBuffer;

    .line 13
    invoke-static {p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_1

    .line 14
    :cond_3
    invoke-virtual {p2, p1}, Ljava/nio/ByteBuffer;->putInt(I)Ljava/nio/ByteBuffer;

    .line 15
    :goto_1
    invoke-static {p0, p2, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 16
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v7

    if-nez v7, :cond_4

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v7

    if-eqz v7, :cond_5

    .line 17
    :cond_4
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 18
    :cond_5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 19
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v7, v5

    :goto_2
    if-nez v7, :cond_13

    move-object v7, v2

    move-object v2, p2

    .line 20
    :cond_6
    :try_start_1
    iput-object v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$2:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$0:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$1:I

    const/4 p2, 0x5

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p0, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-ne p2, v1, :cond_7

    return-object v1

    .line 21
    :cond_7
    :goto_3
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    if-eqz p2, :cond_b

    .line 22
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 23
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    invoke-static {p2}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 24
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_8

    .line 25
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    .line 26
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$2:Ljava/lang/Object;

    const/4 p2, 0x6

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeInt(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_8
    move-object v2, p2

    move v8, p1

    move-object p1, p0

    move p0, v8

    .line 27
    :cond_9
    :goto_4
    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v3, :cond_a

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    .line 28
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$2:Ljava/lang/Object;

    const/4 p2, 0x7

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p1, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeInt(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 29
    :cond_a
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$2:Ljava/lang/Object;

    iput p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$0:I

    const/16 p2, 0x8

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p1, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_9

    return-object v1

    .line 30
    :cond_b
    invoke-virtual {v7, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result p2

    if-nez p2, :cond_c

    move p2, v3

    goto :goto_6

    .line 31
    :cond_c
    invoke-virtual {p0, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 32
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p2

    if-ge p2, v4, :cond_d

    .line 33
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result p2

    invoke-virtual {v2, p2}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 34
    invoke-virtual {v2, p1}, Ljava/nio/ByteBuffer;->putInt(I)Ljava/nio/ByteBuffer;

    .line 35
    invoke-static {p0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_5

    .line 36
    :cond_d
    invoke-virtual {v2, p1}, Ljava/nio/ByteBuffer;->putInt(I)Ljava/nio/ByteBuffer;

    .line 37
    :goto_5
    invoke-static {p0, v2, v7, v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 38
    invoke-virtual {v7}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p2

    if-nez p2, :cond_e

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p2

    if-eqz p2, :cond_f

    .line 39
    :cond_e
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 40
    :cond_f
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 41
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move p2, v5

    :goto_6
    if-eqz p2, :cond_6

    goto :goto_9

    :catchall_1
    move-exception p1

    move-object v4, p0

    move-object p0, p1

    .line 42
    :goto_7
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 43
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 44
    throw p0

    .line 45
    :cond_10
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    invoke-static {p2}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 46
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_11

    .line 47
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    const/4 p2, 0x2

    .line 48
    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeInt(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_11
    move-object v2, p2

    .line 49
    :cond_12
    :goto_8
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v3, :cond_14

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    .line 50
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    const/4 p2, 0x3

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeInt(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 51
    :cond_13
    :goto_9
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 52
    :cond_14
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->L$1:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->I$0:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeInt$1;->label:I

    invoke-virtual {p0, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_12

    return-object v1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_4
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_3
        :pswitch_3
        :pswitch_0
    .end packed-switch
.end method

.method public static synthetic writeLong$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;JLn/i0/d;)Ljava/lang/Object;
    .locals 11

    instance-of v0, p3, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;

    if-eqz v0, :cond_0

    move-object v0, p3

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;

    invoke-direct {v0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    const/4 v3, 0x0

    const/16 v4, 0x8

    const/4 v5, 0x1

    const/4 v6, 0x0

    packed-switch v2, :pswitch_data_0

    .line 2
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :pswitch_0
    iget-wide p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->J$0:J

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    check-cast p2, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_4

    :pswitch_1
    iget p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->I$0:I

    iget-wide p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->J$0:J

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$2:Ljava/lang/Object;

    check-cast v2, Ljava/nio/ByteBuffer;

    iget-object v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    check-cast v7, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    check-cast v8, Lio/ktor/utils/io/internal/RingBufferCapacity;

    :try_start_0
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-wide p2, p1

    move p1, p0

    move-object p0, v7

    goto/16 :goto_3

    :catchall_0
    move-exception p0

    goto/16 :goto_7

    :pswitch_2
    iget-wide p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->J$0:J

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    check-cast p2, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    move-wide v9, p0

    move-object p0, p2

    move-wide p1, v9

    goto/16 :goto_8

    :pswitch_3
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_9

    :pswitch_4
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p3

    if-eqz p3, :cond_1

    invoke-static {p0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p3

    if-eqz p3, :cond_1

    .line 5
    iput v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p3, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeLong(JLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 6
    :cond_1
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object p3

    if-eqz p3, :cond_10

    .line 7
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 8
    invoke-virtual {v2, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v7

    if-nez v7, :cond_2

    move v7, v3

    goto :goto_2

    .line 9
    :cond_2
    invoke-virtual {p0, p3, v4}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 10
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v7

    if-ge v7, v4, :cond_3

    .line 11
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v7

    invoke-virtual {p3, v7}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 12
    invoke-virtual {p3, p1, p2}, Ljava/nio/ByteBuffer;->putLong(J)Ljava/nio/ByteBuffer;

    .line 13
    invoke-static {p0, p3}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_1

    .line 14
    :cond_3
    invoke-virtual {p3, p1, p2}, Ljava/nio/ByteBuffer;->putLong(J)Ljava/nio/ByteBuffer;

    .line 15
    :goto_1
    invoke-static {p0, p3, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 16
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v7

    if-nez v7, :cond_4

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v7

    if-eqz v7, :cond_5

    .line 17
    :cond_4
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 18
    :cond_5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 19
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v7, v5

    :goto_2
    if-nez v7, :cond_13

    move-object v8, v2

    move-object v2, p3

    move-wide p2, p1

    move p1, v4

    .line 20
    :cond_6
    :try_start_1
    iput-object v8, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$2:Ljava/lang/Object;

    iput-wide p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->J$0:J

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->I$0:I

    const/4 v7, 0x5

    iput v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v7
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-ne v7, v1, :cond_7

    return-object v1

    .line 21
    :cond_7
    :goto_3
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v7

    if-eqz v7, :cond_b

    .line 22
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 23
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p1

    invoke-static {p1}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 24
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_8

    .line 25
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    .line 26
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$2:Ljava/lang/Object;

    const/4 p1, 0x6

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p0, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeLong(JLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_8
    move-object v2, p1

    move-wide v9, p2

    move-object p2, p0

    move-wide p0, v9

    .line 27
    :cond_9
    :goto_4
    invoke-static {p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p3

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p3, v3, :cond_a

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    .line 28
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$2:Ljava/lang/Object;

    const/4 p3, 0x7

    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p2, p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeLong(JLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 29
    :cond_a
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$2:Ljava/lang/Object;

    iput-wide p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->J$0:J

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p2, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v1, :cond_9

    return-object v1

    .line 30
    :cond_b
    invoke-virtual {v8, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v7

    if-nez v7, :cond_c

    move v7, v3

    goto :goto_6

    .line 31
    :cond_c
    invoke-virtual {p0, v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 32
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v7

    if-ge v7, p1, :cond_d

    .line 33
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v7

    invoke-virtual {v2, v7}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 34
    invoke-virtual {v2, p2, p3}, Ljava/nio/ByteBuffer;->putLong(J)Ljava/nio/ByteBuffer;

    .line 35
    invoke-static {p0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_5

    .line 36
    :cond_d
    invoke-virtual {v2, p2, p3}, Ljava/nio/ByteBuffer;->putLong(J)Ljava/nio/ByteBuffer;

    .line 37
    :goto_5
    invoke-static {p0, v2, v8, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 38
    invoke-virtual {v8}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v7

    if-nez v7, :cond_e

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v7

    if-eqz v7, :cond_f

    .line 39
    :cond_e
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 40
    :cond_f
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 41
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v7, v5

    :goto_6
    if-eqz v7, :cond_6

    goto :goto_9

    :catchall_1
    move-exception p1

    move-object v7, p0

    move-object p0, p1

    .line 42
    :goto_7
    invoke-virtual {v7}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 43
    invoke-virtual {v7}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 44
    throw p0

    .line 45
    :cond_10
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p3

    invoke-static {p3}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 46
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_11

    .line 47
    invoke-virtual {p3}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    const/4 p3, 0x2

    .line 48
    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p0, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeLong(JLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_11
    move-object v2, p3

    .line 49
    :cond_12
    :goto_8
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p3

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p3, v3, :cond_14

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    .line 50
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    const/4 p3, 0x3

    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p0, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeLong(JLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 51
    :cond_13
    :goto_9
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 52
    :cond_14
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->L$1:Ljava/lang/Object;

    iput-wide p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->J$0:J

    const/4 p3, 0x4

    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeLong$1;->label:I

    invoke-virtual {p0, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v1, :cond_12

    return-object v1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_4
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_3
        :pswitch_3
        :pswitch_0
    .end packed-switch
.end method

.method public static synthetic writePacket$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;
    .locals 4

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_1

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {v0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writePacket(Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_0

    return-object p0

    :cond_0
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 2
    :cond_1
    :try_start_0
    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->getEndOfInput()Z

    move-result v0

    xor-int/lit8 v0, v0, 0x1

    if-eqz v0, :cond_2

    .line 3
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->tryWritePacketPart(Lio/ktor/utils/io/core/ByteReadPacket;)I

    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_1

    .line 4
    :cond_2
    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->getRemaining()J

    move-result-wide v0

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-lez v0, :cond_6

    .line 5
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_4

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_4

    invoke-virtual {v0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writePacket(Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_3

    return-object p0

    :cond_3
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 6
    :cond_4
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writePacketSuspend(Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_5

    return-object p0

    :cond_5
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 7
    :cond_6
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    :catchall_0
    move-exception p0

    .line 8
    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->release()V

    .line 9
    throw p0
.end method

.method private final synthetic writePrimitive(ILn/l0/c/l;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/l0/c/l<",
            "-",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "Ln/c0;",
            ">;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-static {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-interface {p2, v0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    return-object p1

    .line 2
    :cond_0
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v0

    const/4 v1, 0x2

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-eqz v0, :cond_e

    .line 3
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    iget-object v4, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 4
    invoke-virtual {v4, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v5

    if-nez v5, :cond_1

    move v5, v2

    goto :goto_1

    .line 5
    :cond_1
    invoke-virtual {p0, v0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 6
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v5

    if-ge v5, p1, :cond_2

    .line 7
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v5

    invoke-virtual {v0, v5}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 8
    invoke-interface {p3, v0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    invoke-static {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_0

    .line 10
    :cond_2
    invoke-interface {p3, v0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 11
    :goto_0
    invoke-static {p0, v0, v4, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 12
    invoke-virtual {v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v5

    if-nez v5, :cond_3

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v5

    if-eqz v5, :cond_4

    .line 13
    :cond_3
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 14
    :cond_4
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 15
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v5, v3

    :goto_1
    if-nez v5, :cond_d

    .line 16
    :cond_5
    :try_start_0
    invoke-static {v2}, Ln/l0/d/p;->c(I)V

    invoke-virtual {p0, p1, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    invoke-static {v3}, Ln/l0/d/p;->c(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v5

    if-eqz v5, :cond_8

    .line 18
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 19
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v5

    invoke-static {v5}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 20
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    sget-object p3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p1, p3, :cond_6

    .line 21
    invoke-virtual {v5}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    invoke-interface {p2, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_5

    .line 22
    :cond_6
    :goto_2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    sget-object p3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p1, p3, :cond_7

    invoke-virtual {v5}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    .line 23
    invoke-interface {p2, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_5

    .line 24
    :cond_7
    invoke-static {v2}, Ln/l0/d/p;->c(I)V

    invoke-virtual {p0, v3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    invoke-static {v3}, Ln/l0/d/p;->c(I)V

    goto :goto_2

    .line 25
    :cond_8
    invoke-virtual {v4, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v5

    if-nez v5, :cond_9

    move v5, v2

    goto :goto_4

    .line 26
    :cond_9
    invoke-virtual {p0, v0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 27
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v5

    if-ge v5, p1, :cond_a

    .line 28
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v5

    invoke-virtual {v0, v5}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 29
    invoke-interface {p3, v0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 30
    invoke-static {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_3

    .line 31
    :cond_a
    invoke-interface {p3, v0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 32
    :goto_3
    invoke-static {p0, v0, v4, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 33
    invoke-virtual {v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v5

    if-nez v5, :cond_b

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v5

    if-eqz v5, :cond_c

    .line 34
    :cond_b
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 35
    :cond_c
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 36
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v5, v3

    :goto_4
    if-eqz v5, :cond_5

    goto :goto_5

    :catchall_0
    move-exception p1

    .line 37
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 38
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 39
    throw p1

    .line 40
    :cond_d
    :goto_5
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 41
    :cond_e
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p1

    invoke-static {p1}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 42
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p3

    sget-object v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p3, v0, :cond_f

    .line 43
    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    invoke-interface {p2, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 44
    sget-object p1, Ln/c0;->a:Ln/c0;

    goto :goto_7

    .line 45
    :cond_f
    :goto_6
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p3

    sget-object v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p3, v0, :cond_10

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    .line 46
    invoke-interface {p2, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 47
    sget-object p1, Ln/c0;->a:Ln/c0;

    :goto_7
    return-object p1

    .line 48
    :cond_10
    invoke-static {v2}, Ln/l0/d/p;->c(I)V

    invoke-virtual {p0, v3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    invoke-static {v3}, Ln/l0/d/p;->c(I)V

    goto :goto_6
.end method

.method public static synthetic writeShort$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;SLn/i0/d;)Ljava/lang/Object;
    .locals 9

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    const/4 v3, 0x0

    const/4 v4, 0x2

    const/4 v5, 0x1

    const/4 v6, 0x0

    packed-switch v2, :pswitch_data_0

    .line 2
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :pswitch_0
    iget-short p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->S$0:S

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_4

    :pswitch_1
    iget p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->I$0:I

    iget-short p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->S$0:S

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$2:Ljava/lang/Object;

    check-cast v2, Ljava/nio/ByteBuffer;

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    check-cast v7, Lio/ktor/utils/io/internal/RingBufferCapacity;

    :try_start_0
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v8, v4

    move v4, p0

    move-object p0, v8

    goto/16 :goto_3

    :catchall_0
    move-exception p0

    goto/16 :goto_7

    :pswitch_2
    iget-short p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->S$0:S

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/internal/JoiningState;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v8, p1

    move p1, p0

    move-object p0, v8

    goto/16 :goto_8

    :pswitch_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_9

    :pswitch_4
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    if-eqz p2, :cond_1

    invoke-static {p0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_1

    int-to-short p0, p1

    .line 5
    iput v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p2, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeShort(SLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 6
    :cond_1
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object p2

    if-eqz p2, :cond_10

    .line 7
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 8
    invoke-virtual {v2, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v7

    if-nez v7, :cond_2

    move v7, v3

    goto :goto_2

    .line 9
    :cond_2
    invoke-virtual {p0, p2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 10
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v7

    if-ge v7, v4, :cond_3

    .line 11
    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v7

    invoke-virtual {p2, v7}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    int-to-short v7, p1

    .line 12
    invoke-virtual {p2, v7}, Ljava/nio/ByteBuffer;->putShort(S)Ljava/nio/ByteBuffer;

    .line 13
    invoke-static {p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_1

    :cond_3
    int-to-short v7, p1

    .line 14
    invoke-virtual {p2, v7}, Ljava/nio/ByteBuffer;->putShort(S)Ljava/nio/ByteBuffer;

    .line 15
    :goto_1
    invoke-static {p0, p2, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 16
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v7

    if-nez v7, :cond_4

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v7

    if-eqz v7, :cond_5

    .line 17
    :cond_4
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 18
    :cond_5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 19
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v7, v5

    :goto_2
    if-nez v7, :cond_13

    move-object v7, v2

    move-object v2, p2

    .line 20
    :cond_6
    :try_start_1
    iput-object v7, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$2:Ljava/lang/Object;

    iput-short p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->S$0:S

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->I$0:I

    const/4 p2, 0x5

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p0, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-ne p2, v1, :cond_7

    return-object v1

    .line 21
    :cond_7
    :goto_3
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    if-eqz p2, :cond_b

    .line 22
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 23
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    invoke-static {p2}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 24
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_8

    .line 25
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    int-to-short p1, p1

    .line 26
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$2:Ljava/lang/Object;

    const/4 p2, 0x6

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeShort(SLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_8
    move-object v2, p2

    move v8, p1

    move-object p1, p0

    move p0, v8

    .line 27
    :cond_9
    :goto_4
    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v3, :cond_a

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    int-to-short p0, p0

    .line 28
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$2:Ljava/lang/Object;

    const/4 p2, 0x7

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p1, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeShort(SLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 29
    :cond_a
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$2:Ljava/lang/Object;

    iput-short p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->S$0:S

    const/16 p2, 0x8

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p1, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_9

    return-object v1

    .line 30
    :cond_b
    invoke-virtual {v7, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result p2

    if-nez p2, :cond_c

    move p2, v3

    goto :goto_6

    .line 31
    :cond_c
    invoke-virtual {p0, v2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 32
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p2

    if-ge p2, v4, :cond_d

    .line 33
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->capacity()I

    move-result p2

    invoke-virtual {v2, p2}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    int-to-short p2, p1

    .line 34
    invoke-virtual {v2, p2}, Ljava/nio/ByteBuffer;->putShort(S)Ljava/nio/ByteBuffer;

    .line 35
    invoke-static {p0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_5

    :cond_d
    int-to-short p2, p1

    .line 36
    invoke-virtual {v2, p2}, Ljava/nio/ByteBuffer;->putShort(S)Ljava/nio/ByteBuffer;

    .line 37
    :goto_5
    invoke-static {p0, v2, v7, v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 38
    invoke-virtual {v7}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p2

    if-nez p2, :cond_e

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p2

    if-eqz p2, :cond_f

    .line 39
    :cond_e
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 40
    :cond_f
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 41
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move p2, v5

    :goto_6
    if-eqz p2, :cond_6

    goto :goto_9

    :catchall_1
    move-exception p1

    move-object v4, p0

    move-object p0, p1

    .line 42
    :goto_7
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 43
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 44
    throw p0

    .line 45
    :cond_10
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object p2

    invoke-static {p2}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 46
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v2, v3, :cond_11

    .line 47
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    int-to-short p1, p1

    .line 48
    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeShort(SLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    :cond_11
    move-object v2, p2

    .line 49
    :cond_12
    :goto_8
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    sget-object v3, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p2, v3, :cond_14

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p0

    int-to-short p1, p1

    .line 50
    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    iput-object v6, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    const/4 p2, 0x3

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeShort(SLn/i0/d;)Ljava/lang/Object;

    move-result-object p0

    if-ne p0, v1, :cond_13

    return-object v1

    .line 51
    :cond_13
    :goto_9
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 52
    :cond_14
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$0:Ljava/lang/Object;

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->L$1:Ljava/lang/Object;

    iput-short p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->S$0:S

    const/4 p2, 0x4

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeShort$1;->label:I

    invoke-virtual {p0, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_12

    return-object v1

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_4
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_3
        :pswitch_3
        :pswitch_0
    .end packed-switch
.end method

.method private final writeSuspendPredicate(I)Z
    .locals 5

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    .line 2
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    .line 3
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v2

    const/4 v3, 0x1

    const/4 v4, 0x0

    if-eqz v2, :cond_1

    :cond_0
    move v3, v4

    goto :goto_0

    :cond_1
    if-nez v0, :cond_2

    .line 4
    iget-object v0, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 5
    iget v0, v0, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    if-ge v0, p1, :cond_0

    sget-object p1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-eq v1, p1, :cond_0

    goto :goto_0

    .line 6
    :cond_2
    sget-object p1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-eq v1, p1, :cond_0

    .line 7
    instance-of p1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Writing;

    if-nez p1, :cond_0

    .line 8
    instance-of p1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$ReadingWriting;

    if-nez p1, :cond_0

    :goto_0
    return v3
.end method

.method private final synthetic writeSuspendPrimitive(Ljava/nio/ByteBuffer;ILio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "I",
            "Lio/ktor/utils/io/internal/RingBufferCapacity;",
            "Ln/l0/c/l<",
            "-",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "Ln/c0;",
            ">;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    :cond_0
    const/4 v0, 0x0

    .line 1
    :try_start_0
    invoke-static {v0}, Ln/l0/d/p;->c(I)V

    invoke-virtual {p0, p2, p6}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    const/4 v1, 0x2

    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    const/4 v2, 0x1

    invoke-static {v2}, Ln/l0/d/p;->c(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v3

    if-eqz v3, :cond_3

    .line 3
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v3

    invoke-static {v3}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    .line 5
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    sget-object p2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p1, p2, :cond_1

    .line 6
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    invoke-interface {p4, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_1

    .line 7
    :cond_1
    :goto_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    sget-object p2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne p1, p2, :cond_2

    invoke-virtual {v3}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p1

    .line 8
    invoke-interface {p4, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    :goto_1
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 10
    :cond_2
    invoke-static {v0}, Ln/l0/d/p;->c(I)V

    invoke-virtual {p0, v2, p6}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    invoke-static {v1}, Ln/l0/d/p;->c(I)V

    invoke-static {v2}, Ln/l0/d/p;->c(I)V

    goto :goto_0

    .line 11
    :cond_3
    invoke-virtual {p3, p2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteExact(I)Z

    move-result v1

    if-nez v1, :cond_4

    goto :goto_3

    .line 12
    :cond_4
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V

    .line 13
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v0

    if-ge v0, p2, :cond_5

    .line 14
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v0

    invoke-virtual {p1, v0}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 15
    invoke-interface {p5, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 16
    invoke-static {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$carry(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;)V

    goto :goto_2

    .line 17
    :cond_5
    invoke-interface {p5, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 18
    :goto_2
    invoke-static {p0, p1, p3, p2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesWritten(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 19
    invoke-virtual {p3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v0

    if-nez v0, :cond_6

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v0

    if-eqz v0, :cond_7

    .line 20
    :cond_6
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 21
    :cond_7
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 22
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move v0, v2

    :goto_3
    if-eqz v0, :cond_0

    .line 23
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    :catchall_0
    move-exception p1

    .line 24
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 25
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 26
    throw p1
.end method

.method public static synthetic writeSuspendSession$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 4

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;->L$0:Ljava/lang/Object;

    check-cast p0, Lio/ktor/utils/io/internal/WriteSessionImpl;

    :try_start_0
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .line 2
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    iget-object p0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSession:Lio/ktor/utils/io/internal/WriteSessionImpl;

    .line 5
    invoke-virtual {p0}, Lio/ktor/utils/io/internal/WriteSessionImpl;->begin()V

    .line 6
    :try_start_1
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;->L$0:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspendSession$1;->label:I

    invoke-interface {p1, p0, v0}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-ne p1, v1, :cond_3

    return-object v1

    .line 7
    :cond_3
    :goto_1
    invoke-virtual {p0}, Lio/ktor/utils/io/internal/WriteSessionImpl;->complete()V

    .line 8
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    :catchall_0
    move-exception p1

    .line 9
    invoke-virtual {p0}, Lio/ktor/utils/io/internal/WriteSessionImpl;->complete()V

    throw p1
.end method

.method public static synthetic writeWhile$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 1

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeWhileNoSuspend(Ln/l0/c/l;)Z

    move-result v0

    if-nez v0, :cond_0

    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 2
    :cond_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-nez v0, :cond_2

    .line 3
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeWhileSuspend(Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p1

    if-ne p0, p1, :cond_1

    return-object p0

    :cond_1
    sget-object p0, Ln/c0;->a:Ln/c0;

    return-object p0

    .line 4
    :cond_2
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p0

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p0, Lkotlin/KotlinNothingValueException;

    invoke-direct {p0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p0
.end method

.method private final writeWhileLoop(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Lio/ktor/utils/io/internal/RingBufferCapacity;",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ljava/lang/Boolean;",
            ">;)Z"
        }
    .end annotation

    .line 1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->capacity()I

    move-result v0

    iget v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    sub-int/2addr v0, v1

    const/4 v1, 0x1

    move v2, v1

    :goto_0
    if-eqz v2, :cond_6

    .line 2
    invoke-virtual {p2, v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteAtLeast(I)I

    move-result v3

    if-nez v3, :cond_0

    goto :goto_2

    .line 3
    :cond_0
    iget v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    add-int v4, v2, v3

    .line 4
    invoke-static {v4, v0}, Ln/p0/k;->f(II)I

    move-result v4

    .line 5
    invoke-virtual {p1, v4}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 6
    invoke-virtual {p1, v2}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    .line 7
    :try_start_0
    invoke-interface {p3, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Boolean;

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v6

    const/4 v7, 0x0

    if-ne v6, v4, :cond_1

    move v4, v1

    goto :goto_1

    :cond_1
    move v4, v7

    :goto_1
    if-eqz v4, :cond_5

    .line 9
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v4

    sub-int/2addr v4, v2

    if-ltz v4, :cond_2

    move v7, v1

    :cond_2
    if-eqz v7, :cond_4

    .line 10
    invoke-direct {p0, p1, p2, v4}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    if-ge v4, v3, :cond_3

    sub-int/2addr v3, v4

    .line 11
    invoke-virtual {p2, v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->completeRead(I)V

    :cond_3
    move v2, v5

    goto :goto_0

    .line 12
    :cond_4
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Position has been moved backward: pushback is not supported."

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 13
    :cond_5
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Buffer limit modified."

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    :catchall_0
    move-exception p1

    .line 14
    invoke-virtual {p2, v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->completeRead(I)V

    .line 15
    throw p1

    :cond_6
    :goto_2
    return v2
.end method

.method private final writeWhileNoSuspend(Ln/l0/c/l;)Z
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ljava/lang/Boolean;",
            ">;)Z"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-static {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move-object v0, p0

    .line 2
    :goto_0
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v1

    if-eqz v1, :cond_8

    .line 3
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 4
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v3

    .line 5
    :try_start_0
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v5

    if-nez v5, :cond_4

    .line 6
    invoke-direct {v0, v1, v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeWhileLoop(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z

    move-result p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v1

    if-nez v1, :cond_1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v1

    if-eqz v1, :cond_2

    :cond_1
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_2
    if-eq v0, p0, :cond_3

    .line 8
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v5

    sub-long/2addr v5, v3

    add-long/2addr v1, v5

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 9
    :cond_3
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 10
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_1

    .line 11
    :cond_4
    :try_start_1
    invoke-virtual {v5}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 12
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v1

    if-nez v1, :cond_5

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v1

    if-eqz v1, :cond_6

    :cond_5
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_6
    if-eq v0, p0, :cond_7

    .line 13
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v5

    sub-long/2addr v5, v3

    add-long/2addr v1, v5

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 14
    :cond_7
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 15
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_8
    const/4 p1, 0x1

    :goto_1
    return p1
.end method

.method private final writing(Ln/l0/c/q;)V
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/q<",
            "-",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "-",
            "Ljava/nio/ByteBuffer;",
            "-",
            "Lio/ktor/utils/io/internal/RingBufferCapacity;",
            "Ln/c0;",
            ">;)V"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-static {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move-object v0, p0

    .line 2
    :goto_0
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v1

    if-eqz v1, :cond_8

    .line 3
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 4
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v3

    const/4 v5, 0x1

    .line 5
    :try_start_0
    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v6

    if-nez v6, :cond_4

    .line 6
    invoke-interface {p1, v0, v1, v2}, Ln/l0/c/q;->invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {v5}, Ln/l0/d/p;->b(I)V

    .line 7
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_2

    :cond_1
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_2
    if-eq v0, p0, :cond_3

    .line 8
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v6

    sub-long/2addr v6, v3

    add-long/2addr v1, v6

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 9
    :cond_3
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 10
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v5}, Ln/l0/d/p;->a(I)V

    return-void

    .line 11
    :cond_4
    :try_start_1
    invoke-virtual {v6}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 12
    invoke-static {v5}, Ln/l0/d/p;->b(I)V

    .line 13
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v1

    if-nez v1, :cond_5

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v1

    if-eqz v1, :cond_6

    :cond_5
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_6
    if-eq v0, p0, :cond_7

    .line 14
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v6

    sub-long/2addr v6, v3

    add-long/2addr v1, v6

    invoke-virtual {p0, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 15
    :cond_7
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 16
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    invoke-static {v5}, Ln/l0/d/p;->a(I)V

    throw p1

    :cond_8
    return-void
.end method


# virtual methods
.method public attachJob(Lkotlinx/coroutines/Job;)V
    .locals 9

    const-string v0, "job"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->attachedJob:Lkotlinx/coroutines/Job;

    if-eqz v0, :cond_0

    const/4 v1, 0x1

    const/4 v2, 0x0

    invoke-static {v0, v2, v1, v2}, Lkotlinx/coroutines/Job$DefaultImpls;->cancel$default(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V

    .line 2
    :cond_0
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->attachedJob:Lkotlinx/coroutines/Job;

    const/4 v4, 0x1

    const/4 v5, 0x0

    .line 3
    new-instance v6, Lio/ktor/utils/io/ByteBufferChannel$attachJob$1;

    invoke-direct {v6, p0}, Lio/ktor/utils/io/ByteBufferChannel$attachJob$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;)V

    const/4 v7, 0x2

    const/4 v8, 0x0

    move-object v3, p1

    invoke-static/range {v3 .. v8}, Lkotlinx/coroutines/Job$DefaultImpls;->invokeOnCompletion$default(Lkotlinx/coroutines/Job;ZZLn/l0/c/l;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;

    return-void
.end method

.method public final awaitAtLeast(ILn/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;->label:I

    const/4 v3, 0x3

    const/4 v4, 0x2

    const/4 v5, 0x1

    if-eqz v2, :cond_4

    if-eq v2, v5, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_3

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    :cond_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_5

    :cond_4
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 p2, 0x0

    if-ltz p1, :cond_5

    move v2, v5

    goto :goto_1

    :cond_5
    move v2, p2

    :goto_1
    if-eqz v2, :cond_11

    const/16 v2, 0xff8

    if-gt p1, v2, :cond_6

    move p2, v5

    :cond_6
    if-eqz p2, :cond_10

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    iget-object p2, p2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 5
    iget p2, p2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-lt p2, p1, :cond_9

    .line 6
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getIdle()Z

    move-result p1

    if-nez p1, :cond_7

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p1

    instance-of p1, p1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Writing;

    if-eqz p1, :cond_8

    :cond_7
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForRead()Ljava/nio/ByteBuffer;

    .line 7
    :cond_8
    invoke-static {v5}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1

    .line 8
    :cond_9
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    invoke-virtual {p2}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getIdle()Z

    move-result p2

    if-nez p2, :cond_e

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    instance-of p2, p2, Lio/ktor/utils/io/internal/ReadWriteBufferState$Writing;

    if-eqz p2, :cond_a

    goto :goto_4

    :cond_a
    if-ne p1, v5, :cond_c

    .line 9
    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;->label:I

    invoke-virtual {p0, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendImpl(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_b

    return-object v1

    :cond_b
    :goto_2
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    goto :goto_6

    .line 10
    :cond_c
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_d

    return-object v1

    :cond_d
    :goto_3
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    goto :goto_6

    .line 11
    :cond_e
    :goto_4
    iput v5, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeast$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->awaitAtLeastSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_f

    return-object v1

    :cond_f
    :goto_5
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    .line 12
    :goto_6
    invoke-static {p1}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1

    .line 13
    :cond_10
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "atLeast parameter shouldn\'t be larger than max buffer size of 4088: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    new-instance p2, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 14
    :cond_11
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "atLeast parameter shouldn\'t be negative: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    new-instance p2, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method public final synthetic awaitAtLeastSuspend(ILn/i0/d;)Ljava/lang/Object;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;->L$0:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;->L$0:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitAtLeastSuspend$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_3

    return-object v1

    :cond_3
    move-object p1, p0

    :goto_1
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p2

    if-eqz p2, :cond_4

    .line 5
    invoke-direct {p1}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getIdle()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 6
    invoke-direct {p1}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForRead()Ljava/nio/ByteBuffer;

    .line 7
    :cond_4
    invoke-static {p2}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic awaitClose(Ln/i0/d;)Ljava/lang/Object;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_0

    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 2
    :cond_0
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-nez v0, :cond_3

    .line 3
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p1

    if-eqz p1, :cond_1

    const/4 p1, 0x1

    goto :goto_0

    :cond_1
    const/4 p1, 0x0

    :goto_0
    if-eqz p1, :cond_2

    .line 4
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 5
    :cond_2
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "Only works for joined."

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 6
    :cond_3
    invoke-virtual {v0, p1}, Lio/ktor/utils/io/internal/JoiningState;->awaitClose(Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v0

    if-ne p1, v0, :cond_4

    return-object p1

    .line 7
    :cond_4
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public awaitContent(Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->awaitContent$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public awaitFreeSpace(Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .annotation runtime Lio/ktor/utils/io/core/ExperimentalIoApi;
    .end annotation

    invoke-static {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->awaitFreeSpace$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic awaitFreeSpaceOrDelegate(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p3, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;

    if-eqz v0, :cond_0

    move-object v0, p3

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;

    invoke-direct {v0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->I$0:I

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->L$1:Ljava/lang/Object;

    check-cast p2, Ln/l0/c/l;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_3
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->L$1:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->I$0:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->label:I

    invoke-virtual {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v1, :cond_4

    return-object v1

    :cond_4
    move-object v2, p0

    .line 5
    :goto_1
    iget-object p3, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz p3, :cond_6

    invoke-direct {v2, v2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p3

    if-eqz p3, :cond_6

    const/4 v2, 0x0

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->L$0:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$awaitFreeSpaceOrDelegate$1;->label:I

    invoke-virtual {p3, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->write(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_5

    return-object v1

    :cond_5
    :goto_2
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 6
    :cond_6
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public beginWriteSession()Lio/ktor/utils/io/WriterSuspendSession;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSession:Lio/ktor/utils/io/internal/WriteSessionImpl;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/WriteSessionImpl;->begin()V

    return-object v0
.end method

.method public final bytesWrittenFromSession$ktor_io(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V
    .locals 1

    const-string v0, "buffer"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    const-string v0, "capacity"

    invoke-static {p2, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    return-void
.end method

.method public cancel(Ljava/lang/Throwable;)Z
    .locals 1

    if-eqz p1, :cond_0

    goto :goto_0

    .line 1
    :cond_0
    new-instance p1, Ljava/util/concurrent/CancellationException;

    const-string v0, "Channel has been cancelled"

    invoke-direct {p1, v0}, Ljava/util/concurrent/CancellationException;-><init>(Ljava/lang/String;)V

    :goto_0
    invoke-virtual {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->close(Ljava/lang/Throwable;)Z

    move-result p1

    return p1
.end method

.method public close(Ljava/lang/Throwable;)Z
    .locals 4

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    return v1

    :cond_0
    if-nez p1, :cond_1

    .line 2
    sget-object v0, Lio/ktor/utils/io/internal/ClosedElement;->Companion:Lio/ktor/utils/io/internal/ClosedElement$Companion;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement$Companion;->getEmptyCause()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    goto :goto_0

    .line 3
    :cond_1
    new-instance v0, Lio/ktor/utils/io/internal/ClosedElement;

    invoke-direct {v0, p1}, Lio/ktor/utils/io/internal/ClosedElement;-><init>(Ljava/lang/Throwable;)V

    .line 4
    :goto_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    iget-object v2, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    .line 5
    sget-object v2, Lio/ktor/utils/io/ByteBufferChannel;->_closed$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v3, 0x0

    invoke-virtual {v2, p0, v3, v0}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2

    return v1

    .line 6
    :cond_2
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    .line 7
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_3

    if-eqz p1, :cond_4

    .line 8
    :cond_3
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 9
    :cond_4
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->resumeClosed(Ljava/lang/Throwable;)V

    .line 10
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v0, v1, :cond_5

    .line 11
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_5

    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->ensureClosedJoined(Lio/ktor/utils/io/internal/JoiningState;)V

    :cond_5
    const/4 v0, 0x1

    if-eqz p1, :cond_7

    .line 12
    iget-object v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->attachedJob:Lkotlinx/coroutines/Job;

    if-eqz v1, :cond_6

    invoke-static {v1, v3, v0, v3}, Lkotlinx/coroutines/Job$DefaultImpls;->cancel$default(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V

    .line 13
    :cond_6
    iget-object v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    invoke-virtual {v1, p1}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;->close(Ljava/lang/Throwable;)V

    .line 14
    iget-object v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    invoke-virtual {v1, p1}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;->close(Ljava/lang/Throwable;)V

    return v0

    .line 15
    :cond_7
    iget-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    new-instance v1, Lio/ktor/utils/io/ClosedWriteChannelException;

    const-string v2, "Byte channel was closed"

    invoke-direct {v1, v2}, Lio/ktor/utils/io/ClosedWriteChannelException;-><init>(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;->close(Ljava/lang/Throwable;)V

    .line 16
    iget-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    iget-object v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result v1

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    invoke-virtual {p1, v1}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;->close(Ljava/lang/Object;)V

    return v0
.end method

.method public final synthetic consumeEachBufferRange(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/p<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "-",
            "Ljava/lang/Boolean;",
            "Ljava/lang/Boolean;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v0

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_3

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v3

    iget-object v3, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    :try_start_0
    iget v4, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_0

    .line 4
    :goto_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_2

    .line 6
    :cond_0
    :goto_1
    :try_start_1
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v4

    if-nez v4, :cond_1

    .line 7
    invoke-static {v2}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    goto :goto_0

    .line 8
    :cond_1
    invoke-static {v2}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v4

    invoke-interface {p1, v0, v4}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Boolean;

    invoke-virtual {v4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v4

    .line 9
    invoke-static {p0, v0, v3}, Lio/ktor/utils/io/ByteBufferChannel;->access$afterBufferVisited(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v4, :cond_2

    goto :goto_1

    .line 10
    :cond_2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 11
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_3

    :catchall_0
    move-exception p1

    .line 12
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 13
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_3
    :goto_2
    if-nez v2, :cond_4

    .line 14
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 15
    invoke-static {}, Lio/ktor/utils/io/internal/ReadWriteBufferStateKt;->getEmptyByteBuffer()Ljava/nio/ByteBuffer;

    move-result-object v0

    invoke-static {v1}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v2

    invoke-interface {p1, v0, v2}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_3

    :cond_4
    move v1, v2

    :goto_3
    if-eqz v1, :cond_5

    .line 16
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 17
    :cond_5
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->consumeEachBufferRangeSuspend(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p2

    if-ne p1, p2, :cond_6

    return-object p1

    :cond_6
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public final synthetic consumeEachBufferRangeSuspend(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/p<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "-",
            "Ljava/lang/Boolean;",
            "Ljava/lang/Boolean;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->label:I

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v4, :cond_1

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->I$0:I

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->L$1:Ljava/lang/Object;

    check-cast v2, Ln/l0/c/p;

    iget-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v5, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v8, p2

    move p2, p1

    move-object p1, v2

    move-object v2, v8

    goto/16 :goto_7

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v5, p0

    move p2, v3

    .line 4
    :cond_3
    :goto_1
    invoke-static {v5}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v2

    if-eqz v2, :cond_9

    .line 5
    invoke-static {v5}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v6

    iget-object v6, v6, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v7, v6, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v7, :cond_4

    .line 7
    invoke-static {v5}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {v5}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 9
    :cond_4
    :try_start_1
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v7

    if-nez v7, :cond_6

    if-nez p2, :cond_6

    if-eqz p2, :cond_5

    move v2, v4

    goto :goto_2

    :cond_5
    move v2, v3

    .line 10
    :goto_2
    invoke-static {v2}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11
    invoke-static {v5}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 12
    invoke-virtual {v5}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_5

    :cond_6
    if-eqz p2, :cond_7

    move v7, v4

    goto :goto_3

    :cond_7
    move v7, v3

    .line 13
    :goto_3
    :try_start_2
    invoke-static {v7}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v7

    invoke-interface {p1, v2, v7}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/Boolean;

    invoke-virtual {v7}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v7

    .line 14
    invoke-static {v5, v2, v6}, Lio/ktor/utils/io/ByteBufferChannel;->access$afterBufferVisited(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;)I

    if-eqz v7, :cond_8

    if-eqz p2, :cond_4

    .line 15
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-nez v7, :cond_4

    .line 16
    :cond_8
    invoke-static {v5}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 17
    invoke-virtual {v5}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_6

    :catchall_0
    move-exception p1

    .line 18
    invoke-static {v5}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 19
    invoke-virtual {v5}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_9
    :goto_4
    move v2, v3

    :goto_5
    if-nez v2, :cond_a

    .line 20
    invoke-static {v5}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v6

    if-eqz v6, :cond_a

    .line 21
    invoke-static {}, Lio/ktor/utils/io/internal/ReadWriteBufferStateKt;->getEmptyByteBuffer()Ljava/nio/ByteBuffer;

    move-result-object v2

    invoke-static {v4}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v6

    invoke-interface {p1, v2, v6}, Ln/l0/c/p;->invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :goto_6
    move v2, v4

    :cond_a
    if-eqz v2, :cond_b

    .line 22
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    :cond_b
    if-eqz p2, :cond_c

    .line 23
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 24
    :cond_c
    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->L$1:Ljava/lang/Object;

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->I$0:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$consumeEachBufferRangeSuspend$1;->label:I

    invoke-virtual {v5, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v2

    if-ne v2, v1, :cond_d

    return-object v1

    :cond_d
    :goto_7
    check-cast v2, Ljava/lang/Boolean;

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    if-nez v2, :cond_3

    move p2, v4

    goto/16 :goto_1
.end method

.method public consumed(I)V
    .locals 3

    if-ltz p1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_3

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 2
    iget-object v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v1

    if-eqz v1, :cond_2

    if-lez p1, :cond_1

    .line 3
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getReadBuffer()Ljava/nio/ByteBuffer;

    move-result-object v1

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-direct {p0, v1, v0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    :cond_1
    return-void

    .line 4
    :cond_2
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to consume "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " bytes: not enough available bytes"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5
    :cond_3
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v0, "Failed requirement."

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final copyDirect$ktor_io(Lio/ktor/utils/io/ByteBufferChannel;JLio/ktor/utils/io/internal/JoiningState;Ln/i0/d;)Ljava/lang/Object;
    .locals 26
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "J",
            "Lio/ktor/utils/io/internal/JoiningState;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Long;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    move-object/from16 v2, p4

    move-object/from16 v3, p5

    instance-of v4, v3, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;

    if-eqz v4, :cond_0

    move-object v4, v3

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;

    iget v5, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->label:I

    const/high16 v6, -0x80000000

    and-int v7, v5, v6

    if-eqz v7, :cond_0

    sub-int/2addr v5, v6

    iput v5, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;

    invoke-direct {v4, v1, v3}, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object v3, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v5

    .line 1
    iget v6, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->label:I

    const/4 v7, 0x3

    const/4 v8, 0x2

    const/4 v9, 0x1

    if-eqz v6, :cond_4

    if-eq v6, v9, :cond_3

    if-eq v6, v8, :cond_2

    if-ne v6, v7, :cond_1

    iget-boolean v0, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->Z$0:Z

    iget-wide v11, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$0:J

    iget-object v2, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$4:Ljava/lang/Object;

    check-cast v2, Ln/l0/d/f0;

    iget-object v6, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$3:Ljava/lang/Object;

    check-cast v6, Lio/ktor/utils/io/core/ByteOrder;

    iget-object v13, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$2:Ljava/lang/Object;

    check-cast v13, Lio/ktor/utils/io/internal/JoiningState;

    iget-object v14, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$1:Ljava/lang/Object;

    check-cast v14, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v15, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$0:Ljava/lang/Object;

    check-cast v15, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_0
    invoke-static {v3}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move v1, v8

    const/4 v10, 0x0

    move-object v8, v6

    move-object v6, v4

    move-object v4, v13

    move-object/from16 v24, v5

    move v5, v0

    move-object v0, v14

    move/from16 v25, v9

    move-object v9, v2

    move-wide v2, v11

    move v11, v7

    move/from16 v12, v25

    move-object/from16 v7, v24

    goto/16 :goto_18

    .line 2
    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3
    :cond_2
    iget-boolean v0, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->Z$0:Z

    iget-wide v11, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$0:J

    iget-object v2, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$4:Ljava/lang/Object;

    check-cast v2, Ln/l0/d/f0;

    iget-object v6, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$3:Ljava/lang/Object;

    check-cast v6, Lio/ktor/utils/io/core/ByteOrder;

    iget-object v13, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$2:Ljava/lang/Object;

    check-cast v13, Lio/ktor/utils/io/internal/JoiningState;

    iget-object v14, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$1:Ljava/lang/Object;

    check-cast v14, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v15, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$0:Ljava/lang/Object;

    check-cast v15, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_1
    invoke-static {v3}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move v1, v8

    goto/16 :goto_15

    :catchall_0
    move-exception v0

    goto/16 :goto_1a

    :cond_3
    iget-wide v11, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$1:J

    iget-boolean v0, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->Z$0:Z

    iget-wide v13, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$0:J

    iget-object v2, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$10:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v6, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$9:Ljava/lang/Object;

    check-cast v6, Ljava/nio/ByteBuffer;

    iget-object v15, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$8:Ljava/lang/Object;

    check-cast v15, Lio/ktor/utils/io/internal/RingBufferCapacity;

    iget-object v7, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$7:Ljava/lang/Object;

    check-cast v7, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v8, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$6:Ljava/lang/Object;

    check-cast v8, Lio/ktor/utils/io/internal/RingBufferCapacity;

    iget-object v10, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$5:Ljava/lang/Object;

    check-cast v10, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v9, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$4:Ljava/lang/Object;

    check-cast v9, Ln/l0/d/f0;

    move/from16 p1, v0

    iget-object v0, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$3:Ljava/lang/Object;

    check-cast v0, Lio/ktor/utils/io/core/ByteOrder;

    move-object/from16 p2, v0

    iget-object v0, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$2:Ljava/lang/Object;

    check-cast v0, Lio/ktor/utils/io/internal/JoiningState;

    move-object/from16 p3, v0

    iget-object v0, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$1:Ljava/lang/Object;

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel;

    move-object/from16 p4, v0

    iget-object v0, v4, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$0:Ljava/lang/Object;

    move-object/from16 v16, v0

    check-cast v16, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_2
    invoke-static {v3}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-object/from16 v0, p4

    move-wide/from16 v17, v13

    move-object/from16 v1, v16

    move-object/from16 v16, p3

    move-wide v13, v11

    move-object v11, v7

    move-object v12, v8

    move-object/from16 v8, p2

    move-object v7, v5

    move/from16 v5, p1

    goto/16 :goto_5

    :catchall_1
    move-exception v0

    move-object/from16 v15, v16

    goto/16 :goto_13

    :cond_4
    invoke-static {v3}, Ln/o;->b(Ljava/lang/Object;)V

    const-wide/16 v6, 0x0

    cmp-long v3, p2, v6

    .line 4
    invoke-virtual/range {p1 .. p1}, Lio/ktor/utils/io/ByteBufferChannel;->getClosedCause()Ljava/lang/Throwable;

    move-result-object v3

    if-eqz v3, :cond_5

    .line 5
    invoke-virtual/range {p1 .. p1}, Lio/ktor/utils/io/ByteBufferChannel;->getClosedCause()Ljava/lang/Throwable;

    move-result-object v0

    invoke-virtual {v1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->close(Ljava/lang/Throwable;)Z

    .line 6
    invoke-static {v6, v7}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object v0

    return-object v0

    .line 7
    :cond_5
    invoke-virtual/range {p1 .. p1}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result v3

    if-eqz v3, :cond_8

    if-eqz v2, :cond_7

    .line 8
    invoke-direct {v0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->tryCompleteJoining(Lio/ktor/utils/io/internal/JoiningState;)Z

    move-result v0

    if-eqz v0, :cond_6

    goto :goto_1

    :cond_6
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v2, "Check failed."

    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9
    :cond_7
    :goto_1
    invoke-static {v6, v7}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object v0

    return-object v0

    :cond_8
    if-eqz v2, :cond_9

    .line 10
    invoke-direct {v0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->tryCompleteJoining(Lio/ktor/utils/io/internal/JoiningState;)Z

    move-result v3

    if-eqz v3, :cond_9

    .line 11
    invoke-static {v6, v7}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object v0

    return-object v0

    .line 12
    :cond_9
    invoke-virtual/range {p0 .. p0}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v3

    .line 13
    invoke-virtual/range {p0 .. p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v8

    .line 14
    :try_start_3
    new-instance v9, Ln/l0/d/f0;

    invoke-direct {v9}, Ln/l0/d/f0;-><init>()V

    iput-wide v6, v9, Ln/l0/d/f0;->a:J
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_f

    move-object v15, v1

    move-object v6, v4

    move-object v7, v5

    move-object v4, v2

    move v5, v3

    move-wide/from16 v2, p2

    .line 15
    :goto_2
    :try_start_4
    iget-wide v10, v9, Ln/l0/d/f0;->a:J

    cmp-long v10, v10, v2

    if-gez v10, :cond_27

    .line 16
    invoke-static {v15}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v10

    if-eqz v10, :cond_a

    invoke-static {v15, v15, v10}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v10

    if-eqz v10, :cond_a

    goto :goto_3

    :cond_a
    move-object v10, v15

    .line 17
    :goto_3
    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v11

    if-eqz v11, :cond_1d

    .line 18
    invoke-static {v10}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v12

    iget-object v12, v12, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 19
    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v13
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 20
    :try_start_5
    invoke-static {v10}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v16
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_e

    if-nez v16, :cond_19

    move-object/from16 p3, v10

    move-object/from16 v16, v11

    move-wide/from16 p1, v13

    move-object v1, v15

    move-wide v13, v2

    move-object/from16 v2, p3

    move-object v3, v12

    .line 21
    :goto_4
    :try_start_6
    iget-wide v10, v9, Ln/l0/d/f0;->a:J

    cmp-long v10, v10, v13

    if-gez v10, :cond_15

    .line 22
    iget v10, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    if-nez v10, :cond_d

    .line 23
    iput-object v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$0:Ljava/lang/Object;

    iput-object v0, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$1:Ljava/lang/Object;

    iput-object v4, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$2:Ljava/lang/Object;

    iput-object v8, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$3:Ljava/lang/Object;

    iput-object v9, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$4:Ljava/lang/Object;

    iput-object v15, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$5:Ljava/lang/Object;

    iput-object v12, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$6:Ljava/lang/Object;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_d

    move-object/from16 v11, p3

    :try_start_7
    iput-object v11, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$7:Ljava/lang/Object;

    iput-object v3, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$8:Ljava/lang/Object;

    move-object/from16 v10, v16

    iput-object v10, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$9:Ljava/lang/Object;

    iput-object v2, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$10:Ljava/lang/Object;

    iput-wide v13, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$0:J

    iput-boolean v5, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->Z$0:Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_5

    move-object/from16 p3, v3

    move-object/from16 v16, v4

    move-wide/from16 v3, p1

    :try_start_8
    iput-wide v3, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$1:J

    move-object/from16 p1, v0

    const/4 v0, 0x1

    iput v0, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->label:I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_4

    move-object/from16 p2, v1

    :try_start_9
    invoke-virtual {v2, v0, v6}, Lio/ktor/utils/io/ByteBufferChannel;->tryWriteSuspend$ktor_io(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v1
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    if-ne v1, v7, :cond_b

    return-object v7

    :cond_b
    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move-wide/from16 v17, v13

    move-wide v13, v3

    move-object v4, v6

    move-object v6, v10

    move-object v10, v15

    move-object/from16 v15, p3

    .line 24
    :goto_5
    :try_start_a
    iget-object v3, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v3, :cond_c

    move-object v6, v4

    move-object v15, v10

    move-object v10, v11

    :goto_6
    move-object/from16 v4, v16

    goto/16 :goto_10

    .line 25
    :cond_c
    iget v3, v15, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    move-object/from16 p1, v1

    move-object/from16 p2, v16

    move-object v1, v0

    move-object v0, v2

    move-object v2, v6

    move-object v6, v4

    move-object/from16 v24, v10

    move v10, v3

    move-object v3, v15

    move-object/from16 v15, v24

    goto :goto_7

    :catchall_2
    move-exception v0

    move-object v15, v1

    move-object v7, v11

    move-object v8, v12

    move-wide v11, v13

    goto/16 :goto_13

    :catchall_3
    move-exception v0

    goto/16 :goto_12

    :catchall_4
    move-exception v0

    goto/16 :goto_11

    :catchall_5
    move-exception v0

    move-wide/from16 v3, p1

    goto/16 :goto_11

    :cond_d
    move-object/from16 v11, p3

    move-object/from16 p3, v3

    move-wide/from16 v24, p1

    move-object/from16 p1, v0

    move-object/from16 p2, v1

    move-object/from16 v0, v16

    move-object/from16 v16, v4

    move-wide/from16 v3, v24

    move-object/from16 v1, p1

    move-object/from16 p1, p2

    move-wide/from16 v17, v13

    move-object/from16 p2, v16

    move-wide v13, v3

    move-object/from16 v3, p3

    move-object/from16 v24, v2

    move-object v2, v0

    move-object/from16 v0, v24

    .line 26
    :goto_7
    :try_start_b
    iget v4, v0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    invoke-direct {v0, v2, v8, v4, v10}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    .line 27
    invoke-static {v1}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v4

    move-object/from16 p4, v6

    if-eqz v4, :cond_11

    .line 28
    invoke-static {v1}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v6

    iget-object v6, v6, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_b

    move-object/from16 v16, v7

    .line 29
    :try_start_c
    iget v7, v6, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_9

    if-nez v7, :cond_e

    .line 30
    :try_start_d
    invoke-static {v1}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 31
    invoke-virtual {v1}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_6

    goto/16 :goto_c

    :catchall_6
    move-exception v0

    move-object v7, v11

    move-object v8, v12

    move-wide v11, v13

    move-object v10, v15

    goto/16 :goto_f

    .line 32
    :cond_e
    :try_start_e
    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v7
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_9

    move-object/from16 v19, v8

    int-to-long v7, v7

    move-object/from16 v20, v11

    .line 33
    :try_start_f
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v11
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_8

    move-object/from16 v21, v12

    int-to-long v11, v11

    move-wide/from16 v22, v13

    .line 34
    :try_start_10
    iget-wide v13, v9, Ln/l0/d/f0;->a:J

    sub-long v13, v17, v13

    .line 35
    invoke-static {v11, v12, v13, v14}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v11

    invoke-static {v7, v8, v11, v12}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v7

    long-to-int v7, v7

    .line 36
    invoke-virtual {v3, v7}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteAtMost(I)I

    move-result v7

    if-gtz v7, :cond_f

    const/4 v4, 0x0

    :goto_8
    const/4 v6, 0x1

    goto :goto_9

    .line 37
    :cond_f
    invoke-virtual {v6, v7}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v8

    if-eqz v8, :cond_10

    .line 38
    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->position()I

    move-result v8

    add-int/2addr v8, v7

    invoke-virtual {v4, v8}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 39
    invoke-virtual {v2, v4}, Ljava/nio/ByteBuffer;->put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;

    .line 40
    invoke-direct {v1, v4, v6, v7}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move v4, v7

    goto :goto_8

    .line 41
    :goto_9
    invoke-static {v6}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Boolean;->booleanValue()Z
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_7

    .line 42
    :try_start_11
    invoke-static {v1}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 43
    invoke-virtual {v1}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_a

    goto :goto_d

    .line 44
    :cond_10
    :try_start_12
    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_7

    :catchall_7
    move-exception v0

    goto :goto_b

    :catchall_8
    move-exception v0

    goto :goto_a

    :catchall_9
    move-exception v0

    move-object/from16 v20, v11

    :goto_a
    move-object/from16 v21, v12

    move-wide/from16 v22, v13

    .line 45
    :goto_b
    :try_start_13
    invoke-static {v1}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 46
    invoke-virtual {v1}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw v0

    :cond_11
    move-object/from16 v16, v7

    :goto_c
    move-object/from16 v19, v8

    move-object/from16 v20, v11

    move-object/from16 v21, v12

    move-wide/from16 v22, v13

    const/4 v4, 0x0

    :goto_d
    if-gtz v4, :cond_12

    move-object/from16 v4, p2

    move-object/from16 v6, p4

    move-object v0, v1

    move-object/from16 v7, v16

    move-object/from16 v8, v19

    move-object/from16 v10, v20

    move-object/from16 v12, v21

    move-wide/from16 v13, v22

    move-object/from16 v1, p1

    goto :goto_10

    .line 47
    :cond_12
    invoke-direct {v0, v2, v3, v4}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 48
    iget-wide v6, v9, Ln/l0/d/f0;->a:J

    int-to-long v11, v4

    add-long/2addr v6, v11

    iput-wide v6, v9, Ln/l0/d/f0;->a:J

    sub-int/2addr v10, v4

    if-eqz v10, :cond_13

    if-eqz v5, :cond_14

    .line 49
    :cond_13
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_a

    :cond_14
    move-object/from16 v4, p2

    move-object/from16 v6, p4

    move-object/from16 v7, v16

    move-wide/from16 v13, v17

    move-object/from16 v8, v19

    move-object/from16 p3, v20

    move-object/from16 v12, v21

    move-object/from16 v16, v2

    move-object v2, v0

    move-object v0, v1

    move-object/from16 v1, p1

    move-wide/from16 p1, v22

    goto/16 :goto_4

    :catchall_a
    move-exception v0

    goto :goto_e

    :catchall_b
    move-exception v0

    move-object/from16 v20, v11

    move-object/from16 v21, v12

    move-wide/from16 v22, v13

    :goto_e
    move-object v10, v15

    move-object/from16 v7, v20

    move-object/from16 v8, v21

    move-wide/from16 v11, v22

    :goto_f
    move-object/from16 v15, p1

    goto/16 :goto_13

    :cond_15
    move-object/from16 v11, p3

    move-object/from16 v16, v4

    move-wide/from16 v3, p1

    move-object/from16 p1, v0

    move-object/from16 p2, v1

    move-object v10, v11

    move-wide/from16 v17, v13

    move-wide v13, v3

    goto/16 :goto_6

    .line 50
    :goto_10
    :try_start_14
    invoke-virtual {v12}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v2

    if-nez v2, :cond_16

    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v2

    if-eqz v2, :cond_17

    :cond_16
    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_17
    if-eq v10, v15, :cond_18

    .line 51
    invoke-virtual {v15}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v2

    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v11

    sub-long/2addr v11, v13

    add-long/2addr v2, v11

    invoke-virtual {v15, v2, v3}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 52
    :cond_18
    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 53
    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_c

    move-object v15, v1

    move-wide/from16 v2, v17

    goto :goto_14

    :catchall_c
    move-exception v0

    move-object v15, v1

    goto/16 :goto_1a

    :catchall_d
    move-exception v0

    move-wide/from16 v3, p1

    move-object/from16 v11, p3

    :goto_11
    move-object/from16 p2, v1

    :goto_12
    move-object v7, v11

    move-object v8, v12

    move-object v10, v15

    move-object/from16 v15, p2

    move-wide v11, v3

    goto :goto_13

    .line 54
    :cond_19
    :try_start_15
    invoke-virtual/range {v16 .. v16}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v0

    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_e

    :catchall_e
    move-exception v0

    move-object v7, v10

    move-object v8, v12

    move-wide v11, v13

    move-object v10, v15

    .line 55
    :goto_13
    :try_start_16
    invoke-virtual {v8}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v1

    if-nez v1, :cond_1a

    invoke-virtual {v7}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v1

    if-eqz v1, :cond_1b

    :cond_1a
    invoke-virtual {v7}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_1b
    if-eq v7, v10, :cond_1c

    .line 56
    invoke-virtual {v10}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v1

    invoke-virtual {v7}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v3

    sub-long/2addr v3, v11

    add-long/2addr v1, v3

    invoke-virtual {v10, v1, v2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 57
    :cond_1c
    invoke-virtual {v7}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 58
    invoke-virtual {v7}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw v0

    :cond_1d
    :goto_14
    if-eqz v4, :cond_1f

    .line 59
    invoke-direct {v0, v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryCompleteJoining(Lio/ktor/utils/io/internal/JoiningState;)Z

    move-result v1

    if-eqz v1, :cond_1e

    goto/16 :goto_19

    .line 60
    :cond_1e
    invoke-direct {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    iget-object v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result v1

    if-eqz v1, :cond_1f

    .line 61
    invoke-direct {v0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    goto/16 :goto_18

    .line 62
    :cond_1f
    iget-wide v10, v9, Ln/l0/d/f0;->a:J

    cmp-long v1, v10, v2

    if-ltz v1, :cond_20

    goto/16 :goto_19

    .line 63
    :cond_20
    invoke-virtual {v15}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 64
    invoke-virtual {v0}, Lio/ktor/utils/io/ByteBufferChannel;->getAvailableForRead()I

    move-result v1

    if-nez v1, :cond_25

    .line 65
    iput-object v15, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$0:Ljava/lang/Object;

    iput-object v0, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$1:Ljava/lang/Object;

    iput-object v4, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$2:Ljava/lang/Object;

    iput-object v8, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$3:Ljava/lang/Object;

    iput-object v9, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$4:Ljava/lang/Object;

    const/4 v1, 0x0

    iput-object v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$5:Ljava/lang/Object;

    iput-object v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$6:Ljava/lang/Object;

    iput-object v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$7:Ljava/lang/Object;

    iput-object v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$8:Ljava/lang/Object;

    iput-object v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$9:Ljava/lang/Object;

    iput-object v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$10:Ljava/lang/Object;

    iput-wide v2, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$0:J

    iput-boolean v5, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->Z$0:Z

    const/4 v1, 0x2

    iput v1, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->label:I

    const/4 v10, 0x1

    invoke-virtual {v0, v10, v6}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendImpl(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v11

    if-ne v11, v7, :cond_21

    return-object v7

    :cond_21
    move-object v14, v0

    move-object v13, v4

    move v0, v5

    move-object v4, v6

    move-object v5, v7

    move-object v6, v8

    move-wide/from16 v24, v2

    move-object v2, v9

    move-object v3, v11

    move-wide/from16 v11, v24

    :goto_15
    check-cast v3, Ljava/lang/Boolean;

    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v3

    if-eqz v3, :cond_22

    if-eqz v13, :cond_23

    .line 66
    invoke-direct {v14, v13}, Lio/ktor/utils/io/ByteBufferChannel;->tryCompleteJoining(Lio/ktor/utils/io/internal/JoiningState;)Z

    move-result v3

    if-eqz v3, :cond_23

    goto :goto_16

    :cond_22
    if-eqz v13, :cond_24

    .line 67
    invoke-direct {v14, v13}, Lio/ktor/utils/io/ByteBufferChannel;->tryCompleteJoining(Lio/ktor/utils/io/internal/JoiningState;)Z

    move-result v3

    if-eqz v3, :cond_23

    goto :goto_16

    :cond_23
    move-object v9, v2

    move-object v7, v5

    move-object v8, v6

    move-wide v2, v11

    move v5, v0

    move-object v6, v4

    move-object v4, v13

    move-object v0, v14

    goto :goto_17

    :cond_24
    :goto_16
    move v5, v0

    move-object v9, v2

    goto :goto_19

    :cond_25
    const/4 v1, 0x2

    .line 68
    :goto_17
    iget-object v10, v15, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v10, :cond_26

    .line 69
    iput-object v15, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$0:Ljava/lang/Object;

    iput-object v0, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$1:Ljava/lang/Object;

    iput-object v4, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$2:Ljava/lang/Object;

    iput-object v8, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$3:Ljava/lang/Object;

    iput-object v9, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$4:Ljava/lang/Object;

    const/4 v10, 0x0

    iput-object v10, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$5:Ljava/lang/Object;

    iput-object v10, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$6:Ljava/lang/Object;

    iput-object v10, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$7:Ljava/lang/Object;

    iput-object v10, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$8:Ljava/lang/Object;

    iput-object v10, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$9:Ljava/lang/Object;

    iput-object v10, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->L$10:Ljava/lang/Object;

    iput-wide v2, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->J$0:J

    iput-boolean v5, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->Z$0:Z

    const/4 v11, 0x3

    iput v11, v6, Lio/ktor/utils/io/ByteBufferChannel$copyDirect$1;->label:I

    const/4 v12, 0x1

    invoke-virtual {v15, v12, v6}, Lio/ktor/utils/io/ByteBufferChannel;->tryWriteSuspend$ktor_io(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v13

    if-ne v13, v7, :cond_26

    return-object v7

    :cond_26
    :goto_18
    move-object/from16 v1, p0

    goto/16 :goto_2

    :cond_27
    :goto_19
    if-eqz v5, :cond_28

    .line 70
    invoke-virtual {v15}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    .line 71
    :cond_28
    iget-wide v0, v9, Ln/l0/d/f0;->a:J

    invoke-static {v0, v1}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object v0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_0

    return-object v0

    :catchall_f
    move-exception v0

    move-object/from16 v15, p0

    .line 72
    :goto_1a
    invoke-virtual {v15, v0}, Lio/ktor/utils/io/ByteBufferChannel;->close(Ljava/lang/Throwable;)Z

    .line 73
    throw v0
.end method

.method public final currentState$ktor_io()Lio/ktor/utils/io/internal/ReadWriteBufferState;
    .locals 1

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    return-object v0
.end method

.method public discard(JLn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(J",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Long;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->discard$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;JLn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic discardSuspend(JJLn/i0/d;)Ljava/lang/Object;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(JJ",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Long;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p5, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p5

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;

    invoke-direct {v0, p0, p5}, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p5, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget-wide p1, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->J$0:J

    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p3, Ln/l0/d/f0;

    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->L$0:Ljava/lang/Object;

    check-cast p4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p5}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_3

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p5}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    new-instance p5, Ln/l0/d/f0;

    invoke-direct {p5}, Ln/l0/d/f0;-><init>()V

    iput-wide p1, p5, Ln/l0/d/f0;->a:J

    move-wide p1, p3

    move-object p3, p5

    move-object p4, p0

    .line 5
    :cond_3
    iget-wide v4, p3, Ln/l0/d/f0;->a:J

    cmp-long p5, v4, p1

    if-gez p5, :cond_7

    .line 6
    invoke-static {p4}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object p5

    const/4 v2, 0x0

    if-eqz p5, :cond_5

    .line 7
    invoke-static {p4}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    iget-object v4, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 8
    :try_start_0
    iget v5, v4, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v5, :cond_4

    .line 9
    :goto_1
    invoke-static {p4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 10
    invoke-virtual {p4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_2

    :cond_4
    const v2, 0x7fffffff

    int-to-long v5, v2

    .line 11
    :try_start_1
    iget-wide v7, p3, Ln/l0/d/f0;->a:J

    sub-long v7, p1, v7

    invoke-static {v5, v6, v7, v8}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v5

    long-to-int v2, v5

    invoke-virtual {v4, v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadAtMost(I)I

    move-result v2

    .line 12
    invoke-direct {p4, p5, v4, v2}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    .line 13
    iget-wide v4, p3, Ln/l0/d/f0;->a:J

    int-to-long v6, v2

    add-long/2addr v4, v6

    iput-wide v4, p3, Ln/l0/d/f0;->a:J

    .line 14
    invoke-static {v3}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p5

    invoke-virtual {p5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception p1

    .line 15
    invoke-static {p4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 16
    invoke-virtual {p4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_5
    :goto_2
    if-nez v2, :cond_3

    .line 17
    invoke-virtual {p4}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result p5

    if-nez p5, :cond_7

    iput-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->L$1:Ljava/lang/Object;

    iput-wide p1, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->J$0:J

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$discardSuspend$1;->label:I

    invoke-virtual {p4, v3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p5

    if-ne p5, v1, :cond_6

    return-object v1

    :cond_6
    :goto_3
    check-cast p5, Ljava/lang/Boolean;

    invoke-virtual {p5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p5

    if-nez p5, :cond_3

    .line 18
    :cond_7
    iget-wide p1, p3, Ln/l0/d/f0;->a:J

    invoke-static {p1, p2}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object p1

    return-object p1
.end method

.method public endReadSession()V
    .locals 2

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSession:Lio/ktor/utils/io/internal/ReadSessionImpl;

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadSessionImpl;->completed()V

    .line 2
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 3
    instance-of v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Reading;

    if-nez v1, :cond_0

    instance-of v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$ReadingWriting;

    if-eqz v0, :cond_1

    .line 4
    :cond_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterRead()V

    .line 5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    :cond_1
    return-void
.end method

.method public endWriteSession(I)V
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSession:Lio/ktor/utils/io/internal/WriteSessionImpl;

    invoke-virtual {v0, p1}, Lio/ktor/utils/io/internal/WriteSessionImpl;->written(I)V

    .line 2
    iget-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSession:Lio/ktor/utils/io/internal/WriteSessionImpl;

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/WriteSessionImpl;->complete()V

    return-void
.end method

.method public flush()V
    .locals 1

    const/4 v0, 0x1

    .line 1
    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->flushImpl(I)V

    return-void
.end method

.method public getAutoFlush()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->autoFlush:Z

    return v0
.end method

.method public getAvailableForRead()I
    .locals 1

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 2
    iget v0, v0, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    return v0
.end method

.method public getAvailableForWrite()I
    .locals 1

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 2
    iget v0, v0, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    return v0
.end method

.method public getClosedCause()Ljava/lang/Throwable;
    .locals 1

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return-object v0
.end method

.method public final getJoining$ktor_io()Lio/ktor/utils/io/internal/JoiningState;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    return-object v0
.end method

.method public getReadByteOrder()Lio/ktor/utils/io/core/ByteOrder;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->readByteOrder:Lio/ktor/utils/io/core/ByteOrder;

    return-object v0
.end method

.method public final getReservedSize$ktor_io()I
    .locals 1

    .line 1
    iget v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->reservedSize:I

    return v0
.end method

.method public getTotalBytesRead()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->totalBytesRead:J

    return-wide v0
.end method

.method public getTotalBytesWritten()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->totalBytesWritten:J

    return-wide v0
.end method

.method public getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeByteOrder:Lio/ktor/utils/io/core/ByteOrder;

    return-object v0
.end method

.method public isClosedForRead()Z
    .locals 2

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v0, v1, :cond_0

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public isClosedForWrite()Z
    .locals 1

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public final joinFrom$ktor_io(Lio/ktor/utils/io/ByteBufferChannel;ZLn/i0/d;)Ljava/lang/Object;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "Z",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-direct {p1}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-direct {p1}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v0, v1, :cond_1

    if-eqz p2, :cond_0

    .line 2
    invoke-direct {p1}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p1

    invoke-static {p1}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object p1

    invoke-virtual {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->close(Ljava/lang/Throwable;)Z

    .line 3
    :cond_0
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 4
    :cond_1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_3

    .line 5
    invoke-direct {p1}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p1

    if-eqz p1, :cond_2

    .line 6
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 7
    :cond_2
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1

    .line 8
    :cond_3
    invoke-direct {p1, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->setupDelegateTo(Lio/ktor/utils/io/ByteBufferChannel;Z)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v0

    .line 9
    invoke-direct {p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryCompleteJoining(Lio/ktor/utils/io/internal/JoiningState;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 10
    invoke-virtual {p1, p3}, Lio/ktor/utils/io/ByteBufferChannel;->awaitClose(Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p2

    if-ne p1, p2, :cond_4

    return-object p1

    .line 11
    :cond_4
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 12
    :cond_5
    invoke-virtual {p0, p1, p2, v0, p3}, Lio/ktor/utils/io/ByteBufferChannel;->joinFromSuspend(Lio/ktor/utils/io/ByteBufferChannel;ZLio/ktor/utils/io/internal/JoiningState;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p2

    if-ne p1, p2, :cond_6

    return-object p1

    .line 13
    :cond_6
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public final synthetic joinFromSuspend(Lio/ktor/utils/io/ByteBufferChannel;ZLio/ktor/utils/io/internal/JoiningState;Ln/i0/d;)Ljava/lang/Object;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/ByteBufferChannel;",
            "Z",
            "Lio/ktor/utils/io/internal/JoiningState;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v7

    .line 1
    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->label:I

    const/4 v8, 0x2

    const/4 v2, 0x1

    if-eqz v1, :cond_3

    if-eq v1, v2, :cond_2

    if-ne v1, v8, :cond_1

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    iget-boolean p2, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->Z$0:Z

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->L$0:Ljava/lang/Object;

    check-cast p3, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_3
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    const-wide v3, 0x7fffffffffffffffL

    .line 4
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->L$1:Ljava/lang/Object;

    iput-boolean p2, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->Z$0:Z

    iput v2, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->label:I

    move-object v1, p0

    move-object v2, p1

    move-object v5, p3

    move-object v6, v0

    invoke-virtual/range {v1 .. v6}, Lio/ktor/utils/io/ByteBufferChannel;->copyDirect$ktor_io(Lio/ktor/utils/io/ByteBufferChannel;JLio/ktor/utils/io/internal/JoiningState;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v7, :cond_4

    return-object v7

    :cond_4
    move-object p3, p0

    :goto_1
    if-eqz p2, :cond_5

    .line 5
    invoke-virtual {p1}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result p2

    if-eqz p2, :cond_5

    .line 6
    invoke-static {p3}, Lio/ktor/utils/io/ByteWriteChannelKt;->close(Lio/ktor/utils/io/ByteWriteChannel;)Z

    .line 7
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 8
    :cond_5
    invoke-virtual {p3}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    const/4 p2, 0x0

    .line 9
    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->L$1:Ljava/lang/Object;

    iput v8, v0, Lio/ktor/utils/io/ByteBufferChannel$joinFromSuspend$1;->label:I

    invoke-virtual {p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->awaitClose(Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v7, :cond_6

    return-object v7

    .line 10
    :cond_6
    :goto_2
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public lookAhead(Ln/l0/c/l;)Ljava/lang/Object;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<R:",
            "Ljava/lang/Object;",
            ">(",
            "Ln/l0/c/l<",
            "-",
            "Lio/ktor/utils/io/LookAheadSession;",
            "+TR;>;)TR;"
        }
    .end annotation

    const-string v0, "visitor"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v0, v1, :cond_0

    .line 2
    sget-object v0, Lio/ktor/utils/io/internal/TerminatedLookAhead;->INSTANCE:Lio/ktor/utils/io/internal/TerminatedLookAhead;

    invoke-interface {p1, v0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    return-object p1

    :cond_0
    const/4 v0, 0x0

    .line 3
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v1

    const/4 v2, 0x0

    if-eqz v1, :cond_2

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    iget-object v1, v1, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 5
    :try_start_0
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v1, :cond_1

    .line 6
    :goto_0
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 7
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_1

    .line 8
    :cond_1
    :try_start_1
    invoke-interface {p1, p0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    const/4 v2, 0x1

    goto :goto_0

    :catchall_0
    move-exception p1

    .line 9
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 10
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_2
    :goto_1
    if-nez v2, :cond_3

    .line 11
    sget-object v0, Lio/ktor/utils/io/internal/TerminatedLookAhead;->INSTANCE:Lio/ktor/utils/io/internal/TerminatedLookAhead;

    invoke-interface {p1, v0}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    return-object p1

    .line 12
    :cond_3
    invoke-static {v0}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    return-object v0
.end method

.method public lookAheadSuspend(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<R:",
            "Ljava/lang/Object;",
            ">(",
            "Ln/l0/c/p<",
            "-",
            "Lio/ktor/utils/io/LookAheadSuspendSession;",
            "-",
            "Ln/i0/d<",
            "-TR;>;+",
            "Ljava/lang/Object;",
            ">;",
            "Ln/i0/d<",
            "-TR;>;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->lookAheadSuspend$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public peekTo-vHUFkk8(Ljava/nio/ByteBuffer;JJJJLn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "JJJJ",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Long;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static/range {p0 .. p10}, Lio/ktor/utils/io/ByteBufferChannel;->peekTo-vHUFkk8$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;JJJJLn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final prepareWriteBuffer$ktor_io(Ljava/nio/ByteBuffer;I)V
    .locals 2

    const-string v0, "buffer"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v0

    iget v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    invoke-direct {p0, p1, v0, v1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    return-void
.end method

.method public read(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->read$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public readAvailable(ILn/l0/c/l;)I
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;)I"
        }
    .end annotation

    const-string v0, "block"

    invoke-static {p2, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    const/4 v0, 0x1

    const/4 v1, 0x0

    if-lez p1, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v1

    :goto_0
    if-eqz v2, :cond_d

    const/16 v2, 0xff8

    if-gt p1, v2, :cond_1

    move v2, v0

    goto :goto_1

    :cond_1
    move v2, v1

    :goto_1
    if-eqz v2, :cond_c

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v2

    if-eqz v2, :cond_a

    .line 2
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v3

    iget-object v3, v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    :try_start_0
    iget v4, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_2

    .line 4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 5
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_5

    .line 6
    :cond_2
    :try_start_1
    invoke-virtual {v3, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadAtLeast(I)I

    move-result v4

    if-lez v4, :cond_9

    if-ge v4, p1, :cond_3

    goto :goto_3

    .line 7
    :cond_3
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->position()I

    move-result p1

    .line 8
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->limit()I

    move-result v5

    .line 9
    invoke-interface {p2, v2}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->limit()I

    move-result p2

    if-ne v5, p2, :cond_4

    move p2, v0

    goto :goto_2

    :cond_4
    move p2, v1

    :goto_2
    if-eqz p2, :cond_8

    .line 11
    invoke-virtual {v2}, Ljava/nio/ByteBuffer;->position()I

    move-result p2

    sub-int/2addr p2, p1

    if-ltz p2, :cond_5

    move v1, v0

    :cond_5
    if-eqz v1, :cond_7

    .line 12
    invoke-direct {p0, v2, v3, p2}, Lio/ktor/utils/io/ByteBufferChannel;->bytesRead(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    if-ge p2, v4, :cond_6

    sub-int/2addr v4, p2

    .line 13
    invoke-virtual {v3, v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->completeWrite(I)V

    :cond_6
    move v1, p2

    goto :goto_4

    :cond_7
    const-string p1, "Position shouldn\'t been moved backwards."

    .line 14
    new-instance p2, Ljava/lang/IllegalStateException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    :cond_8
    const-string p1, "Buffer limit shouldn\'t be modified."

    .line 15
    new-instance p2, Ljava/lang/IllegalStateException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_9
    :goto_3
    move v0, v1

    .line 16
    :goto_4
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 17
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move p1, v1

    move v1, v0

    goto :goto_6

    :catchall_0
    move-exception p1

    .line 18
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 19
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_a
    :goto_5
    move p1, v1

    :goto_6
    if-nez v1, :cond_b

    const/4 p1, -0x1

    :cond_b
    return p1

    .line 20
    :cond_c
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Min("

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ") shouldn\'t be greater than 4088"

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    new-instance p2, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 21
    :cond_d
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "min should be positive"

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public readAvailable(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public readAvailable(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public readAvailable([BIILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;[BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic readAvailableSuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 13
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 14
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 15
    :cond_2
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/core/IoBuffer;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 16
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->L$1:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->label:I

    invoke-virtual {p0, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_4

    return-object v1

    :cond_4
    move-object v2, p0

    :goto_1
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p2

    if-nez p2, :cond_5

    const/4 p1, -0x1

    .line 17
    invoke-static {p1}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    return-object p1

    :cond_5
    const/4 p2, 0x0

    .line 18
    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$3;->label:I

    invoke-virtual {v2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailable(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_6

    return-object v1

    :cond_6
    :goto_2
    return-object p2
.end method

.method public final synthetic readAvailableSuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 7
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 8
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 9
    :cond_2
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->L$1:Ljava/lang/Object;

    check-cast p1, Ljava/nio/ByteBuffer;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 10
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->L$1:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->label:I

    invoke-virtual {p0, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_4

    return-object v1

    :cond_4
    move-object v2, p0

    :goto_1
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p2

    if-nez p2, :cond_5

    const/4 p1, -0x1

    .line 11
    invoke-static {p1}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    return-object p1

    :cond_5
    const/4 p2, 0x0

    .line 12
    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$2;->label:I

    invoke-virtual {v2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailable(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_6

    return-object v1

    :cond_6
    :goto_2
    return-object p2
.end method

.method public final synthetic readAvailableSuspend([BIILn/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    iget p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->I$1:I

    iget p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->I$0:I

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p1, [B

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_3
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->L$1:Ljava/lang/Object;

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->I$0:I

    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->I$1:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->label:I

    invoke-virtual {p0, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_4

    return-object v1

    :cond_4
    move-object v2, p0

    :goto_1
    check-cast p4, Ljava/lang/Boolean;

    invoke-virtual {p4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p4

    if-nez p4, :cond_5

    const/4 p1, -0x1

    .line 5
    invoke-static {p1}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    return-object p1

    :cond_5
    const/4 p4, 0x0

    .line 6
    iput-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readAvailableSuspend$1;->label:I

    invoke-virtual {v2, p1, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readAvailable([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_6

    return-object v1

    :cond_6
    :goto_2
    return-object p4
.end method

.method public final synthetic readBlockSuspend(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p3, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p3

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;

    invoke-direct {v0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->I$0:I

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p2, Ln/l0/c/l;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_3
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-static {p1, v4}, Ln/p0/k;->c(II)I

    move-result p3

    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->L$1:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->I$0:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->label:I

    invoke-virtual {p0, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v1, :cond_4

    return-object v1

    :cond_4
    move-object v2, p0

    :goto_1
    check-cast p3, Ljava/lang/Boolean;

    invoke-virtual {p3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p3

    if-nez p3, :cond_6

    if-gtz p1, :cond_5

    .line 5
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 6
    :cond_5
    new-instance p2, Ljava/io/EOFException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Got EOF but at least "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " bytes were expected"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/io/EOFException;-><init>(Ljava/lang/String;)V

    throw p2

    :cond_6
    const/4 p3, 0x0

    .line 7
    iput-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readBlockSuspend$1;->label:I

    invoke-virtual {v2, p1, p2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->read(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_7

    return-object v1

    .line 8
    :cond_7
    :goto_2
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public final readBoolean(Ln/i0/d;)Ljava/lang/Object;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p1, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readBoolean$1;->label:I

    invoke-virtual {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readByte(Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_3

    return-object v1

    :cond_3
    :goto_1
    check-cast p1, Ljava/lang/Number;

    invoke-virtual {p1}, Ljava/lang/Number;->byteValue()B

    move-result p1

    const/4 v0, 0x0

    int-to-byte v1, v0

    if-eq p1, v1, :cond_4

    goto :goto_2

    :cond_4
    move v3, v0

    :goto_2
    invoke-static {v3}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1
.end method

.method public final readByte(Ln/i0/d;)Ljava/lang/Object;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Byte;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p1, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->I$0:I

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_5

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v4, p0

    move v2, v3

    :goto_1
    const/4 p1, 0x0

    .line 4
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_6

    .line 5
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v7

    iget-object v7, v7, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v8, v7, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v8, :cond_3

    .line 7
    :goto_2
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 9
    :cond_3
    :try_start_1
    invoke-virtual {v7, v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v8

    if-nez v8, :cond_4

    goto :goto_3

    .line 10
    :cond_4
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p1

    if-ge p1, v2, :cond_5

    invoke-static {v4, v5, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    .line 11
    :cond_5
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->get()B

    move-result p1

    invoke-static {p1}, Ln/i0/j/a/b;->b(B)Ljava/lang/Byte;

    move-result-object p1

    .line 12
    invoke-static {v4, v5, v7, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move v6, v3

    .line 13
    :goto_3
    invoke-static {v6}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 15
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_6
    :goto_4
    if-eqz v6, :cond_8

    if-nez p1, :cond_7

    const-string v0, "result"

    .line 16
    invoke-static {v0}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    :cond_7
    return-object p1

    .line 17
    :cond_8
    iput-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->L$0:Ljava/lang/Object;

    iput v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readByte$1;->label:I

    invoke-virtual {v4, v2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_9

    return-object v1

    :cond_9
    :goto_5
    check-cast p1, Ljava/lang/Boolean;

    invoke-virtual {p1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    if-eqz p1, :cond_a

    goto :goto_1

    .line 18
    :cond_a
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "EOF while "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " bytes expected"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final readDouble(Ln/i0/d;)Ljava/lang/Object;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Double;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p1, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->I$0:I

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_5

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    const/16 p1, 0x8

    move-object v4, p0

    move v2, p1

    :goto_1
    const/4 p1, 0x0

    .line 4
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_6

    .line 5
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v7

    iget-object v7, v7, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v8, v7, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v8, :cond_3

    .line 7
    :goto_2
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 9
    :cond_3
    :try_start_1
    invoke-virtual {v7, v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v8

    if-nez v8, :cond_4

    goto :goto_3

    .line 10
    :cond_4
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p1

    if-ge p1, v2, :cond_5

    invoke-static {v4, v5, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    .line 11
    :cond_5
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->getLong()J

    move-result-wide v8

    invoke-static {v8, v9}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object p1

    .line 12
    invoke-static {v4, v5, v7, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move v6, v3

    .line 13
    :goto_3
    invoke-static {v6}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 15
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_6
    :goto_4
    if-eqz v6, :cond_8

    if-nez p1, :cond_7

    const-string v0, "result"

    .line 16
    invoke-static {v0}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    .line 17
    :cond_7
    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v0

    .line 18
    invoke-static {v0, v1}, Ljava/lang/Double;->longBitsToDouble(J)D

    move-result-wide v0

    invoke-static {v0, v1}, Ln/i0/j/a/b;->d(D)Ljava/lang/Double;

    move-result-object p1

    return-object p1

    .line 19
    :cond_8
    iput-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->L$0:Ljava/lang/Object;

    iput v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readDouble$1;->label:I

    invoke-virtual {v4, v2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_9

    return-object v1

    :cond_9
    :goto_5
    check-cast p1, Ljava/lang/Boolean;

    invoke-virtual {p1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    if-eqz p1, :cond_a

    goto :goto_1

    .line 20
    :cond_a
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "EOF while "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " bytes expected"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final readFloat(Ln/i0/d;)Ljava/lang/Object;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Float;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p1, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->I$0:I

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_5

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 p1, 0x4

    move-object v4, p0

    move v2, p1

    :goto_1
    const/4 p1, 0x0

    .line 4
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_6

    .line 5
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v7

    iget-object v7, v7, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v8, v7, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v8, :cond_3

    .line 7
    :goto_2
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 9
    :cond_3
    :try_start_1
    invoke-virtual {v7, v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v8

    if-nez v8, :cond_4

    goto :goto_3

    .line 10
    :cond_4
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p1

    if-ge p1, v2, :cond_5

    invoke-static {v4, v5, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    .line 11
    :cond_5
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->getInt()I

    move-result p1

    invoke-static {p1}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    .line 12
    invoke-static {v4, v5, v7, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move v6, v3

    .line 13
    :goto_3
    invoke-static {v6}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 15
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_6
    :goto_4
    if-eqz v6, :cond_8

    if-nez p1, :cond_7

    const-string v0, "result"

    .line 16
    invoke-static {v0}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    .line 17
    :cond_7
    invoke-virtual {p1}, Ljava/lang/Number;->intValue()I

    move-result p1

    .line 18
    invoke-static {p1}, Ljava/lang/Float;->intBitsToFloat(I)F

    move-result p1

    invoke-static {p1}, Ln/i0/j/a/b;->e(F)Ljava/lang/Float;

    move-result-object p1

    return-object p1

    .line 19
    :cond_8
    iput-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->L$0:Ljava/lang/Object;

    iput v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readFloat$1;->label:I

    invoke-virtual {v4, v2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_9

    return-object v1

    :cond_9
    :goto_5
    check-cast p1, Ljava/lang/Boolean;

    invoke-virtual {p1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    if-eqz p1, :cond_a

    goto :goto_1

    .line 20
    :cond_a
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "EOF while "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " bytes expected"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public readFully(Lio/ktor/utils/io/core/IoBuffer;ILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "I",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final readFully(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 7
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    move-result v0

    .line 8
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v1

    if-nez v1, :cond_0

    invoke-static {v0}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    return-object p1

    .line 9
    :cond_0
    invoke-virtual {p0, p1, v0, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readFullySuspend(Ljava/nio/ByteBuffer;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final readFully([BIILn/i0/d;)Ljava/lang/Object;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-direct {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible([BII)I

    move-result p4

    if-ge p4, p3, :cond_3

    add-int/2addr p2, p4

    sub-int/2addr p3, p4

    .line 5
    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readFully$1;->label:I

    invoke-virtual {p0, p1, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readFullySuspend([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_3

    return-object v1

    .line 6
    :cond_3
    :goto_1
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public final synthetic readFullySuspend(Lio/ktor/utils/io/core/IoBuffer;ILn/i0/d;)Ljava/lang/Object;
    .locals 16
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "I",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    move-object/from16 v0, p3

    instance-of v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;

    if-eqz v1, :cond_0

    move-object v1, v0

    check-cast v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;

    iget v2, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->label:I

    const/high16 v3, -0x80000000

    and-int v4, v2, v3

    if-eqz v4, :cond_0

    sub-int/2addr v2, v3

    iput v2, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->label:I

    move-object/from16 v2, p0

    goto :goto_0

    :cond_0
    new-instance v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;

    move-object/from16 v2, p0

    invoke-direct {v1, v2, v0}, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object v0, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v3

    .line 9
    iget v4, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->label:I

    const/4 v5, 0x0

    const/4 v6, 0x1

    if-eqz v4, :cond_2

    if-ne v4, v6, :cond_1

    iget v4, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->I$1:I

    iget v7, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->I$0:I

    iget-object v8, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->L$1:Ljava/lang/Object;

    check-cast v8, Lio/ktor/utils/io/core/IoBuffer;

    iget-object v9, v1, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->L$0:Ljava/lang/Object;

    check-cast v9, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {v0}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v14, v3

    move v13, v4

    move v3, v7

    move-object v15, v9

    move-object v4, v1

    move-object v1, v8

    goto :goto_3

    .line 10
    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11
    :cond_2
    invoke-static {v0}, Ln/o;->b(Ljava/lang/Object;)V

    move-object/from16 v0, p1

    move-object v9, v2

    move-object v4, v3

    move v7, v5

    move-object v3, v1

    move/from16 v1, p2

    .line 12
    :goto_1
    invoke-virtual {v0}, Lio/ktor/utils/io/core/Buffer;->getLimit()I

    move-result v8

    invoke-virtual {v0}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v10

    if-le v8, v10, :cond_3

    move v8, v6

    goto :goto_2

    :cond_3
    move v8, v5

    :goto_2
    if-eqz v8, :cond_6

    if-ge v7, v1, :cond_6

    .line 13
    iput-object v9, v3, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->L$0:Ljava/lang/Object;

    iput-object v0, v3, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->L$1:Ljava/lang/Object;

    iput v1, v3, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->I$0:I

    iput v7, v3, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->I$1:I

    iput v6, v3, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$2;->label:I

    invoke-virtual {v9, v6, v3}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v8

    if-ne v8, v4, :cond_4

    return-object v4

    :cond_4
    move-object v14, v4

    move v13, v7

    move-object v15, v9

    move-object v4, v3

    move v3, v1

    move-object v1, v0

    move-object v0, v8

    :goto_3
    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-eqz v0, :cond_5

    const/4 v9, 0x0

    sub-int v10, v3, v13

    const/4 v11, 0x2

    const/4 v12, 0x0

    move-object v7, v15

    move-object v8, v1

    .line 14
    invoke-static/range {v7 .. v12}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible$default(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;IIILjava/lang/Object;)I

    move-result v0

    add-int v7, v13, v0

    move-object v0, v1

    move v1, v3

    move-object v3, v4

    move-object v4, v14

    move-object v9, v15

    goto :goto_1

    .line 15
    :cond_5
    new-instance v0, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unexpected EOF: expected "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sub-int/2addr v3, v13

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " more bytes"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16
    :cond_6
    sget-object v0, Ln/c0;->a:Ln/c0;

    return-object v0
.end method

.method public final synthetic readFullySuspend(Ljava/nio/ByteBuffer;ILn/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p3, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p3

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;

    invoke-direct {v0, p0, p3}, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->I$0:I

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->L$1:Ljava/lang/Object;

    check-cast p2, Ljava/nio/ByteBuffer;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p3}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    .line 4
    :goto_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result p3

    if-eqz p3, :cond_5

    .line 5
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->L$1:Ljava/lang/Object;

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$1;->label:I

    invoke-virtual {v2, v3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p3

    if-ne p3, v1, :cond_3

    return-object v1

    :cond_3
    move v4, p2

    move-object p2, p1

    move p1, v4

    :goto_2
    check-cast p3, Ljava/lang/Boolean;

    invoke-virtual {p3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p3

    if-eqz p3, :cond_4

    .line 6
    invoke-direct {v2, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    move-result p3

    add-int/2addr p1, p3

    move-object v4, p2

    move p2, p1

    move-object p1, v4

    goto :goto_1

    .line 7
    :cond_4
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unexpected EOF: expected "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p2

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " more bytes"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 8
    :cond_5
    invoke-static {p2}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic readFullySuspend([BIILn/i0/d;)Ljava/lang/Object;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 17
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->I$2:I

    iget p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->I$1:I

    iget p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->I$0:I

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->L$1:Ljava/lang/Object;

    check-cast v2, [B

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 18
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 19
    :cond_2
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 p4, 0x0

    move-object v4, p0

    .line 20
    :goto_1
    iput-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->L$1:Ljava/lang/Object;

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->I$0:I

    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->I$1:I

    iput p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->I$2:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readFullySuspend$3;->label:I

    invoke-virtual {v4, v3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v2

    if-ne v2, v1, :cond_3

    return-object v1

    :cond_3
    move-object v5, v2

    move-object v2, p1

    move p1, p4

    move-object p4, v5

    move v6, p3

    move p3, p2

    move p2, v6

    :goto_2
    check-cast p4, Ljava/lang/Boolean;

    invoke-virtual {p4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p4

    if-eqz p4, :cond_5

    add-int/2addr p3, p1

    sub-int p1, p2, p1

    .line 21
    invoke-direct {v4, v2, p3, p1}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible([BII)I

    move-result p4

    if-lt p4, p1, :cond_4

    .line 22
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    :cond_4
    move p2, p3

    move p3, p1

    move-object p1, v2

    goto :goto_1

    .line 23
    :cond_5
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unexpected EOF: expected "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " more bytes"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final readInt(Ln/i0/d;)Ljava/lang/Object;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p1, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->I$0:I

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_5

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 p1, 0x4

    move-object v4, p0

    move v2, p1

    :goto_1
    const/4 p1, 0x0

    .line 4
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_6

    .line 5
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v7

    iget-object v7, v7, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v8, v7, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v8, :cond_3

    .line 7
    :goto_2
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 9
    :cond_3
    :try_start_1
    invoke-virtual {v7, v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v8

    if-nez v8, :cond_4

    goto :goto_3

    .line 10
    :cond_4
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p1

    if-ge p1, v2, :cond_5

    invoke-static {v4, v5, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    .line 11
    :cond_5
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->getInt()I

    move-result p1

    invoke-static {p1}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    .line 12
    invoke-static {v4, v5, v7, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move v6, v3

    .line 13
    :goto_3
    invoke-static {v6}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 15
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_6
    :goto_4
    if-eqz v6, :cond_8

    if-nez p1, :cond_7

    const-string v0, "result"

    .line 16
    invoke-static {v0}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    :cond_7
    return-object p1

    .line 17
    :cond_8
    iput-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->L$0:Ljava/lang/Object;

    iput v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readInt$1;->label:I

    invoke-virtual {v4, v2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_9

    return-object v1

    :cond_9
    :goto_5
    check-cast p1, Ljava/lang/Boolean;

    invoke-virtual {p1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    if-eqz p1, :cond_a

    goto :goto_1

    .line 18
    :cond_a
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "EOF while "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " bytes expected"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final readLong(Ln/i0/d;)Ljava/lang/Object;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Long;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p1, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->I$0:I

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_5

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    const/16 p1, 0x8

    move-object v4, p0

    move v2, p1

    :goto_1
    const/4 p1, 0x0

    .line 4
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_6

    .line 5
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v7

    iget-object v7, v7, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v8, v7, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v8, :cond_3

    .line 7
    :goto_2
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 9
    :cond_3
    :try_start_1
    invoke-virtual {v7, v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v8

    if-nez v8, :cond_4

    goto :goto_3

    .line 10
    :cond_4
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p1

    if-ge p1, v2, :cond_5

    invoke-static {v4, v5, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    .line 11
    :cond_5
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->getLong()J

    move-result-wide v8

    invoke-static {v8, v9}, Ln/i0/j/a/b;->g(J)Ljava/lang/Long;

    move-result-object p1

    .line 12
    invoke-static {v4, v5, v7, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move v6, v3

    .line 13
    :goto_3
    invoke-static {v6}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 15
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_6
    :goto_4
    if-eqz v6, :cond_8

    if-nez p1, :cond_7

    const-string v0, "result"

    .line 16
    invoke-static {v0}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    :cond_7
    return-object p1

    .line 17
    :cond_8
    iput-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->L$0:Ljava/lang/Object;

    iput v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readLong$1;->label:I

    invoke-virtual {v4, v2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_9

    return-object v1

    :cond_9
    :goto_5
    check-cast p1, Ljava/lang/Boolean;

    invoke-virtual {p1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    if-eqz p1, :cond_a

    goto :goto_1

    .line 18
    :cond_a
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "EOF while "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " bytes expected"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public readPacket(IILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II",
            "Ln/i0/d<",
            "-",
            "Lio/ktor/utils/io/core/ByteReadPacket;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readPacket$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;IILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic readPacketSuspend(ILio/ktor/utils/io/core/BytePacketBuilder;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Lio/ktor/utils/io/core/BytePacketBuilder;",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Lio/ktor/utils/io/core/ByteReadPacket;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->I$0:I

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->L$2:Ljava/lang/Object;

    check-cast p2, Ljava/nio/ByteBuffer;

    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p3, Lio/ktor/utils/io/core/BytePacketBuilder;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_0
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v4, p3

    move-object p3, p2

    move-object p2, v4

    goto :goto_2

    :catchall_0
    move-exception p1

    goto :goto_3

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    :goto_1
    if-lez p1, :cond_5

    .line 4
    :try_start_1
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->clear()Ljava/nio/Buffer;

    .line 5
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p4

    if-le p4, p1, :cond_3

    .line 6
    invoke-virtual {p3, p1}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    .line 7
    :cond_3
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->L$1:Ljava/lang/Object;

    iput-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->L$2:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readPacketSuspend$1;->label:I

    invoke-virtual {v2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readFully(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_4

    return-object v1

    :cond_4
    :goto_2
    check-cast p4, Ljava/lang/Number;

    invoke-virtual {p4}, Ljava/lang/Number;->intValue()I

    move-result p4

    .line 8
    invoke-virtual {p3}, Ljava/nio/ByteBuffer;->flip()Ljava/nio/Buffer;

    .line 9
    invoke-static {p2, p3}, Lio/ktor/utils/io/core/OutputArraysJVMKt;->writeFully(Lio/ktor/utils/io/core/Output;Ljava/nio/ByteBuffer;)V

    sub-int/2addr p1, p4

    goto :goto_1

    .line 10
    :cond_5
    invoke-virtual {p2}, Lio/ktor/utils/io/core/BytePacketBuilder;->build()Lio/ktor/utils/io/core/ByteReadPacket;

    move-result-object p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 11
    invoke-static {}, Lio/ktor/utils/io/internal/ObjectPoolKt;->getBufferPool()Lio/ktor/utils/io/pool/ObjectPool;

    move-result-object p2

    invoke-interface {p2, p3}, Lio/ktor/utils/io/pool/ObjectPool;->recycle(Ljava/lang/Object;)V

    return-object p1

    :catchall_1
    move-exception p1

    move-object v4, p3

    move-object p3, p2

    move-object p2, v4

    .line 12
    :goto_3
    :try_start_2
    invoke-virtual {p3}, Lio/ktor/utils/io/core/AbstractOutput;->release()V

    .line 13
    throw p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :catchall_2
    move-exception p1

    .line 14
    invoke-static {}, Lio/ktor/utils/io/internal/ObjectPoolKt;->getBufferPool()Lio/ktor/utils/io/pool/ObjectPool;

    move-result-object p3

    invoke-interface {p3, p2}, Lio/ktor/utils/io/pool/ObjectPool;->recycle(Ljava/lang/Object;)V

    throw p1
.end method

.method public readRemaining(JILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(JI",
            "Ln/i0/d<",
            "-",
            "Lio/ktor/utils/io/core/ByteReadPacket;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->readRemaining$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;JILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic readRemainingSuspend(JILn/i0/d;)Ljava/lang/Object;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(JI",
            "Ln/i0/d<",
            "-",
            "Lio/ktor/utils/io/core/ByteReadPacket;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$4:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/core/internal/ChunkBuffer;

    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$3:Ljava/lang/Object;

    check-cast p2, Lio/ktor/utils/io/core/Output;

    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$2:Ljava/lang/Object;

    check-cast p3, Ln/l0/d/f0;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$1:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/core/BytePacketBuilder;

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_0
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object p4, v4

    goto :goto_2

    :catchall_0
    move-exception p3

    goto/16 :goto_4

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    invoke-static {p3}, Lio/ktor/utils/io/core/PacketJVMKt;->BytePacketBuilder(I)Lio/ktor/utils/io/core/BytePacketBuilder;

    move-result-object p3

    .line 5
    :try_start_1
    new-instance p4, Ln/l0/d/f0;

    invoke-direct {p4}, Ln/l0/d/f0;-><init>()V

    iput-wide p1, p4, Ln/l0/d/f0;->a:J

    const/4 p1, 0x0

    .line 6
    invoke-static {p3, v3, p1}, Lio/ktor/utils/io/core/internal/UnsafeKt;->prepareWriteHead(Lio/ktor/utils/io/core/Output;ILio/ktor/utils/io/core/internal/ChunkBuffer;)Lio/ktor/utils/io/core/internal/ChunkBuffer;

    move-result-object p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    move-object p2, p3

    move-object v2, p2

    move-object p3, p4

    move-object p4, p0

    .line 7
    :goto_1
    :try_start_2
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getLimit()I

    move-result v4

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result v5

    sub-int/2addr v4, v5

    int-to-long v4, v4

    .line 8
    iget-wide v6, p3, Ln/l0/d/f0;->a:J

    cmp-long v4, v4, v6

    if-lez v4, :cond_3

    long-to-int v4, v6

    .line 9
    invoke-virtual {p1, v4}, Lio/ktor/utils/io/core/Buffer;->resetForWrite(I)V

    :cond_3
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x6

    const/4 v9, 0x0

    move-object v4, p4

    move-object v5, p1

    .line 10
    invoke-static/range {v4 .. v9}, Lio/ktor/utils/io/ByteBufferChannel;->readAsMuchAsPossible$default(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;IIILjava/lang/Object;)I

    move-result v4

    .line 11
    iget-wide v5, p3, Ln/l0/d/f0;->a:J

    int-to-long v7, v4

    sub-long/2addr v5, v7

    iput-wide v5, p3, Ln/l0/d/f0;->a:J

    .line 12
    iput-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$0:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$1:Ljava/lang/Object;

    iput-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$2:Ljava/lang/Object;

    iput-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$3:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->L$4:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readRemainingSuspend$1;->label:I

    invoke-virtual {p4, v3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v4

    if-ne v4, v1, :cond_4

    return-object v1

    .line 13
    :cond_4
    :goto_2
    iget-wide v4, p3, Ln/l0/d/f0;->a:J

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-lez v4, :cond_5

    invoke-virtual {p4}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result v4

    if-nez v4, :cond_5

    move v4, v3

    goto :goto_3

    :cond_5
    const/4 v4, 0x0

    :goto_3
    invoke-static {v4}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-nez v4, :cond_6

    .line 14
    :try_start_3
    invoke-static {p2, p1}, Lio/ktor/utils/io/core/internal/UnsafeKt;->afterHeadWrite(Lio/ktor/utils/io/core/Output;Lio/ktor/utils/io/core/internal/ChunkBuffer;)V

    .line 15
    invoke-virtual {v2}, Lio/ktor/utils/io/core/BytePacketBuilder;->build()Lio/ktor/utils/io/core/ByteReadPacket;

    move-result-object p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    return-object p1

    .line 16
    :cond_6
    :try_start_4
    invoke-static {p2, v3, p1}, Lio/ktor/utils/io/core/internal/UnsafeKt;->prepareWriteHead(Lio/ktor/utils/io/core/Output;ILio/ktor/utils/io/core/internal/ChunkBuffer;)Lio/ktor/utils/io/core/internal/ChunkBuffer;

    move-result-object p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_1

    .line 17
    :goto_4
    :try_start_5
    invoke-static {p2, p1}, Lio/ktor/utils/io/core/internal/UnsafeKt;->afterHeadWrite(Lio/ktor/utils/io/core/Output;Lio/ktor/utils/io/core/internal/ChunkBuffer;)V

    throw p3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception p1

    move-object p3, v2

    goto :goto_5

    :catchall_2
    move-exception p1

    .line 18
    :goto_5
    invoke-virtual {p3}, Lio/ktor/utils/io/core/AbstractOutput;->release()V

    .line 19
    throw p1
.end method

.method public readSession(Ln/l0/c/l;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/l<",
            "-",
            "Lio/ktor/utils/io/ReadSession;",
            "Ln/c0;",
            ">;)V"
        }
    .end annotation

    .annotation runtime Lio/ktor/utils/io/core/ExperimentalIoApi;
    .end annotation

    const-string v0, "consumer"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readSession$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readSession$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/l;)V

    invoke-virtual {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->lookAhead(Ln/l0/c/l;)Ljava/lang/Object;

    return-void
.end method

.method public final readShort(Ln/i0/d;)Ljava/lang/Object;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Short;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p1, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;

    invoke-direct {v0, p0, p1}, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->I$0:I

    iget-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->L$0:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_5

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p1}, Ln/o;->b(Ljava/lang/Object;)V

    const/4 p1, 0x2

    move-object v4, p0

    move v2, p1

    :goto_1
    const/4 p1, 0x0

    .line 4
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$setupStateForRead(Lio/ktor/utils/io/ByteBufferChannel;)Ljava/nio/ByteBuffer;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_6

    .line 5
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v7

    iget-object v7, v7, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 6
    :try_start_0
    iget v8, v7, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v8, :cond_3

    .line 7
    :goto_2
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 8
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_4

    .line 9
    :cond_3
    :try_start_1
    invoke-virtual {v7, v2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryReadExact(I)Z

    move-result v8

    if-nez v8, :cond_4

    goto :goto_3

    .line 10
    :cond_4
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p1

    if-ge p1, v2, :cond_5

    invoke-static {v4, v5, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$rollBytes(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;I)V

    .line 11
    :cond_5
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->getShort()S

    move-result p1

    invoke-static {p1}, Ln/i0/j/a/b;->h(S)Ljava/lang/Short;

    move-result-object p1

    .line 12
    invoke-static {v4, v5, v7, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$bytesRead(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    move v6, v3

    .line 13
    :goto_3
    invoke-static {v6}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 14
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$restoreStateAfterRead(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 15
    invoke-virtual {v4}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_6
    :goto_4
    if-eqz v6, :cond_8

    if-nez p1, :cond_7

    const-string v0, "result"

    .line 16
    invoke-static {v0}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    :cond_7
    return-object p1

    .line 17
    :cond_8
    iput-object v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->L$0:Ljava/lang/Object;

    iput v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$readShort$1;->label:I

    invoke-virtual {v4, v2, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_9

    return-object v1

    :cond_9
    :goto_5
    check-cast p1, Ljava/lang/Boolean;

    invoke-virtual {p1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p1

    if-eqz p1, :cond_a

    goto :goto_1

    .line 18
    :cond_a
    new-instance p1, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "EOF while "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " bytes expected"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lkotlinx/coroutines/channels/ClosedReceiveChannelException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final synthetic readSuspend(ILn/i0/d;)Ljava/lang/Object;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    iget-object v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 2
    iget v0, v0, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    const/4 v1, 0x1

    if-lt v0, p1, :cond_0

    .line 3
    invoke-static {v1}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1

    .line 4
    :cond_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 5
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object p2

    if-nez p2, :cond_3

    .line 6
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    iget-object p2, p2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 7
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 8
    iget p2, p2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-lt p2, p1, :cond_1

    goto :goto_0

    :cond_1
    const/4 v1, 0x0

    .line 9
    :goto_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getReadOp()Ln/i0/d;

    move-result-object p1

    if-nez p1, :cond_2

    .line 10
    invoke-static {v1}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1

    .line 11
    :cond_2
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Read operation is already in progress"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 12
    :cond_3
    invoke-static {p2}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1

    :cond_4
    if-ne p1, v1, :cond_5

    .line 13
    invoke-virtual {p0, v1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendImpl(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1

    .line 14
    :cond_5
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendLoop(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic readSuspendImpl(ILn/i0/d;)Ljava/lang/Object;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 2
    iget-object v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    const/4 v2, 0x1

    if-ge v1, p1, :cond_1

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v1

    if-eqz v1, :cond_0

    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;)Ln/i0/d;

    move-result-object v1

    if-eqz v1, :cond_0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-eq v0, v1, :cond_1

    .line 4
    instance-of v0, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-nez v0, :cond_1

    :cond_0
    move v0, v2

    goto :goto_0

    :cond_1
    const/4 v0, 0x0

    :goto_0
    if-nez v0, :cond_2

    .line 5
    invoke-static {v2}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1

    .line 6
    :cond_2
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    .line 7
    invoke-direct {p0, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->suspensionForSize(ILn/i0/d;)Ljava/lang/Object;

    .line 8
    invoke-static {p2}, Ln/i0/i/b;->c(Ln/i0/d;)Ln/i0/d;

    move-result-object p1

    invoke-virtual {v0, p1}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;->completeSuspendBlock(Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    .line 9
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v0

    if-ne p1, v0, :cond_3

    invoke-static {p2}, Ln/i0/j/a/h;->c(Ln/i0/d;)V

    :cond_3
    return-object p1
.end method

.method public final synthetic readSuspendLoop(ILn/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->label:I

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v4, :cond_1

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->I$0:I

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    .line 4
    :cond_3
    invoke-direct {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    iget-object p2, p2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 5
    iget p2, p2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-lt p2, p1, :cond_4

    .line 6
    invoke-static {v4}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1

    .line 7
    :cond_4
    invoke-direct {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p2

    if-eqz p2, :cond_8

    .line 8
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object v0

    if-nez v0, :cond_7

    .line 9
    invoke-direct {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object p2

    iget-object p2, p2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 10
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/RingBufferCapacity;->flush()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 11
    iget p2, p2, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    if-lt p2, p1, :cond_5

    move v3, v4

    .line 12
    :cond_5
    invoke-direct {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getReadOp()Ln/i0/d;

    move-result-object p1

    if-nez p1, :cond_6

    .line 13
    invoke-static {v3}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1

    .line 14
    :cond_6
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Read operation is already in progress"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 15
    :cond_7
    invoke-virtual {p2}, Lio/ktor/utils/io/internal/ClosedElement;->getCause()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1

    .line 16
    :cond_8
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->L$0:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->I$0:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$readSuspendLoop$1;->label:I

    invoke-virtual {v2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendImpl(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_9

    return-object v1

    :cond_9
    :goto_1
    check-cast p2, Ljava/lang/Boolean;

    invoke-virtual {p2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result p2

    if-nez p2, :cond_3

    invoke-static {v3}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object p1

    return-object p1
.end method

.method public readSuspendableSession(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/p<",
            "-",
            "Lio/ktor/utils/io/SuspendableReadSession;",
            "-",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;+",
            "Ljava/lang/Object;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .annotation runtime Lio/ktor/utils/io/core/ExperimentalIoApi;
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readSuspendableSession$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public readUTF8Line(ILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/String;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->readUTF8Line$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public readUTF8LineTo(Ljava/lang/Appendable;ILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<A::",
            "Ljava/lang/Appendable;",
            ">(TA;I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->readUTF8LineTo$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/lang/Appendable;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic readUTF8LineToAscii(Ljava/lang/Appendable;ILn/i0/d;)Ljava/lang/Object;
    .locals 14
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Appendable;",
            "I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    const/4 v2, 0x0

    if-ne v0, v1, :cond_1

    .line 2
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosedCause()Ljava/lang/Throwable;

    move-result-object v0

    if-nez v0, :cond_0

    .line 3
    invoke-static {v2}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0

    .line 4
    :cond_0
    throw v0

    .line 5
    :cond_1
    new-instance v0, Ln/l0/d/e0;

    invoke-direct {v0}, Ln/l0/d/e0;-><init>()V

    iput v2, v0, Ln/l0/d/e0;->a:I

    const/16 v1, 0x2000

    new-array v1, v1, [C

    .line 6
    invoke-static {v1}, Ljava/nio/CharBuffer;->wrap([C)Ljava/nio/CharBuffer;

    move-result-object v11

    .line 7
    new-instance v12, Ln/l0/d/c0;

    invoke-direct {v12}, Ln/l0/d/c0;-><init>()V

    iput-boolean v2, v12, Ln/l0/d/c0;->a:Z

    .line 8
    new-instance v13, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToAscii$2;

    move-object v3, v13

    move-object v4, p0

    move-object v5, v12

    move-object v6, p1

    move-object v7, v1

    move-object v8, v11

    move-object v9, v0

    move/from16 v10, p2

    invoke-direct/range {v3 .. v10}, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToAscii$2;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/d/c0;Ljava/lang/Appendable;[CLjava/nio/CharBuffer;Ln/l0/d/e0;I)V

    move-object v10, p0

    invoke-virtual {p0, v13}, Lio/ktor/utils/io/ByteBufferChannel;->lookAhead(Ln/l0/c/l;)Ljava/lang/Object;

    .line 9
    iget-boolean v3, v12, Ln/l0/d/c0;->a:Z

    if-eqz v3, :cond_2

    const/4 v0, 0x1

    invoke-static {v0}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0

    .line 10
    :cond_2
    iget v3, v0, Ln/l0/d/e0;->a:I

    if-nez v3, :cond_3

    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->isClosedForRead()Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-static {v2}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0

    .line 11
    :cond_3
    iget v2, v0, Ln/l0/d/e0;->a:I

    sub-int v5, p2, v2

    const-string v2, "buffer"

    invoke-static {v11, v2}, Ln/l0/d/r;->d(Ljava/lang/Object;Ljava/lang/String;)V

    iget v8, v0, Ln/l0/d/e0;->a:I

    move-object v3, p0

    move-object v4, p1

    move-object v6, v1

    move-object v7, v11

    move-object/from16 v9, p3

    invoke-virtual/range {v3 .. v9}, Lio/ktor/utils/io/ByteBufferChannel;->readUTF8LineToUtf8Suspend(Ljava/lang/Appendable;I[CLjava/nio/CharBuffer;ILn/i0/d;)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public final synthetic readUTF8LineToUtf8Suspend(Ljava/lang/Appendable;I[CLjava/nio/CharBuffer;ILn/i0/d;)Ljava/lang/Object;
    .locals 16
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Appendable;",
            "I[C",
            "Ljava/nio/CharBuffer;",
            "I",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Boolean;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    move-object/from16 v10, p0

    move-object/from16 v0, p6

    instance-of v1, v0, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;

    if-eqz v1, :cond_0

    move-object v1, v0

    check-cast v1, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;

    iget v2, v1, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;->label:I

    const/high16 v3, -0x80000000

    and-int v4, v2, v3

    if-eqz v4, :cond_0

    sub-int/2addr v2, v3

    iput v2, v1, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v1, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;

    invoke-direct {v1, v10, v0}, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    move-object v11, v1

    iget-object v0, v11, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v12

    .line 1
    iget v1, v11, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;->label:I

    const/4 v13, 0x1

    if-eqz v1, :cond_2

    if-ne v1, v13, :cond_1

    iget-object v1, v11, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;->L$0:Ljava/lang/Object;

    check-cast v1, Ln/l0/d/c0;

    invoke-static {v0}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 2
    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3
    :cond_2
    invoke-static {v0}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    new-instance v5, Ln/l0/d/e0;

    invoke-direct {v5}, Ln/l0/d/e0;-><init>()V

    const/4 v0, 0x0

    iput v0, v5, Ln/l0/d/e0;->a:I

    .line 5
    new-instance v14, Ln/l0/d/c0;

    invoke-direct {v14}, Ln/l0/d/c0;-><init>()V

    iput-boolean v13, v14, Ln/l0/d/c0;->a:Z

    .line 6
    new-instance v15, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$2;

    const/4 v9, 0x0

    move-object v0, v15

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move/from16 v6, p2

    move/from16 v7, p5

    move-object v8, v14

    invoke-direct/range {v0 .. v9}, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$2;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ljava/lang/Appendable;[CLjava/nio/CharBuffer;Ln/l0/d/e0;IILn/l0/d/c0;Ln/i0/d;)V

    iput-object v14, v11, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;->L$0:Ljava/lang/Object;

    iput v13, v11, Lio/ktor/utils/io/ByteBufferChannel$readUTF8LineToUtf8Suspend$1;->label:I

    invoke-virtual {v10, v15, v11}, Lio/ktor/utils/io/ByteBufferChannel;->lookAheadSuspend(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;

    move-result-object v0

    if-ne v0, v12, :cond_3

    return-object v12

    :cond_3
    move-object v1, v14

    .line 7
    :goto_1
    iget-boolean v0, v1, Ln/l0/d/c0;->a:Z

    invoke-static {v0}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0
.end method

.method public request(II)Ljava/nio/ByteBuffer;
    .locals 5

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v0

    .line 2
    iget-object v1, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 3
    iget v1, v1, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForRead$internal:I

    .line 4
    iget v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->readPosition:I

    add-int v3, p2, p1

    const/4 v4, 0x0

    if-ge v1, v3, :cond_0

    return-object v4

    .line 5
    :cond_0
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getIdle()Z

    move-result v3

    if-nez v3, :cond_3

    instance-of v3, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$Reading;

    if-nez v3, :cond_1

    instance-of v3, v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$ReadingWriting;

    if-nez v3, :cond_1

    goto :goto_0

    .line 6
    :cond_1
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getReadBuffer()Ljava/nio/ByteBuffer;

    move-result-object v0

    add-int/2addr v2, p1

    .line 7
    invoke-direct {p0, v0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->carryIndex(Ljava/nio/ByteBuffer;I)I

    move-result v2

    .line 8
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getReadByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v3

    sub-int/2addr v1, p1

    invoke-direct {p0, v0, v3, v2, v1}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    .line 9
    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->remaining()I

    move-result p1

    if-lt p1, p2, :cond_2

    move-object v4, v0

    :cond_2
    return-object v4

    .line 10
    :cond_3
    :goto_0
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForRead()Ljava/nio/ByteBuffer;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 11
    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->request(II)Ljava/nio/ByteBuffer;

    move-result-object p1

    return-object p1

    :cond_4
    return-object v4
.end method

.method public final resolveChannelInstance$ktor_io()Lio/ktor/utils/io/ByteBufferChannel;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_0

    invoke-direct {p0, p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move-object v0, p0

    :goto_0
    return-object v0
.end method

.method public final restoreStateAfterWrite$ktor_io()V
    .locals 5

    const/4 v0, 0x0

    .line 1
    :cond_0
    iget-object v1, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    .line 2
    move-object v2, v1

    check-cast v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;

    .line 3
    invoke-virtual {v2}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->stopWriting$ktor_io()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v2

    .line 4
    instance-of v3, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    if-eqz v3, :cond_1

    iget-object v3, v2, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    invoke-virtual {v3}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5
    check-cast v2, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;

    .line 6
    sget-object v0, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    move-object v4, v2

    move-object v2, v0

    move-object v0, v4

    .line 7
    :cond_1
    sget-object v3, Lio/ktor/utils/io/ByteBufferChannel;->_state$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    invoke-virtual {v3, p0, v1, v2}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 8
    sget-object v1, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-ne v2, v1, :cond_2

    if-eqz v0, :cond_2

    .line 9
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleNonEmpty;->getInitial()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    move-result-object v0

    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    :cond_2
    return-void
.end method

.method public setReadByteOrder(Lio/ktor/utils/io/core/ByteOrder;)V
    .locals 1

    const-string v0, "<set-?>"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->readByteOrder:Lio/ktor/utils/io/core/ByteOrder;

    return-void
.end method

.method public setTotalBytesRead$ktor_io(J)V
    .locals 0

    .line 1
    iput-wide p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->totalBytesRead:J

    return-void
.end method

.method public setTotalBytesWritten$ktor_io(J)V
    .locals 0

    .line 1
    iput-wide p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->totalBytesWritten:J

    return-void
.end method

.method public setWriteByteOrder(Lio/ktor/utils/io/core/ByteOrder;)V
    .locals 1

    const-string v0, "newOrder"

    invoke-static {p1, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeByteOrder:Lio/ktor/utils/io/core/ByteOrder;

    if-eq v0, p1, :cond_0

    .line 2
    iput-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeByteOrder:Lio/ktor/utils/io/core/ByteOrder;

    .line 3
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/JoiningState;->getDelegatedTo()Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->setWriteByteOrder(Lio/ktor/utils/io/core/ByteOrder;)V

    :cond_0
    return-void
.end method

.method public final setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;
    .locals 7

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteOp()Ln/i0/d;

    move-result-object v0

    if-nez v0, :cond_d

    const/4 v1, 0x0

    move-object v0, v1

    .line 2
    :cond_0
    iget-object v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->_state:Ljava/lang/Object;

    .line 3
    move-object v3, v2

    check-cast v3, Lio/ktor/utils/io/internal/ReadWriteBufferState;

    .line 4
    iget-object v4, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v4, :cond_2

    if-eqz v0, :cond_1

    .line 5
    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    :cond_1
    return-object v1

    .line 6
    :cond_2
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v4

    if-eqz v4, :cond_4

    if-eqz v0, :cond_3

    .line 7
    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    .line 8
    :cond_3
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    invoke-static {v0}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v0

    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0

    .line 9
    :cond_4
    sget-object v4, Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$IdleEmpty;

    if-ne v3, v4, :cond_6

    if-eqz v0, :cond_5

    goto :goto_0

    .line 10
    :cond_5
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->newBuffer()Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;

    move-result-object v0

    .line 11
    :goto_0
    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;->startWriting$ktor_io()Lio/ktor/utils/io/internal/ReadWriteBufferState$Writing;

    move-result-object v5

    goto :goto_1

    .line 12
    :cond_6
    sget-object v5, Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;->INSTANCE:Lio/ktor/utils/io/internal/ReadWriteBufferState$Terminated;

    if-ne v3, v5, :cond_9

    if-eqz v0, :cond_7

    .line 13
    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    .line 14
    :cond_7
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_8

    return-object v1

    .line 15
    :cond_8
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    invoke-static {v0}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v0

    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0

    .line 16
    :cond_9
    invoke-virtual {v3}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->startWriting$ktor_io()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v5

    .line 17
    :goto_1
    sget-object v6, Lio/ktor/utils/io/ByteBufferChannel;->_state$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    invoke-virtual {v6, p0, v2, v5}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 18
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v1

    if-nez v1, :cond_c

    .line 19
    invoke-virtual {v5}, Lio/ktor/utils/io/internal/ReadWriteBufferState;->getWriteBuffer()Ljava/nio/ByteBuffer;

    move-result-object v1

    if-eqz v0, :cond_b

    if-nez v3, :cond_a

    const-string v2, "old"

    .line 20
    invoke-static {v2}, Ln/l0/d/r;->u(Ljava/lang/String;)V

    :cond_a
    if-eq v3, v4, :cond_b

    .line 21
    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->releaseBuffer(Lio/ktor/utils/io/internal/ReadWriteBufferState$Initial;)V

    .line 22
    :cond_b
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v0

    iget v2, p0, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    iget-object v3, v5, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 23
    iget v3, v3, Lio/ktor/utils/io/internal/RingBufferCapacity;->_availableForWrite$internal:I

    .line 24
    invoke-direct {p0, v1, v0, v2, v3}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    return-object v1

    .line 25
    :cond_c
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 26
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    .line 27
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    invoke-static {v0}, Ln/l0/d/r;->c(Ljava/lang/Object;)V

    invoke-virtual {v0}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v0

    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0

    .line 28
    :cond_d
    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Write operation is already in progress: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public startReadSession()Lio/ktor/utils/io/SuspendableReadSession;
    .locals 1

    .line 1
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->readSession:Lio/ktor/utils/io/internal/ReadSessionImpl;

    return-object v0
.end method

.method public toString()Ljava/lang/String;
    .locals 2

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "ByteBufferChannel("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/Object;->hashCode()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getState()Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const/16 v1, 0x29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public final tryTerminate$ktor_io()Z
    .locals 2

    .line 1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_2

    invoke-direct {p0, v1}, Lio/ktor/utils/io/ByteBufferChannel;->tryReleaseBuffer(Z)Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 2
    :cond_0
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v0, :cond_1

    invoke-direct {p0, v0}, Lio/ktor/utils/io/ByteBufferChannel;->ensureClosedJoined(Lio/ktor/utils/io/internal/JoiningState;)V

    .line 3
    :cond_1
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeReadOp()V

    .line 4
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->resumeWriteOp()V

    const/4 v0, 0x1

    return v0

    :cond_2
    :goto_0
    return v1
.end method

.method public final tryWriteSuspend$ktor_io(ILn/i0/d;)Ljava/lang/Object;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 1
    invoke-direct {p0, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendPredicate(I)Z

    move-result v0

    if-nez v0, :cond_3

    .line 2
    invoke-direct {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p1

    if-eqz p1, :cond_1

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    if-nez p1, :cond_0

    goto :goto_0

    :cond_0
    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1

    :cond_1
    :goto_0
    const/4 p1, 0x0

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p2

    if-nez p2, :cond_2

    return-object p1

    .line 3
    :cond_2
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 4
    :cond_3
    iput p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspensionSize:I

    .line 5
    iget-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->attachedJob:Lkotlinx/coroutines/Job;

    if-eqz p1, :cond_6

    .line 6
    iget-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspension:Ln/l0/c/l;

    invoke-interface {p1, p2}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v0

    if-ne p1, v0, :cond_4

    invoke-static {p2}, Ln/i0/j/a/h;->c(Ln/i0/d;)V

    :cond_4
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p2

    if-ne p1, p2, :cond_5

    return-object p1

    :cond_5
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 7
    :cond_6
    iget-object p1, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendContinuationCache:Lio/ktor/utils/io/internal/CancellableReusableContinuation;

    .line 8
    iget-object v0, p0, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspension:Ln/l0/c/l;

    invoke-interface {v0, p1}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    invoke-static {p2}, Ln/i0/i/b;->c(Ln/i0/d;)Ln/i0/d;

    move-result-object v0

    invoke-virtual {p1, v0}, Lio/ktor/utils/io/internal/CancellableReusableContinuation;->completeSuspendBlock(Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    .line 10
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v0

    if-ne p1, v0, :cond_7

    invoke-static {p2}, Ln/i0/j/a/h;->c(Ln/i0/d;)V

    :cond_7
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object p2

    if-ne p1, p2, :cond_8

    return-object p1

    :cond_8
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public write(ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->write$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeAvailable(ILn/l0/c/l;)I
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ln/c0;",
            ">;)I"
        }
    .end annotation

    const-string v0, "block"

    invoke-static {p2, v0}, Ln/l0/d/r;->e(Ljava/lang/Object;Ljava/lang/String;)V

    const/4 v0, 0x1

    const/4 v1, 0x0

    if-lez p1, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v1

    :goto_0
    if-eqz v2, :cond_14

    const/16 v2, 0xff8

    if-gt p1, v2, :cond_1

    move v2, v0

    goto :goto_1

    :cond_1
    move v2, v1

    :goto_1
    if-eqz v2, :cond_13

    .line 1
    invoke-static {p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v2

    if-eqz v2, :cond_2

    invoke-static {p0, p0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v2

    if-eqz v2, :cond_2

    goto :goto_2

    :cond_2
    move-object v2, p0

    .line 2
    :goto_2
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v3

    if-eqz v3, :cond_11

    .line 3
    invoke-static {v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v4

    iget-object v4, v4, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 4
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v5

    .line 5
    :try_start_0
    invoke-static {v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v7

    if-nez v7, :cond_d

    .line 6
    invoke-virtual {v4, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->tryWriteAtLeast(I)I

    move-result p1

    if-gtz p1, :cond_3

    move v0, v1

    goto :goto_4

    .line 7
    :cond_3
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getWriteByteOrder()Lio/ktor/utils/io/core/ByteOrder;

    move-result-object v7

    iget v8, v2, Lio/ktor/utils/io/ByteBufferChannel;->writePosition:I

    invoke-direct {v2, v3, v7, v8, p1}, Lio/ktor/utils/io/ByteBufferChannel;->prepareBuffer(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/core/ByteOrder;II)V

    .line 8
    invoke-virtual {v3}, Ljava/nio/ByteBuffer;->position()I

    move-result v7

    .line 9
    invoke-virtual {v3}, Ljava/nio/ByteBuffer;->limit()I

    move-result v8

    .line 10
    invoke-interface {p2, v3}, Ln/l0/c/l;->invoke(Ljava/lang/Object;)Ljava/lang/Object;

    .line 11
    invoke-virtual {v3}, Ljava/nio/ByteBuffer;->limit()I

    move-result p2

    if-ne v8, p2, :cond_4

    move p2, v0

    goto :goto_3

    :cond_4
    move p2, v1

    :goto_3
    if-eqz p2, :cond_c

    .line 12
    invoke-virtual {v3}, Ljava/nio/ByteBuffer;->position()I

    move-result p2

    sub-int/2addr p2, v7

    if-ltz p2, :cond_5

    move v1, v0

    :cond_5
    if-eqz v1, :cond_b

    if-ltz p2, :cond_a

    .line 13
    invoke-direct {v2, v3, v4, p2}, Lio/ktor/utils/io/ByteBufferChannel;->bytesWritten(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;I)V

    if-ge p2, p1, :cond_6

    sub-int/2addr p1, p2

    .line 14
    invoke-virtual {v4, p1}, Lio/ktor/utils/io/internal/RingBufferCapacity;->completeRead(I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_6
    move v1, p2

    .line 15
    :goto_4
    invoke-virtual {v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p1

    if-nez p1, :cond_7

    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p1

    if-eqz p1, :cond_8

    :cond_7
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_8
    if-eq v2, p0, :cond_9

    .line 16
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide p1

    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v3

    sub-long/2addr v3, v5

    add-long/2addr p1, v3

    invoke-virtual {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 17
    :cond_9
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 18
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    move p1, v1

    move v1, v0

    goto :goto_5

    .line 19
    :cond_a
    :try_start_1
    new-instance p1, Ljava/lang/IllegalStateException;

    invoke-direct {p1}, Ljava/lang/IllegalStateException;-><init>()V

    throw p1

    :cond_b
    const-string p1, "Position has been moved backward: pushback is not supported"

    .line 20
    new-instance p2, Ljava/lang/IllegalStateException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    :cond_c
    const-string p1, "Buffer limit modified"

    .line 21
    new-instance p2, Ljava/lang/IllegalStateException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 22
    :cond_d
    invoke-virtual {v7}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 23
    invoke-virtual {v4}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result p2

    if-nez p2, :cond_e

    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result p2

    if-eqz p2, :cond_f

    :cond_e
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_f
    if-eq v2, p0, :cond_10

    .line 24
    invoke-virtual {p0}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v0

    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v3

    sub-long/2addr v3, v5

    add-long/2addr v0, v3

    invoke-virtual {p0, v0, v1}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 25
    :cond_10
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 26
    invoke-virtual {v2}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw p1

    :cond_11
    move p1, v1

    :goto_5
    if-nez v1, :cond_12

    const/4 p1, -0x1

    :cond_12
    return p1

    .line 27
    :cond_13
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Min("

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ") shouldn\'t be greater than 4088"

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    new-instance p2, Ljava/lang/IllegalArgumentException;

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 28
    :cond_14
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "min should be positive"

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public writeAvailable(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeAvailable(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeAvailable([BIILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;[BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic writeAvailableSuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 7
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->label:I

    const/4 v3, 0x3

    const/4 v4, 0x2

    const/4 v5, 0x1

    if-eqz v2, :cond_4

    if-eq v2, v5, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_3

    .line 8
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 9
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    :cond_3
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/core/IoBuffer;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_4
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 10
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$1:Ljava/lang/Object;

    iput v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->label:I

    invoke-virtual {p0, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_5

    return-object v1

    :cond_5
    move-object v2, p0

    .line 11
    :goto_1
    iget-object p2, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    const/4 v5, 0x0

    if-eqz p2, :cond_7

    invoke-direct {v2, v2, p2}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_7

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$0:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$1:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->label:I

    invoke-virtual {p2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailableSuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_6

    return-object v1

    :cond_6
    :goto_2
    return-object p2

    .line 12
    :cond_7
    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$0:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$3;->label:I

    invoke-virtual {v2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_8

    return-object v1

    :cond_8
    :goto_3
    return-object p2
.end method

.method public final synthetic writeAvailableSuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->label:I

    const/4 v3, 0x3

    const/4 v4, 0x2

    const/4 v5, 0x1

    if-eqz v2, :cond_4

    if-eq v2, v5, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_3

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    :cond_3
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p1, Ljava/nio/ByteBuffer;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    :cond_4
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    iput-object p0, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$1:Ljava/lang/Object;

    iput v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->label:I

    invoke-virtual {p0, v5, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_5

    return-object v1

    :cond_5
    move-object v2, p0

    .line 5
    :goto_1
    iget-object p2, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    const/4 v5, 0x0

    if-eqz p2, :cond_7

    invoke-direct {v2, v2, p2}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_7

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$0:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$1:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->label:I

    invoke-virtual {p2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailableSuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_6

    return-object v1

    :cond_6
    :goto_2
    return-object p2

    .line 6
    :cond_7
    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$0:Ljava/lang/Object;

    iput-object v5, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeAvailableSuspend$1;->label:I

    invoke-virtual {v2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_8

    return-object v1

    :cond_8
    :goto_3
    return-object p2
.end method

.method public writeByte(BLn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(B",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeByte$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;BLn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeDouble(DLn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(D",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->writeDouble$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;DLn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeFloat(FLn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(F",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeFloat$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;FLn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeFully(Lio/ktor/utils/io/core/Buffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/Buffer;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/Buffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeFully(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeFully(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeFully([BIILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;[BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeFully-rGWNHyQ(Ljava/nio/ByteBuffer;IILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "II",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3, p4}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully-rGWNHyQ$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ljava/nio/ByteBuffer;IILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic writeFullySuspend(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/IoBuffer;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 9
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_4

    .line 10
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11
    :cond_2
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/core/IoBuffer;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_3

    :cond_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    .line 12
    :goto_1
    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getWritePosition()I

    move-result p2

    invoke-virtual {p1}, Lio/ktor/utils/io/core/Buffer;->getReadPosition()I

    move-result v5

    if-le p2, v5, :cond_4

    move p2, v4

    goto :goto_2

    :cond_4
    const/4 p2, 0x0

    :goto_2
    if-eqz p2, :cond_8

    .line 13
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->L$1:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->label:I

    invoke-virtual {v2, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryWriteSuspend$ktor_io(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_5

    return-object v1

    .line 14
    :cond_5
    :goto_3
    iget-object p2, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz p2, :cond_7

    invoke-direct {v2, v2, p2}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_7

    const/4 v2, 0x0

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->L$0:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$3;->label:I

    invoke-virtual {p2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully(Lio/ktor/utils/io/core/IoBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_6

    return-object v1

    :cond_6
    :goto_4
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 15
    :cond_7
    invoke-direct {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible(Lio/ktor/utils/io/core/Buffer;)I

    goto :goto_1

    .line 16
    :cond_8
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public final synthetic writeFullySuspend(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/nio/ByteBuffer;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_3

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->L$1:Ljava/lang/Object;

    check-cast p1, Ljava/nio/ByteBuffer;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    :cond_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    .line 4
    :goto_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result p2

    if-eqz p2, :cond_7

    .line 5
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->L$1:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->label:I

    invoke-virtual {v2, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryWriteSuspend$ktor_io(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_4

    return-object v1

    .line 6
    :cond_4
    :goto_2
    iget-object p2, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz p2, :cond_6

    invoke-direct {v2, v2, p2}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_6

    const/4 v2, 0x0

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->L$0:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$1;->label:I

    invoke-virtual {p2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeFully(Ljava/nio/ByteBuffer;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    if-ne p1, v1, :cond_5

    return-object v1

    :cond_5
    :goto_3
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 7
    :cond_6
    invoke-direct {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible(Ljava/nio/ByteBuffer;)I

    goto :goto_1

    .line 8
    :cond_7
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public final synthetic writeFullySuspend([BIILn/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 17
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->I$1:I

    iget p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->I$0:I

    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->L$1:Ljava/lang/Object;

    check-cast p3, [B

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 18
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 19
    :cond_2
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    :goto_1
    if-lez p3, :cond_4

    .line 20
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->L$1:Ljava/lang/Object;

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->I$0:I

    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->I$1:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeFullySuspend$5;->label:I

    invoke-virtual {v2, p1, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeAvailable([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_3

    return-object v1

    :cond_3
    move v4, p3

    move-object p3, p1

    move p1, v4

    :goto_2
    check-cast p4, Ljava/lang/Number;

    invoke-virtual {p4}, Ljava/lang/Number;->intValue()I

    move-result p4

    add-int/2addr p2, p4

    sub-int/2addr p1, p4

    move-object v4, p3

    move p3, p1

    move-object p1, v4

    goto :goto_1

    .line 21
    :cond_4
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public writeInt(ILn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeInt$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;ILn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeLong(JLn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(J",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->writeLong$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;JLn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writePacket(Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/ByteReadPacket;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writePacket$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic writePacketSuspend(Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/ktor/utils/io/core/ByteReadPacket;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->L$0:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/core/ByteReadPacket;

    :try_start_0
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_3

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    iget-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p1, Lio/ktor/utils/io/core/ByteReadPacket;

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_1
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p2

    goto :goto_4

    :cond_3
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    .line 4
    :goto_1
    :try_start_2
    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->getEndOfInput()Z

    move-result p2

    xor-int/2addr p2, v4

    if-eqz p2, :cond_7

    .line 5
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->L$1:Ljava/lang/Object;

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->label:I

    invoke-virtual {v2, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_4

    return-object v1

    .line 6
    :cond_4
    :goto_2
    iget-object p2, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz p2, :cond_6

    invoke-direct {v2, v2, p2}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p2

    if-eqz p2, :cond_6

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->L$0:Ljava/lang/Object;

    const/4 v2, 0x0

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writePacketSuspend$1;->label:I

    invoke-virtual {p2, p1, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writePacket(Lio/ktor/utils/io/core/ByteReadPacket;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, v1, :cond_5

    return-object v1

    .line 7
    :cond_5
    :goto_3
    sget-object p2, Ln/c0;->a:Ln/c0;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->release()V

    return-object p2

    .line 8
    :cond_6
    :try_start_3
    invoke-direct {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->tryWritePacketPart(Lio/ktor/utils/io/core/ByteReadPacket;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_1

    .line 9
    :cond_7
    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->release()V

    .line 10
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1

    .line 11
    :goto_4
    invoke-virtual {p1}, Lio/ktor/utils/io/core/AbstractInput;->release()V

    throw p2
.end method

.method public writeShort(SLn/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(S",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeShort$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;SLn/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic writeSuspend(ILn/i0/d;)Ljava/lang/Object;
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p2, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;

    if-eqz v0, :cond_0

    move-object v0, p2

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;

    invoke-direct {v0, p0, p2}, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 8
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->label:I

    const/4 v3, 0x1

    if-eqz v2, :cond_2

    if-ne v2, v3, :cond_1

    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->I$0:I

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_1

    .line 9
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 10
    :cond_2
    invoke-static {p2}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    .line 11
    :cond_3
    :goto_1
    invoke-direct {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendPredicate(I)Z

    move-result p2

    if-eqz p2, :cond_f

    .line 12
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->L$0:Ljava/lang/Object;

    iput p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->I$0:I

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$3;->label:I

    .line 13
    new-instance p2, Lkotlinx/coroutines/CancellableContinuationImpl;

    invoke-static {v0}, Ln/i0/i/b;->c(Ln/i0/d;)Ln/i0/d;

    move-result-object v4

    invoke-direct {p2, v4, v3}, Lkotlinx/coroutines/CancellableContinuationImpl;-><init>(Ln/i0/d;I)V

    .line 14
    invoke-virtual {p2}, Lkotlinx/coroutines/CancellableContinuationImpl;->initCancellability()V

    .line 15
    :cond_4
    invoke-static {v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v4

    if-eqz v4, :cond_6

    invoke-virtual {v4}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v4

    if-nez v4, :cond_5

    goto :goto_2

    :cond_5
    invoke-static {v4}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1

    .line 16
    :cond_6
    :goto_2
    invoke-static {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$writeSuspendPredicate(Lio/ktor/utils/io/ByteBufferChannel;I)Z

    move-result v4

    if-nez v4, :cond_7

    .line 17
    sget-object v4, Ln/c0;->a:Ln/c0;

    sget-object v5, Ln/n;->a:Ln/n$a;

    invoke-static {v4}, Ln/n;->a(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    invoke-interface {p2, v4}, Ln/i0/d;->resumeWith(Ljava/lang/Object;)V

    goto :goto_5

    .line 18
    :cond_7
    invoke-static {v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$getWriteOp$p(Lio/ktor/utils/io/ByteBufferChannel;)Ln/i0/d;

    move-result-object v4

    const/4 v5, 0x0

    if-nez v4, :cond_8

    move v4, v3

    goto :goto_3

    :cond_8
    move v4, v5

    :goto_3
    if-eqz v4, :cond_e

    invoke-static {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$writeSuspendPredicate(Lio/ktor/utils/io/ByteBufferChannel;I)Z

    move-result v4

    invoke-static {v4}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v4

    if-nez v4, :cond_9

    goto :goto_4

    .line 19
    :cond_9
    sget-object v4, Lio/ktor/utils/io/ByteBufferChannel;->_writeOp$FU:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;

    const/4 v6, 0x0

    invoke-virtual {v4, v2, v6, p2}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_7

    .line 20
    invoke-static {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$writeSuspendPredicate(Lio/ktor/utils/io/ByteBufferChannel;I)Z

    move-result v7

    invoke-static {v7}, Ln/i0/j/a/b;->a(Z)Ljava/lang/Boolean;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v7

    if-nez v7, :cond_a

    invoke-virtual {v4, v2, p2, v6}, Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;->compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_b

    :cond_a
    move v5, v3

    :cond_b
    :goto_4
    if-eqz v5, :cond_4

    .line 21
    :goto_5
    invoke-static {v2, p1}, Lio/ktor/utils/io/ByteBufferChannel;->access$flushImpl(Lio/ktor/utils/io/ByteBufferChannel;I)V

    .line 22
    invoke-static {v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$shouldResumeReadOp(Lio/ktor/utils/io/ByteBufferChannel;)Z

    move-result v4

    if-eqz v4, :cond_c

    .line 23
    invoke-static {v2}, Lio/ktor/utils/io/ByteBufferChannel;->access$resumeReadOp(Lio/ktor/utils/io/ByteBufferChannel;)V

    .line 24
    :cond_c
    invoke-virtual {p2}, Lkotlinx/coroutines/CancellableContinuationImpl;->getResult()Ljava/lang/Object;

    move-result-object p2

    .line 25
    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v4

    if-ne p2, v4, :cond_d

    invoke-static {v0}, Ln/i0/j/a/h;->c(Ln/i0/d;)V

    :cond_d
    if-ne p2, v1, :cond_3

    return-object v1

    .line 26
    :cond_e
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Operation is already in progress"

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 27
    :cond_f
    invoke-direct {v2}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object p1

    if-eqz p1, :cond_11

    invoke-virtual {p1}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object p1

    if-nez p1, :cond_10

    goto :goto_6

    :cond_10
    invoke-static {p1}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance p1, Lkotlin/KotlinNothingValueException;

    invoke-direct {p1}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw p1

    .line 28
    :cond_11
    :goto_6
    sget-object p1, Ln/c0;->a:Ln/c0;

    return-object p1
.end method

.method public final synthetic writeSuspend([BIILn/i0/d;)Ljava/lang/Object;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([BII",
            "Ln/i0/d<",
            "-",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    instance-of v0, p4, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;

    if-eqz v0, :cond_0

    move-object v0, p4

    check-cast v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;

    iget v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->label:I

    const/high16 v2, -0x80000000

    and-int v3, v1, v2

    if-eqz v3, :cond_0

    sub-int/2addr v1, v2

    iput v1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;

    invoke-direct {v0, p0, p4}, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object p4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v1

    .line 1
    iget v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->label:I

    const/4 v3, 0x2

    const/4 v4, 0x1

    if-eqz v2, :cond_3

    if-eq v2, v4, :cond_2

    if-ne v2, v3, :cond_1

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    goto :goto_2

    .line 2
    :cond_1
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3
    :cond_2
    iget p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->I$1:I

    iget p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->I$0:I

    iget-object p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->L$1:Ljava/lang/Object;

    check-cast p3, [B

    iget-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel;

    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v5, p3

    move p3, p1

    move-object p1, v5

    goto :goto_1

    :cond_3
    invoke-static {p4}, Ln/o;->b(Ljava/lang/Object;)V

    move-object v2, p0

    .line 4
    :cond_4
    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->L$0:Ljava/lang/Object;

    iput-object p1, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->L$1:Ljava/lang/Object;

    iput p2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->I$0:I

    iput p3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->I$1:I

    iput v4, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->label:I

    invoke-virtual {v2, v4, v0}, Lio/ktor/utils/io/ByteBufferChannel;->tryWriteSuspend$ktor_io(ILn/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_5

    return-object v1

    .line 5
    :cond_5
    :goto_1
    iget-object p4, v2, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz p4, :cond_7

    invoke-direct {v2, v2, p4}, Lio/ktor/utils/io/ByteBufferChannel;->resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object p4

    if-eqz p4, :cond_7

    const/4 v2, 0x0

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->L$0:Ljava/lang/Object;

    iput-object v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->L$1:Ljava/lang/Object;

    iput v3, v0, Lio/ktor/utils/io/ByteBufferChannel$writeSuspend$1;->label:I

    invoke-virtual {p4, p1, p2, p3, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend([BIILn/i0/d;)Ljava/lang/Object;

    move-result-object p4

    if-ne p4, v1, :cond_6

    return-object v1

    :cond_6
    :goto_2
    return-object p4

    .line 6
    :cond_7
    invoke-direct {v2, p1, p2, p3}, Lio/ktor/utils/io/ByteBufferChannel;->writeAsMuchAsPossible([BII)I

    move-result p4

    if-lez p4, :cond_4

    .line 7
    invoke-static {p4}, Ln/i0/j/a/b;->f(I)Ljava/lang/Integer;

    move-result-object p1

    return-object p1
.end method

.method public writeSuspendSession(Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/p<",
            "-",
            "Lio/ktor/utils/io/WriterSuspendSession;",
            "-",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;+",
            "Ljava/lang/Object;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .annotation runtime Lio/ktor/utils/io/core/ExperimentalIoApi;
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspendSession$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/p;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public writeWhile(Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ljava/lang/Boolean;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    invoke-static {p0, p1, p2}, Lio/ktor/utils/io/ByteBufferChannel;->writeWhile$suspendImpl(Lio/ktor/utils/io/ByteBufferChannel;Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public final synthetic writeWhileSuspend(Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;
    .locals 17
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ln/l0/c/l<",
            "-",
            "Ljava/nio/ByteBuffer;",
            "Ljava/lang/Boolean;",
            ">;",
            "Ln/i0/d<",
            "-",
            "Ln/c0;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    move-object/from16 v1, p0

    move-object/from16 v0, p2

    instance-of v2, v0, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;

    if-eqz v2, :cond_0

    move-object v2, v0

    check-cast v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;

    iget v3, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->label:I

    const/high16 v4, -0x80000000

    and-int v5, v3, v4

    if-eqz v5, :cond_0

    sub-int/2addr v3, v4

    iput v3, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->label:I

    goto :goto_0

    :cond_0
    new-instance v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;

    invoke-direct {v2, v1, v0}, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;-><init>(Lio/ktor/utils/io/ByteBufferChannel;Ln/i0/d;)V

    :goto_0
    iget-object v0, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->result:Ljava/lang/Object;

    invoke-static {}, Ln/i0/i/c;->d()Ljava/lang/Object;

    move-result-object v3

    .line 1
    iget v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->label:I

    const/4 v5, 0x2

    const/4 v6, 0x1

    if-eqz v4, :cond_3

    if-eq v4, v6, :cond_2

    if-ne v4, v5, :cond_1

    invoke-static {v0}, Ln/o;->b(Ljava/lang/Object;)V

    goto/16 :goto_6

    .line 2
    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v2, "call to \'resume\' before \'invoke\' with coroutine"

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3
    :cond_2
    iget-wide v7, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->J$0:J

    iget-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$8:Ljava/lang/Object;

    check-cast v4, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v9, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$7:Ljava/lang/Object;

    check-cast v9, Ljava/nio/ByteBuffer;

    iget-object v10, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$6:Ljava/lang/Object;

    check-cast v10, Lio/ktor/utils/io/internal/RingBufferCapacity;

    iget-object v11, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$5:Ljava/lang/Object;

    check-cast v11, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v12, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$4:Ljava/lang/Object;

    check-cast v12, Lio/ktor/utils/io/internal/RingBufferCapacity;

    iget-object v13, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$3:Ljava/lang/Object;

    check-cast v13, Lio/ktor/utils/io/ByteBufferChannel;

    iget-object v14, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$2:Ljava/lang/Object;

    check-cast v14, Ln/l0/d/c0;

    iget-object v15, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$1:Ljava/lang/Object;

    check-cast v15, Ln/l0/c/l;

    iget-object v5, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$0:Ljava/lang/Object;

    check-cast v5, Lio/ktor/utils/io/ByteBufferChannel;

    :try_start_0
    invoke-static {v0}, Ln/o;->b(Ljava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v0, v15

    goto :goto_2

    :catchall_0
    move-exception v0

    goto/16 :goto_4

    :cond_3
    invoke-static {v0}, Ln/o;->b(Ljava/lang/Object;)V

    .line 4
    new-instance v0, Ln/l0/d/c0;

    invoke-direct {v0}, Ln/l0/d/c0;-><init>()V

    iput-boolean v6, v0, Ln/l0/d/c0;->a:Z

    .line 5
    invoke-static/range {p0 .. p0}, Lio/ktor/utils/io/ByteBufferChannel;->access$getJoining$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/JoiningState;

    move-result-object v4

    if-eqz v4, :cond_4

    invoke-static {v1, v1, v4}, Lio/ktor/utils/io/ByteBufferChannel;->access$resolveDelegation(Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/ByteBufferChannel;Lio/ktor/utils/io/internal/JoiningState;)Lio/ktor/utils/io/ByteBufferChannel;

    move-result-object v4

    if-eqz v4, :cond_4

    move-object v11, v4

    goto :goto_1

    :cond_4
    move-object v11, v1

    .line 6
    :goto_1
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->setupStateForWrite$ktor_io()Ljava/nio/ByteBuffer;

    move-result-object v4

    if-eqz v4, :cond_10

    .line 7
    invoke-static {v11}, Lio/ktor/utils/io/ByteBufferChannel;->access$getState$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ReadWriteBufferState;

    move-result-object v5

    iget-object v12, v5, Lio/ktor/utils/io/internal/ReadWriteBufferState;->capacity:Lio/ktor/utils/io/internal/RingBufferCapacity;

    .line 8
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v7

    .line 9
    :try_start_1
    invoke-static {v11}, Lio/ktor/utils/io/ByteBufferChannel;->access$getClosed$p(Lio/ktor/utils/io/ByteBufferChannel;)Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-nez v5, :cond_c

    move-object v14, v0

    move-object v5, v1

    move-object v13, v5

    move-object v9, v4

    move-object v4, v11

    move-object v10, v12

    move-object/from16 v0, p1

    .line 10
    :cond_5
    :try_start_2
    iput-object v5, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$0:Ljava/lang/Object;

    iput-object v0, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$1:Ljava/lang/Object;

    iput-object v14, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$2:Ljava/lang/Object;

    iput-object v13, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$3:Ljava/lang/Object;

    iput-object v12, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$4:Ljava/lang/Object;

    iput-object v11, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$5:Ljava/lang/Object;

    iput-object v10, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$6:Ljava/lang/Object;

    iput-object v9, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$7:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$8:Ljava/lang/Object;

    iput-wide v7, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->J$0:J

    iput v6, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->label:I

    invoke-virtual {v4, v6, v2}, Lio/ktor/utils/io/ByteBufferChannel;->writeSuspend(ILn/i0/d;)Ljava/lang/Object;

    move-result-object v15

    if-ne v15, v3, :cond_6

    return-object v3

    .line 11
    :cond_6
    :goto_2
    iget-object v15, v4, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v15, :cond_7

    goto :goto_3

    .line 12
    :cond_7
    invoke-direct {v4, v9, v10, v0}, Lio/ktor/utils/io/ByteBufferChannel;->writeWhileLoop(Ljava/nio/ByteBuffer;Lio/ktor/utils/io/internal/RingBufferCapacity;Ln/l0/c/l;)Z

    move-result v15

    if-nez v15, :cond_8

    const/4 v4, 0x0

    .line 13
    iput-boolean v4, v14, Ln/l0/d/c0;->a:Z

    goto :goto_3

    .line 14
    :cond_8
    invoke-direct {v4}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v15
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz v15, :cond_5

    .line 15
    :goto_3
    invoke-virtual {v12}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v4

    if-nez v4, :cond_9

    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v4

    if-eqz v4, :cond_a

    :cond_9
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_a
    if-eq v11, v13, :cond_b

    .line 16
    invoke-virtual {v13}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v9

    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v15

    sub-long/2addr v15, v7

    add-long/2addr v9, v15

    invoke-virtual {v13, v9, v10}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 17
    :cond_b
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 18
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    goto :goto_5

    .line 19
    :cond_c
    :try_start_3
    invoke-virtual {v5}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v0

    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :catchall_1
    move-exception v0

    move-object v13, v1

    .line 20
    :goto_4
    invoke-virtual {v12}, Lio/ktor/utils/io/internal/RingBufferCapacity;->isFull()Z

    move-result v2

    if-nez v2, :cond_d

    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->getAutoFlush()Z

    move-result v2

    if-eqz v2, :cond_e

    :cond_d
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->flush()V

    :cond_e
    if-eq v11, v13, :cond_f

    .line 21
    invoke-virtual {v13}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v2

    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->getTotalBytesWritten()J

    move-result-wide v4

    sub-long/2addr v4, v7

    add-long/2addr v2, v4

    invoke-virtual {v13, v2, v3}, Lio/ktor/utils/io/ByteBufferChannel;->setTotalBytesWritten$ktor_io(J)V

    .line 22
    :cond_f
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->restoreStateAfterWrite$ktor_io()V

    .line 23
    invoke-virtual {v11}, Lio/ktor/utils/io/ByteBufferChannel;->tryTerminate$ktor_io()Z

    throw v0

    :cond_10
    move-object v14, v0

    move-object v5, v1

    move-object/from16 v0, p1

    .line 24
    :goto_5
    iget-boolean v4, v14, Ln/l0/d/c0;->a:Z

    if-nez v4, :cond_11

    sget-object v0, Ln/c0;->a:Ln/c0;

    return-object v0

    .line 25
    :cond_11
    invoke-direct {v5}, Lio/ktor/utils/io/ByteBufferChannel;->getClosed()Lio/ktor/utils/io/internal/ClosedElement;

    move-result-object v4

    if-nez v4, :cond_14

    .line 26
    iget-object v4, v5, Lio/ktor/utils/io/ByteBufferChannel;->joining:Lio/ktor/utils/io/internal/JoiningState;

    if-eqz v4, :cond_13

    const/4 v4, 0x0

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$0:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$1:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$2:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$3:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$4:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$5:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$6:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$7:Ljava/lang/Object;

    iput-object v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->L$8:Ljava/lang/Object;

    const/4 v4, 0x2

    iput v4, v2, Lio/ktor/utils/io/ByteBufferChannel$writeWhileSuspend$1;->label:I

    invoke-virtual {v5, v0, v2}, Lio/ktor/utils/io/ByteBufferChannel;->writeWhile(Ln/l0/c/l;Ln/i0/d;)Ljava/lang/Object;

    move-result-object v0

    if-ne v0, v3, :cond_12

    return-object v3

    .line 27
    :cond_12
    :goto_6
    sget-object v0, Ln/c0;->a:Ln/c0;

    return-object v0

    :cond_13
    sget-object v0, Ln/c0;->a:Ln/c0;

    return-object v0

    .line 28
    :cond_14
    invoke-virtual {v4}, Lio/ktor/utils/io/internal/ClosedElement;->getSendException()Ljava/lang/Throwable;

    move-result-object v0

    invoke-static {v0}, Lio/ktor/utils/io/ByteBufferChannelKt;->access$rethrowClosed(Ljava/lang/Throwable;)Ljava/lang/Void;

    new-instance v0, Lkotlin/KotlinNothingValueException;

    invoke-direct {v0}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v0
.end method
